{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. Data Acquisition (Scrapping data)"],"metadata":{"id":"LHAJK6KoDSST"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AqkFq6u2C3oI","executionInfo":{"status":"ok","timestamp":1733314625902,"user_tz":-420,"elapsed":10170,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"00128c1b-f2d6-4114-eacd-057e287f215b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting google_play_scraper\n","  Downloading google_play_scraper-1.2.7-py3-none-any.whl.metadata (50 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/50.2 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.2/50.2 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading google_play_scraper-1.2.7-py3-none-any.whl (28 kB)\n","Installing collected packages: google_play_scraper\n","Successfully installed google_play_scraper-1.2.7\n"]}],"source":["!pip install google_play_scraper"]},{"cell_type":"code","source":["from google_play_scraper import app\n","import pandas as pd\n","import numpy as np"],"metadata":{"id":"qpnB_11BDk7q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#mengambil data ulasan bahasa inggris, berdasarkan paling relevan, dan 5000 data\n","from google_play_scraper import Sort, reviews\n","\n","result, continuation_token = reviews(\n","    'com.instagram.android',\n","    lang='en', # defaults to 'en'\n","    country='us', # defaults to 'us'\n","    sort=Sort.MOST_RELEVANT, # defaults to Sort.MOST_RELEVANT\n","    count=5000, # defaults to 5000\n","    filter_score_with=None\n",")"],"metadata":{"id":"MAZCQ3f8DghI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# membuat data frame\n","df_busu = pd.DataFrame(np.array(result),columns=['review'])\n","df_busu = df_busu.join(pd.DataFrame(df_busu.pop('review').tolist()))\n","df_busu.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"sWp2Y1gHDqAk","executionInfo":{"status":"ok","timestamp":1733314647469,"user_tz":-420,"elapsed":1425,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"5fa2c3ca-9d64-46fc-9208-fcd4b8998817"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                               reviewId       userName  \\\n","0  4475c951-3920-4247-996b-659ba5b343b3  A Google user   \n","1  fedc3bc9-1cb7-432b-8255-37939364620d  A Google user   \n","2  a3bb6c14-e5c5-4f56-b016-e3912c09159b  A Google user   \n","3  677fc74a-eb35-431c-9f87-af58b898f17f  A Google user   \n","4  3921227a-8b5e-4d7a-9901-73c26f6334b3  A Google user   \n","\n","                                           userImage  \\\n","0  https://play-lh.googleusercontent.com/EGemoI2N...   \n","1  https://play-lh.googleusercontent.com/EGemoI2N...   \n","2  https://play-lh.googleusercontent.com/EGemoI2N...   \n","3  https://play-lh.googleusercontent.com/EGemoI2N...   \n","4  https://play-lh.googleusercontent.com/EGemoI2N...   \n","\n","                                             content  score  thumbsUpCount  \\\n","0  They've totally lost it by now; the app just g...      1            140   \n","1  Usually, I love this app. Just experiencing ma...      3           1237   \n","2  I love this app, but it seems like every time ...      2            423   \n","3  It's always a new, unexplainable problem with ...      2            244   \n","4  This app is perfect when you want to see 10 ad...      2            123   \n","\n","  reviewCreatedVersion                  at replyContent repliedAt  \\\n","0        359.0.0.59.89 2024-12-02 04:00:12         None       NaT   \n","1       357.1.0.52.100 2024-11-19 04:21:00         None       NaT   \n","2        358.0.0.51.97 2024-11-25 06:09:00         None       NaT   \n","3        358.0.0.51.97 2024-11-24 19:59:14         None       NaT   \n","4       357.1.0.52.100 2024-11-25 04:13:26         None       NaT   \n","\n","       appVersion  \n","0   359.0.0.59.89  \n","1  357.1.0.52.100  \n","2   358.0.0.51.97  \n","3   358.0.0.51.97  \n","4  357.1.0.52.100  "],"text/html":["\n","  <div id=\"df-245469a1-ae05-41d8-adbb-12470216409e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>reviewId</th>\n","      <th>userName</th>\n","      <th>userImage</th>\n","      <th>content</th>\n","      <th>score</th>\n","      <th>thumbsUpCount</th>\n","      <th>reviewCreatedVersion</th>\n","      <th>at</th>\n","      <th>replyContent</th>\n","      <th>repliedAt</th>\n","      <th>appVersion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4475c951-3920-4247-996b-659ba5b343b3</td>\n","      <td>A Google user</td>\n","      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n","      <td>They've totally lost it by now; the app just g...</td>\n","      <td>1</td>\n","      <td>140</td>\n","      <td>359.0.0.59.89</td>\n","      <td>2024-12-02 04:00:12</td>\n","      <td>None</td>\n","      <td>NaT</td>\n","      <td>359.0.0.59.89</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>fedc3bc9-1cb7-432b-8255-37939364620d</td>\n","      <td>A Google user</td>\n","      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n","      <td>Usually, I love this app. Just experiencing ma...</td>\n","      <td>3</td>\n","      <td>1237</td>\n","      <td>357.1.0.52.100</td>\n","      <td>2024-11-19 04:21:00</td>\n","      <td>None</td>\n","      <td>NaT</td>\n","      <td>357.1.0.52.100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>a3bb6c14-e5c5-4f56-b016-e3912c09159b</td>\n","      <td>A Google user</td>\n","      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n","      <td>I love this app, but it seems like every time ...</td>\n","      <td>2</td>\n","      <td>423</td>\n","      <td>358.0.0.51.97</td>\n","      <td>2024-11-25 06:09:00</td>\n","      <td>None</td>\n","      <td>NaT</td>\n","      <td>358.0.0.51.97</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>677fc74a-eb35-431c-9f87-af58b898f17f</td>\n","      <td>A Google user</td>\n","      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n","      <td>It's always a new, unexplainable problem with ...</td>\n","      <td>2</td>\n","      <td>244</td>\n","      <td>358.0.0.51.97</td>\n","      <td>2024-11-24 19:59:14</td>\n","      <td>None</td>\n","      <td>NaT</td>\n","      <td>358.0.0.51.97</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3921227a-8b5e-4d7a-9901-73c26f6334b3</td>\n","      <td>A Google user</td>\n","      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n","      <td>This app is perfect when you want to see 10 ad...</td>\n","      <td>2</td>\n","      <td>123</td>\n","      <td>357.1.0.52.100</td>\n","      <td>2024-11-25 04:13:26</td>\n","      <td>None</td>\n","      <td>NaT</td>\n","      <td>357.1.0.52.100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-245469a1-ae05-41d8-adbb-12470216409e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-245469a1-ae05-41d8-adbb-12470216409e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-245469a1-ae05-41d8-adbb-12470216409e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-27cd5db8-f57e-4463-a9fd-fa195229a000\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27cd5db8-f57e-4463-a9fd-fa195229a000')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-27cd5db8-f57e-4463-a9fd-fa195229a000 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_busu","summary":"{\n  \"name\": \"df_busu\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"reviewId\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5000,\n        \"samples\": [\n          \"5eff94f2-cc11-4964-9fb6-d2f242cf67a6\",\n          \"d0d7cc3e-91e0-4172-8ef5-e400a9b47094\",\n          \"0c9bc898-ba95-4b51-adfb-ed4866dd6497\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 489,\n        \"samples\": [\n          \"CDC\",\n          \"Mohammad Moneim\",\n          \"Prem Jha\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"userImage\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 490,\n        \"samples\": [\n          \"https://play-lh.googleusercontent.com/a-/ALV-UjUQoGEzAsN4nLpIWqiLfuPNZKrpGZ6BzzUi5upcSCAerznJAdge\",\n          \"https://play-lh.googleusercontent.com/a-/ALV-UjUsg79dEvtspLE1S3yHQWwRYbzWplZDijToxYvHfHwoSM83Lzgo\",\n          \"https://play-lh.googleusercontent.com/a-/ALV-UjV1_QIR-R8ZtzDVobdvKOHuLyIxd4U7mQPaShEcQXFaR1hfkAy84Q\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4999,\n        \"samples\": [\n          \"Fine app with one glaring problem: HDR videos override your screen brightness to maximum settings. No way to regain control whatsoever. Makes it miserable to use in dark areas. Googling the problem tells me that the video's brights are brighter for added contrast. But if I pull my notification bar down, the screen is still blindingly bright! So the video itself isn't bright. It's a display settings issue.\",\n          \"I don't know what's happening to the filters. When I try to use one of them the upper part of the screen (I already checked it wasn't my phone screen) seems to be flickering and some black squares appear. It hadn't happened before, it started a few days ago. It'd be great if you could get it fixed since it's annoying. Thank you!\",\n          \"Update: still so many bugs on this app. I've reached out multiple times and I get absolutely no response. I've even reported it in the app and still nothing gets done about it. Super frustrating There's a bug and my app keeps closing after 2 seconds. Please fix asap\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thumbsUpCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3774,\n        \"min\": 0,\n        \"max\": 159440,\n        \"num_unique_values\": 575,\n        \"samples\": [\n          152,\n          113,\n          182\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviewCreatedVersion\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"357.0.0.51.100\",\n          \"344.0.0.42.92\",\n          \"351.1.0.42.106\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"at\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-06-12 00:17:37\",\n        \"max\": \"2024-12-03 01:24:57\",\n        \"num_unique_values\": 4999,\n        \"samples\": [\n          \"2024-11-26 12:25:20\",\n          \"2024-09-22 03:09:39\",\n          \"2024-09-20 19:13:43\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"replyContent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Hey, I'm sorry you're having trouble with Instagram messages. You can turn on typing indicators and read receipts in your Settings under 'How others can interact with you' > 'Messages and story replies'.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"repliedAt\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-21 18:10:51\",\n        \"max\": \"2024-11-21 18:10:51\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2024-11-21 18:10:51\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"appVersion\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"357.0.0.51.100\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#data yang dibutuhkan score dan content\n","my_df = df_busu[[ 'score', 'content']]\n","my_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"JHhsxpo7Dsli","executionInfo":{"status":"ok","timestamp":1733314655051,"user_tz":-420,"elapsed":1143,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"7446fcce-03de-4673-d0e7-b8ab3540687e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score                                            content\n","0      1  They've totally lost it by now; the app just g...\n","1      3  Usually, I love this app. Just experiencing ma...\n","2      2  I love this app, but it seems like every time ...\n","3      2  It's always a new, unexplainable problem with ...\n","4      2  This app is perfect when you want to see 10 ad..."],"text/html":["\n","  <div id=\"df-3b2e1bb2-3082-4b80-9a43-b6da2e4e76b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>They've totally lost it by now; the app just g...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Usually, I love this app. Just experiencing ma...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>I love this app, but it seems like every time ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>It's always a new, unexplainable problem with ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>This app is perfect when you want to see 10 ad...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b2e1bb2-3082-4b80-9a43-b6da2e4e76b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b2e1bb2-3082-4b80-9a43-b6da2e4e76b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b2e1bb2-3082-4b80-9a43-b6da2e4e76b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-38c75974-abf8-4ab7-9d49-60cf5dae603c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-38c75974-abf8-4ab7-9d49-60cf5dae603c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-38c75974-abf8-4ab7-9d49-60cf5dae603c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"my_df","summary":"{\n  \"name\": \"my_df\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4999,\n        \"samples\": [\n          \"Fine app with one glaring problem: HDR videos override your screen brightness to maximum settings. No way to regain control whatsoever. Makes it miserable to use in dark areas. Googling the problem tells me that the video's brights are brighter for added contrast. But if I pull my notification bar down, the screen is still blindingly bright! So the video itself isn't bright. It's a display settings issue.\",\n          \"I don't know what's happening to the filters. When I try to use one of them the upper part of the screen (I already checked it wasn't my phone screen) seems to be flickering and some black squares appear. It hadn't happened before, it started a few days ago. It'd be great if you could get it fixed since it's annoying. Thank you!\",\n          \"Update: still so many bugs on this app. I've reached out multiple times and I get absolutely no response. I've even reported it in the app and still nothing gets done about it. Super frustrating There's a bug and my app keeps closing after 2 seconds. Please fix asap\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#memastikan jumlah ulasan yang dimabil\n","len(my_df.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dbm1C6iaD9G5","executionInfo":{"status":"ok","timestamp":1733314660785,"user_tz":-420,"elapsed":354,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"163f40f0-2568-437a-89e7-86512cfaedfc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5000"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":[" #menyimpan data dalam bentuk csv\n","my_df.to_csv(\"scraping_instagram_en.csv\", index = False)"],"metadata":{"id":"WFEcDVDFECm4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#2. Data Exploration (Pre Processing)\n","2.1 Case Folding (mengubah huruf kapital menjadi huruf kecil) dan Cleansing (menghilangkan simbol dan angka tidak penting)\n"],"metadata":{"id":"8V9R9H4sEEuI"}},{"cell_type":"code","source":["#import library\n","import re\n","import string\n","\n","def clean_text(my_df, text_field, new_text_field_name):\n","    # Case folding: mengubah huruf besar ke kecil\n","    my_df[new_text_field_name] = my_df[text_field].str.lower()\n","    # Mengubah tipe data menjadi string\n","    my_df[new_text_field_name] = my_df[new_text_field_name].astype(str)\n","    # Menjaga kontraksi (apostrof) sebelum pembersihan\n","    # Ganti apostrof dalam kontraksi seperti \"I'm\", \"I've\" menjadi _apos_\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r\"\\b(?:i'm|i've|we're|don't|can't|isn't|it's|you're)\\b\",\n","                           lambda match: match.group(0).replace(\"'\", \"_apos_\"), elem)\n","    )\n","    # Menghilangkan simbol dan karakter non-alfabet, angka, dan URL\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r\"[^a-zA-Z0-9\\s_apos_]\", \" \", elem)\n","    )\n","    # Menghilangkan angka\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r\"\\d+\", \" \", elem)\n","    )\n","    # Menghilangkan URL\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r\"http\\S+|www\\S+|https\\S+\", \"\", elem, flags=re.MULTILINE)\n","    )\n","    # Menghilangkan karakter non-ASCII\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r'[^\\x00-\\x7F]+', '', elem)\n","    )\n","    # Menghilangkan tanda baca dan simbol lainnya\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r'[^\\w\\s_apos_]', '', elem)\n","    )\n","    # Menghilangkan tab, newline, dan backslash\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r\"[\\t\\n\\r\\\\]+\", \" \", elem)\n","    )\n","    # Menghilangkan spasi di awal dan akhir serta merapikan spasi berlebih menjadi satu spasi\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: re.sub(r\"\\s+\", \" \", elem).strip()\n","    )\n","    # Mengganti kembali placeholder '_apos_' ke tanda petik (apostrof)\n","    my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","        lambda elem: elem.replace(\"_apos_\", \"'\")\n","    )\n","    return my_df"],"metadata":{"id":"bMPAIbcPEVXJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_df['case_folding'] = my_df['content'].str.lower()\n","my_df['case_folding']\n","\n","data_clean = clean_text(my_df, 'content', 'case_folding')\n","data_clean.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Znk0GIdfEetz","executionInfo":{"status":"ok","timestamp":1732617876981,"user_tz":-420,"elapsed":1120,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"4d89832a-f0a8-405a-ec5d-39127dc4bc83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e9f130a4a472>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df['case_folding'] = my_df['content'].str.lower()\n","<ipython-input-12-fa1410a4ff6a>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[text_field].str.lower()\n","<ipython-input-12-fa1410a4ff6a>:10: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].astype(str)\n","<ipython-input-12-fa1410a4ff6a>:14: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:25: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:30: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:35: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:40: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:45: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:50: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n","<ipython-input-12-fa1410a4ff6a>:55: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  my_df[new_text_field_name] = my_df[new_text_field_name].apply(\n"]},{"output_type":"execute_result","data":{"text/plain":["   score                                            content  \\\n","0      1  So many glitchy issues. Locations delete out o...   \n","1      1  my app just started glitching last night. it w...   \n","2      1  Recently, every single time I try to open the ...   \n","3      1  They really do everything they can to make the...   \n","4      1  Everytime I exit out of a DM or a user's profi...   \n","5      1  Since this last update it's been terrible!!! I...   \n","6      1  Loved this originally until I got hacked in Oc...   \n","7      1  Messages dont send ½ the time. Doesnt tell me ...   \n","8      3  Usually, I love this app. Just experiencing ma...   \n","9      1  Too many ads. Can't even see friends' profiles...   \n","\n","                                        case_folding  \n","0  so many glitchy issues locations delete out of...  \n","1  my app just started glitching last night it wo...  \n","2  recently every single time i try to open the a...  \n","3  they really do everything they can to make the...  \n","4  everytime i exit out of a dm or a user s profi...  \n","5  since this last update it's been terrible i ca...  \n","6  loved this originally until i got hacked in oc...  \n","7  messages dont send the time doesnt tell me whe...  \n","8  usually i love this app just experiencing many...  \n","9  too many ads can't even see friends profiles s...  "],"text/html":["\n","  <div id=\"df-72ba6995-4785-4db1-8bd7-20aef489c57c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","      <th>case_folding</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>So many glitchy issues. Locations delete out o...</td>\n","      <td>so many glitchy issues locations delete out of...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>my app just started glitching last night. it w...</td>\n","      <td>my app just started glitching last night it wo...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Recently, every single time I try to open the ...</td>\n","      <td>recently every single time i try to open the a...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>They really do everything they can to make the...</td>\n","      <td>they really do everything they can to make the...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Everytime I exit out of a DM or a user's profi...</td>\n","      <td>everytime i exit out of a dm or a user s profi...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>Since this last update it's been terrible!!! I...</td>\n","      <td>since this last update it's been terrible i ca...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>Loved this originally until I got hacked in Oc...</td>\n","      <td>loved this originally until i got hacked in oc...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>Messages dont send ½ the time. Doesnt tell me ...</td>\n","      <td>messages dont send the time doesnt tell me whe...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>Usually, I love this app. Just experiencing ma...</td>\n","      <td>usually i love this app just experiencing many...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>Too many ads. Can't even see friends' profiles...</td>\n","      <td>too many ads can't even see friends profiles s...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72ba6995-4785-4db1-8bd7-20aef489c57c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-72ba6995-4785-4db1-8bd7-20aef489c57c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-72ba6995-4785-4db1-8bd7-20aef489c57c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b699b9da-f225-4636-a595-40c22e104704\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b699b9da-f225-4636-a595-40c22e104704')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b699b9da-f225-4636-a595-40c22e104704 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_clean","summary":"{\n  \"name\": \"data_clean\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          \"I've used this app for a long time and today was a completely different experience, the app was working fine until halfway through the day where I couldn't even open the app, it would just say \\\"Instagram has stopped working.\\\" So to fix this, I uninstalled and reinstalled the app. Works for a bit then does the same thing, even did all the other stuff they say to check before. Mad me so mad that I went and got an APK of the previous update just so it worked well. FIX YOUR APP META!!\",\n          \"It is a nice way to connect with people through Instagram but from few days I'm experiencing a new bug that whenever i refresh my chats then it hides some of groups nd shows by searching please fix it as soon as possible.. And i want you to add a new feature that is voice note sharing that all..... Thank you!\",\n          \"Really great app, but far from perfect. Its DM takes a long time to load every time I close and open it. Instagram should add a WhatsApp-like feature where old messages already load without an internet connection.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"i'm not enjoying the updates whatsoever every little addition is stealing something from another app and piling on more stuff that we don't need i don't appreciate the tabs and buttons being rearranged as it had been in the most recent update another issue i find with the app is the algorithm it doesn t support small creators quite like it pushes products and reposted stuff with paid ads in them even if the added features aren t removed i d love to see a reform in the algorithm\",\n          \"i've had login problems for just over a week and half now all i get is white screen i've reset my password a million times and ented a code and followed all the instructions but nothing is working don't want to open a new account as everything on this one i been trying for a few hours some days\",\n          \"very dead it's like an old western ghost town not a soul on here the algorithm is very concerning too poorly designed for most they will never get any followers likes views or link clicks unless you are a half naked girl trying to sell your body on of threads is just as bad and a poor attempt to take x traffic from them x is better than both of these dying apps very disappointed years ago it worked well for all not just who the algo prefers\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["2.2 Tokenizing"],"metadata":{"id":"USANw0OKEw1R"}},{"cell_type":"code","source":["import nltk\n","import re\n","from nltk.tokenize import word_tokenize\n","nltk.download('punkt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_mwu4yO9E0IZ","executionInfo":{"status":"ok","timestamp":1732617936943,"user_tz":-420,"elapsed":4264,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"06020ed3-4c41-4b9d-8368-964a85855a94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Fungsi untuk memperbaiki kontraksi\n","def fix_contractions(text):\n","    # Daftar kontraksi yang umum\n","    contractions_dict = {\n","        r\"\\bI'm\\b\": \"I'm\", r\"\\bI've\\b\": \"I've\", r\"\\bIt's\\b\": \"It's\",\n","        r\"\\bYou're\\b\": \"You're\", r\"\\bHe's\\b\": \"He's\", r\"\\bShe's\\b\": \"She's\",\n","        r\"\\bWe've\\b\": \"We've\", r\"\\bThey're\\b\": \"They're\", r\"\\bCan't\\b\": \"Can't\",\n","        r\"\\bDon't\\b\": \"Don't\", r\"\\bDidn't\\b\": \"Didn't\", r\"\\bIsn't\\b\": \"Isn't\",\n","        r\"\\bWasn't\\b\": \"Wasn't\", r\"\\bAren't\\b\": \"Aren't\"\n","    }\n","\n","    # Terapkan regex untuk setiap kontraksi dalam dictionary\n","    for contraction, fixed in contractions_dict.items():\n","        text = re.sub(contraction, fixed, text)\n","\n","    return text\n","\n","# Tokenisasi yang lebih hati-hati tanpa pemisahan kontraksi yang tidak diinginkan\n","def process_tokenization(text):\n","    # Perbaiki kontraksi terlebih dahulu\n","    text = fix_contractions(text)\n","\n","    # Tokenisasi menggunakan regex yang lebih sederhana\n","    tokens = re.findall(r\"\\b\\w+'\\w+|\\w+|[^\\w\\s]\", text)\n","\n","    return tokens\n","# Terapkan fungsi pada data yang sudah dibersihkan\n","data_clean['tokenizing'] = data_clean['case_folding'].apply(lambda x: process_tokenization(x))\n","\n","# Menampilkan 10 data teratas setelah tokenisasi\n","data_clean.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"eTHarIq9E7AU","executionInfo":{"status":"ok","timestamp":1732617949497,"user_tz":-420,"elapsed":1152,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"748ec543-5170-4eca-942d-edf3e6aa2819"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-0d03cfb9542f>:28: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_clean['tokenizing'] = data_clean['case_folding'].apply(lambda x: process_tokenization(x))\n"]},{"output_type":"execute_result","data":{"text/plain":["   score                                            content  \\\n","0      1  So many glitchy issues. Locations delete out o...   \n","1      1  my app just started glitching last night. it w...   \n","2      1  Recently, every single time I try to open the ...   \n","3      1  They really do everything they can to make the...   \n","4      1  Everytime I exit out of a DM or a user's profi...   \n","5      1  Since this last update it's been terrible!!! I...   \n","6      1  Loved this originally until I got hacked in Oc...   \n","7      1  Messages dont send ½ the time. Doesnt tell me ...   \n","8      3  Usually, I love this app. Just experiencing ma...   \n","9      1  Too many ads. Can't even see friends' profiles...   \n","\n","                                        case_folding  \\\n","0  so many glitchy issues locations delete out of...   \n","1  my app just started glitching last night it wo...   \n","2  recently every single time i try to open the a...   \n","3  they really do everything they can to make the...   \n","4  everytime i exit out of a dm or a user s profi...   \n","5  since this last update it's been terrible i ca...   \n","6  loved this originally until i got hacked in oc...   \n","7  messages dont send the time doesnt tell me whe...   \n","8  usually i love this app just experiencing many...   \n","9  too many ads can't even see friends profiles s...   \n","\n","                                          tokenizing  \n","0  [so, many, glitchy, issues, locations, delete,...  \n","1  [my, app, just, started, glitching, last, nigh...  \n","2  [recently, every, single, time, i, try, to, op...  \n","3  [they, really, do, everything, they, can, to, ...  \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...  \n","5  [since, this, last, update, it's, been, terrib...  \n","6  [loved, this, originally, until, i, got, hacke...  \n","7  [messages, dont, send, the, time, doesnt, tell...  \n","8  [usually, i, love, this, app, just, experienci...  \n","9  [too, many, ads, can't, even, see, friends, pr...  "],"text/html":["\n","  <div id=\"df-2842a5b2-2f82-4a3d-876f-06fa6e34e363\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","      <th>case_folding</th>\n","      <th>tokenizing</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>So many glitchy issues. Locations delete out o...</td>\n","      <td>so many glitchy issues locations delete out of...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>my app just started glitching last night. it w...</td>\n","      <td>my app just started glitching last night it wo...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Recently, every single time I try to open the ...</td>\n","      <td>recently every single time i try to open the a...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>They really do everything they can to make the...</td>\n","      <td>they really do everything they can to make the...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Everytime I exit out of a DM or a user's profi...</td>\n","      <td>everytime i exit out of a dm or a user s profi...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>Since this last update it's been terrible!!! I...</td>\n","      <td>since this last update it's been terrible i ca...</td>\n","      <td>[since, this, last, update, it's, been, terrib...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>Loved this originally until I got hacked in Oc...</td>\n","      <td>loved this originally until i got hacked in oc...</td>\n","      <td>[loved, this, originally, until, i, got, hacke...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>Messages dont send ½ the time. Doesnt tell me ...</td>\n","      <td>messages dont send the time doesnt tell me whe...</td>\n","      <td>[messages, dont, send, the, time, doesnt, tell...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>Usually, I love this app. Just experiencing ma...</td>\n","      <td>usually i love this app just experiencing many...</td>\n","      <td>[usually, i, love, this, app, just, experienci...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>Too many ads. Can't even see friends' profiles...</td>\n","      <td>too many ads can't even see friends profiles s...</td>\n","      <td>[too, many, ads, can't, even, see, friends, pr...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2842a5b2-2f82-4a3d-876f-06fa6e34e363')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2842a5b2-2f82-4a3d-876f-06fa6e34e363 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2842a5b2-2f82-4a3d-876f-06fa6e34e363');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d7fef335-c5d5-4298-be4f-f7ebac129798\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7fef335-c5d5-4298-be4f-f7ebac129798')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d7fef335-c5d5-4298-be4f-f7ebac129798 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_clean","summary":"{\n  \"name\": \"data_clean\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          \"I've used this app for a long time and today was a completely different experience, the app was working fine until halfway through the day where I couldn't even open the app, it would just say \\\"Instagram has stopped working.\\\" So to fix this, I uninstalled and reinstalled the app. Works for a bit then does the same thing, even did all the other stuff they say to check before. Mad me so mad that I went and got an APK of the previous update just so it worked well. FIX YOUR APP META!!\",\n          \"It is a nice way to connect with people through Instagram but from few days I'm experiencing a new bug that whenever i refresh my chats then it hides some of groups nd shows by searching please fix it as soon as possible.. And i want you to add a new feature that is voice note sharing that all..... Thank you!\",\n          \"Really great app, but far from perfect. Its DM takes a long time to load every time I close and open it. Instagram should add a WhatsApp-like feature where old messages already load without an internet connection.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"i'm not enjoying the updates whatsoever every little addition is stealing something from another app and piling on more stuff that we don't need i don't appreciate the tabs and buttons being rearranged as it had been in the most recent update another issue i find with the app is the algorithm it doesn t support small creators quite like it pushes products and reposted stuff with paid ads in them even if the added features aren t removed i d love to see a reform in the algorithm\",\n          \"i've had login problems for just over a week and half now all i get is white screen i've reset my password a million times and ented a code and followed all the instructions but nothing is working don't want to open a new account as everything on this one i been trying for a few hours some days\",\n          \"very dead it's like an old western ghost town not a soul on here the algorithm is very concerning too poorly designed for most they will never get any followers likes views or link clicks unless you are a half naked girl trying to sell your body on of threads is just as bad and a poor attempt to take x traffic from them x is better than both of these dying apps very disappointed years ago it worked well for all not just who the algo prefers\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokenizing\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["2.3 Normalize"],"metadata":{"id":"vVzcvC2GFla_"}},{"cell_type":"code","source":["import pandas as pd\n","from nltk.tokenize import word_tokenize\n","\n","# Mendeklarasikan normalization_dict\n","normalization_dict = {}\n","normalization_dict.update({\n","    'thanks': 'thank you',\n","    'pls': 'please',\n","    'thx': 'thank you',\n","    'sorry': 'apologies',\n","    'omg': 'oh my god',\n","    'lol': 'laugh out loud',\n","    'brb': 'be right back',\n","    'btw': 'by the way',\n","    'idk': 'i don’t know',\n","    'tbh': 'to be honest',\n","    'lmao': 'laughing my ass off',\n","    'fyi': 'for your information',\n","    'sry': 'sorry',\n","    'smh': 'shaking my head',\n","    'rofl': 'rolling on the floor laughing',\n","    'asap': 'as soon as possible',\n","    'bff': 'best friends forever',\n","    'fomo': 'fear of missing out',\n","    'yolo': 'you only live once',\n","    'gtg': 'got to go',\n","    'nvm': 'never mind',\n","    'np': 'no problem',\n","    'cya': 'see you',\n","    'gg': 'good game',\n","    'wfh': 'work from home',\n","    'ftw': 'for the win',\n","    'lmk': 'let me know',\n","    'tmi': 'too much information',\n","    'bbl': 'be back later',\n","    'mfw': 'my face when',\n","    'imo': 'in my opinion',\n","    'atm': 'at the moment',\n","})\n","\n","# Fungsi untuk normalisasi\n","def normalize_token(token, normalization_dict):\n","    if \"'\" in token:  # Memastikan token tidak mengandung tanda petik satu\n","        return token\n","    return normalization_dict.get(token, token)  # Kembalikan token yang sudah dinormalisasi atau token asli\n","\n","# Menggunakan tokenisasi dan normalisasi\n","data_clean['normalized'] = data_clean['tokenizing'].apply(\n","    lambda x: [normalize_token(word, normalization_dict) for word in x]\n",")\n","\n","data_clean.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":434},"id":"6l9lIVfLFp4r","executionInfo":{"status":"ok","timestamp":1732618137730,"user_tz":-420,"elapsed":331,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"ddcb1310-745b-4931-f783-9954c101a5f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-17-bfbb2f83d728>:48: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_clean['normalized'] = data_clean['tokenizing'].apply(\n"]},{"output_type":"execute_result","data":{"text/plain":["   score                                            content  \\\n","0      1  So many glitchy issues. Locations delete out o...   \n","1      1  my app just started glitching last night. it w...   \n","2      1  Recently, every single time I try to open the ...   \n","3      1  They really do everything they can to make the...   \n","4      1  Everytime I exit out of a DM or a user's profi...   \n","\n","                                        case_folding  \\\n","0  so many glitchy issues locations delete out of...   \n","1  my app just started glitching last night it wo...   \n","2  recently every single time i try to open the a...   \n","3  they really do everything they can to make the...   \n","4  everytime i exit out of a dm or a user s profi...   \n","\n","                                          tokenizing  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                          normalized  \n","0  [so, many, glitchy, issues, locations, delete,...  \n","1  [my, app, just, started, glitching, last, nigh...  \n","2  [recently, every, single, time, i, try, to, op...  \n","3  [they, really, do, everything, they, can, to, ...  \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...  "],"text/html":["\n","  <div id=\"df-343914c1-ef9b-452d-9299-da0d90f79c0e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","      <th>case_folding</th>\n","      <th>tokenizing</th>\n","      <th>normalized</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>So many glitchy issues. Locations delete out o...</td>\n","      <td>so many glitchy issues locations delete out of...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>my app just started glitching last night. it w...</td>\n","      <td>my app just started glitching last night it wo...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Recently, every single time I try to open the ...</td>\n","      <td>recently every single time i try to open the a...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>They really do everything they can to make the...</td>\n","      <td>they really do everything they can to make the...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Everytime I exit out of a DM or a user's profi...</td>\n","      <td>everytime i exit out of a dm or a user s profi...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-343914c1-ef9b-452d-9299-da0d90f79c0e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-343914c1-ef9b-452d-9299-da0d90f79c0e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-343914c1-ef9b-452d-9299-da0d90f79c0e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e9644e68-b404-4a17-938b-76d45997693f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9644e68-b404-4a17-938b-76d45997693f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e9644e68-b404-4a17-938b-76d45997693f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_clean","summary":"{\n  \"name\": \"data_clean\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          \"I've used this app for a long time and today was a completely different experience, the app was working fine until halfway through the day where I couldn't even open the app, it would just say \\\"Instagram has stopped working.\\\" So to fix this, I uninstalled and reinstalled the app. Works for a bit then does the same thing, even did all the other stuff they say to check before. Mad me so mad that I went and got an APK of the previous update just so it worked well. FIX YOUR APP META!!\",\n          \"It is a nice way to connect with people through Instagram but from few days I'm experiencing a new bug that whenever i refresh my chats then it hides some of groups nd shows by searching please fix it as soon as possible.. And i want you to add a new feature that is voice note sharing that all..... Thank you!\",\n          \"Really great app, but far from perfect. Its DM takes a long time to load every time I close and open it. Instagram should add a WhatsApp-like feature where old messages already load without an internet connection.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"i'm not enjoying the updates whatsoever every little addition is stealing something from another app and piling on more stuff that we don't need i don't appreciate the tabs and buttons being rearranged as it had been in the most recent update another issue i find with the app is the algorithm it doesn t support small creators quite like it pushes products and reposted stuff with paid ads in them even if the added features aren t removed i d love to see a reform in the algorithm\",\n          \"i've had login problems for just over a week and half now all i get is white screen i've reset my password a million times and ented a code and followed all the instructions but nothing is working don't want to open a new account as everything on this one i been trying for a few hours some days\",\n          \"very dead it's like an old western ghost town not a soul on here the algorithm is very concerning too poorly designed for most they will never get any followers likes views or link clicks unless you are a half naked girl trying to sell your body on of threads is just as bad and a poor attempt to take x traffic from them x is better than both of these dying apps very disappointed years ago it worked well for all not just who the algo prefers\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokenizing\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normalized\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["2.4 Stopword Removal"],"metadata":{"id":"MkdUYTPGFt6n"}},{"cell_type":"code","source":["import pandas as pd\n","from nltk.tokenize import word_tokenize\n","from nltk.corpus import stopwords\n","from nltk.stem import PorterStemmer\n","import string\n","\n","# Pastikan Anda sudah mengimpor stopwords dan PorterStemmer\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","\n","# Inisialisasi stop words dan stemmer\n","stop_words = set(stopwords.words('english'))\n","stemmer = PorterStemmer()\n","\n","# Fungsi untuk menghapus stop words, stemming, dan menghapus tanda baca\n","def preprocess_text(tokens):\n","    # Menghapus stop words dan tanda baca, serta melakukan stemming\n","    tokens = [word for word in tokens if word not in stop_words and word not in string.punctuation]\n","    tokens = [stemmer.stem(word) for word in tokens]\n","    return tokens\n","\n","# Terapkan preprocessing pada kolom 'tokenizing'\n","data_clean['stopwword'] = data_clean['normalized'].apply(preprocess_text)\n","\n","# Menampilkan hasil\n","data_clean.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"6oLYEyKDFzjh","executionInfo":{"status":"ok","timestamp":1732618226636,"user_tz":-420,"elapsed":3273,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"31275c86-1ab6-4761-9786-100ff6a26f70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","<ipython-input-18-3134ce5f48da>:23: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_clean['stopwword'] = data_clean['normalized'].apply(preprocess_text)\n"]},{"output_type":"execute_result","data":{"text/plain":["   score                                            content  \\\n","0      1  So many glitchy issues. Locations delete out o...   \n","1      1  my app just started glitching last night. it w...   \n","2      1  Recently, every single time I try to open the ...   \n","3      1  They really do everything they can to make the...   \n","4      1  Everytime I exit out of a DM or a user's profi...   \n","\n","                                        case_folding  \\\n","0  so many glitchy issues locations delete out of...   \n","1  my app just started glitching last night it wo...   \n","2  recently every single time i try to open the a...   \n","3  they really do everything they can to make the...   \n","4  everytime i exit out of a dm or a user s profi...   \n","\n","                                          tokenizing  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                          normalized  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                           stopwword  \n","0  [mani, glitchi, issu, locat, delet, nowher, le...  \n","1  [app, start, glitch, last, night, open, tri, t...  \n","2  [recent, everi, singl, time, tri, open, app, m...  \n","3  [realli, everyth, make, experi, bad, imag, asp...  \n","4  [everytim, exit, dm, user, profil, page, reel,...  "],"text/html":["\n","  <div id=\"df-2ca1434f-8b04-4731-ad01-c1904a1cb023\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","      <th>case_folding</th>\n","      <th>tokenizing</th>\n","      <th>normalized</th>\n","      <th>stopwword</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>So many glitchy issues. Locations delete out o...</td>\n","      <td>so many glitchy issues locations delete out of...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[mani, glitchi, issu, locat, delet, nowher, le...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>my app just started glitching last night. it w...</td>\n","      <td>my app just started glitching last night it wo...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[app, start, glitch, last, night, open, tri, t...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Recently, every single time I try to open the ...</td>\n","      <td>recently every single time i try to open the a...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recent, everi, singl, time, tri, open, app, m...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>They really do everything they can to make the...</td>\n","      <td>they really do everything they can to make the...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[realli, everyth, make, experi, bad, imag, asp...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Everytime I exit out of a DM or a user's profi...</td>\n","      <td>everytime i exit out of a dm or a user s profi...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytim, exit, dm, user, profil, page, reel,...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ca1434f-8b04-4731-ad01-c1904a1cb023')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ca1434f-8b04-4731-ad01-c1904a1cb023 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ca1434f-8b04-4731-ad01-c1904a1cb023');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-43e8a927-2124-4881-98a4-b0e458d53a36\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43e8a927-2124-4881-98a4-b0e458d53a36')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-43e8a927-2124-4881-98a4-b0e458d53a36 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_clean","summary":"{\n  \"name\": \"data_clean\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          \"I've used this app for a long time and today was a completely different experience, the app was working fine until halfway through the day where I couldn't even open the app, it would just say \\\"Instagram has stopped working.\\\" So to fix this, I uninstalled and reinstalled the app. Works for a bit then does the same thing, even did all the other stuff they say to check before. Mad me so mad that I went and got an APK of the previous update just so it worked well. FIX YOUR APP META!!\",\n          \"It is a nice way to connect with people through Instagram but from few days I'm experiencing a new bug that whenever i refresh my chats then it hides some of groups nd shows by searching please fix it as soon as possible.. And i want you to add a new feature that is voice note sharing that all..... Thank you!\",\n          \"Really great app, but far from perfect. Its DM takes a long time to load every time I close and open it. Instagram should add a WhatsApp-like feature where old messages already load without an internet connection.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"i'm not enjoying the updates whatsoever every little addition is stealing something from another app and piling on more stuff that we don't need i don't appreciate the tabs and buttons being rearranged as it had been in the most recent update another issue i find with the app is the algorithm it doesn t support small creators quite like it pushes products and reposted stuff with paid ads in them even if the added features aren t removed i d love to see a reform in the algorithm\",\n          \"i've had login problems for just over a week and half now all i get is white screen i've reset my password a million times and ented a code and followed all the instructions but nothing is working don't want to open a new account as everything on this one i been trying for a few hours some days\",\n          \"very dead it's like an old western ghost town not a soul on here the algorithm is very concerning too poorly designed for most they will never get any followers likes views or link clicks unless you are a half naked girl trying to sell your body on of threads is just as bad and a poor attempt to take x traffic from them x is better than both of these dying apps very disappointed years ago it worked well for all not just who the algo prefers\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokenizing\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normalized\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stopwword\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["5. Lemmatization"],"metadata":{"id":"CuAqdrXoGDE2"}},{"cell_type":"code","source":["import spacy\n","\n","# Inisialisasi model SpaCy\n","nlp = spacy.load(\"en_core_web_sm\")\n","\n","# Fungsi untuk melakukan lemmatization\n","def lemmatize_tokens(tokens):\n","    lemmatized = [nlp(word)[0].lemma_ for word in tokens]\n","    return lemmatized\n","\n","# Terapkan lemmatization pada kolom 'stopwword'\n","data_clean['lemmatized'] = data_clean['stopwword'].apply(lemmatize_tokens)\n","\n","# Menampilkan hasil\n","data_clean.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"BfJ8e2p-GFd4","executionInfo":{"status":"ok","timestamp":1732619050252,"user_tz":-420,"elapsed":796340,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"63ca85a6-de1a-4d10-b731-2b8d04cd8565"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-19-0f10a06996c7>:12: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_clean['lemmatized'] = data_clean['stopwword'].apply(lemmatize_tokens)\n"]},{"output_type":"execute_result","data":{"text/plain":["   score                                            content  \\\n","0      1  So many glitchy issues. Locations delete out o...   \n","1      1  my app just started glitching last night. it w...   \n","2      1  Recently, every single time I try to open the ...   \n","3      1  They really do everything they can to make the...   \n","4      1  Everytime I exit out of a DM or a user's profi...   \n","\n","                                        case_folding  \\\n","0  so many glitchy issues locations delete out of...   \n","1  my app just started glitching last night it wo...   \n","2  recently every single time i try to open the a...   \n","3  they really do everything they can to make the...   \n","4  everytime i exit out of a dm or a user s profi...   \n","\n","                                          tokenizing  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                          normalized  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                           stopwword  \\\n","0  [mani, glitchi, issu, locat, delet, nowher, le...   \n","1  [app, start, glitch, last, night, open, tri, t...   \n","2  [recent, everi, singl, time, tri, open, app, m...   \n","3  [realli, everyth, make, experi, bad, imag, asp...   \n","4  [everytim, exit, dm, user, profil, page, reel,...   \n","\n","                                          lemmatized  \n","0  [mani, glitchi, issu, locat, delet, nowher, le...  \n","1  [app, start, glitch, last, night, open, tri, t...  \n","2  [recent, everi, singl, time, tri, open, app, m...  \n","3  [realli, everyth, make, experi, bad, imag, asp...  \n","4  [everytim, exit, dm, user, profil, page, reel,...  "],"text/html":["\n","  <div id=\"df-1c799a5a-ef1b-4aee-b434-7961056e39c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","      <th>case_folding</th>\n","      <th>tokenizing</th>\n","      <th>normalized</th>\n","      <th>stopwword</th>\n","      <th>lemmatized</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>So many glitchy issues. Locations delete out o...</td>\n","      <td>so many glitchy issues locations delete out of...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[mani, glitchi, issu, locat, delet, nowher, le...</td>\n","      <td>[mani, glitchi, issu, locat, delet, nowher, le...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>my app just started glitching last night. it w...</td>\n","      <td>my app just started glitching last night it wo...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[app, start, glitch, last, night, open, tri, t...</td>\n","      <td>[app, start, glitch, last, night, open, tri, t...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Recently, every single time I try to open the ...</td>\n","      <td>recently every single time i try to open the a...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recent, everi, singl, time, tri, open, app, m...</td>\n","      <td>[recent, everi, singl, time, tri, open, app, m...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>They really do everything they can to make the...</td>\n","      <td>they really do everything they can to make the...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[realli, everyth, make, experi, bad, imag, asp...</td>\n","      <td>[realli, everyth, make, experi, bad, imag, asp...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Everytime I exit out of a DM or a user's profi...</td>\n","      <td>everytime i exit out of a dm or a user s profi...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytim, exit, dm, user, profil, page, reel,...</td>\n","      <td>[everytim, exit, dm, user, profil, page, reel,...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c799a5a-ef1b-4aee-b434-7961056e39c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c799a5a-ef1b-4aee-b434-7961056e39c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c799a5a-ef1b-4aee-b434-7961056e39c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18af3b9d-292f-4327-a6f6-8a3bc8b00e9d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18af3b9d-292f-4327-a6f6-8a3bc8b00e9d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18af3b9d-292f-4327-a6f6-8a3bc8b00e9d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_clean","summary":"{\n  \"name\": \"data_clean\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          \"I've used this app for a long time and today was a completely different experience, the app was working fine until halfway through the day where I couldn't even open the app, it would just say \\\"Instagram has stopped working.\\\" So to fix this, I uninstalled and reinstalled the app. Works for a bit then does the same thing, even did all the other stuff they say to check before. Mad me so mad that I went and got an APK of the previous update just so it worked well. FIX YOUR APP META!!\",\n          \"It is a nice way to connect with people through Instagram but from few days I'm experiencing a new bug that whenever i refresh my chats then it hides some of groups nd shows by searching please fix it as soon as possible.. And i want you to add a new feature that is voice note sharing that all..... Thank you!\",\n          \"Really great app, but far from perfect. Its DM takes a long time to load every time I close and open it. Instagram should add a WhatsApp-like feature where old messages already load without an internet connection.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"i'm not enjoying the updates whatsoever every little addition is stealing something from another app and piling on more stuff that we don't need i don't appreciate the tabs and buttons being rearranged as it had been in the most recent update another issue i find with the app is the algorithm it doesn t support small creators quite like it pushes products and reposted stuff with paid ads in them even if the added features aren t removed i d love to see a reform in the algorithm\",\n          \"i've had login problems for just over a week and half now all i get is white screen i've reset my password a million times and ented a code and followed all the instructions but nothing is working don't want to open a new account as everything on this one i been trying for a few hours some days\",\n          \"very dead it's like an old western ghost town not a soul on here the algorithm is very concerning too poorly designed for most they will never get any followers likes views or link clicks unless you are a half naked girl trying to sell your body on of threads is just as bad and a poor attempt to take x traffic from them x is better than both of these dying apps very disappointed years ago it worked well for all not just who the algo prefers\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokenizing\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normalized\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stopwword\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lemmatized\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["#menyatukan ulasan perkata menjadi satu kalimat\n","data_clean['data_fixed'] = data_clean['lemmatized'].apply(lambda x: ' '.join(x))\n","data_clean.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":678},"id":"o0gGOoAJJN75","executionInfo":{"status":"ok","timestamp":1732619088687,"user_tz":-420,"elapsed":332,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"7b8a2b18-f78f-4855-d82f-edd793bfb386"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-7c6df9a7923c>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_clean['data_fixed'] = data_clean['lemmatized'].apply(lambda x: ' '.join(x))\n"]},{"output_type":"execute_result","data":{"text/plain":["   score                                            content  \\\n","0      1  So many glitchy issues. Locations delete out o...   \n","1      1  my app just started glitching last night. it w...   \n","2      1  Recently, every single time I try to open the ...   \n","3      1  They really do everything they can to make the...   \n","4      1  Everytime I exit out of a DM or a user's profi...   \n","\n","                                        case_folding  \\\n","0  so many glitchy issues locations delete out of...   \n","1  my app just started glitching last night it wo...   \n","2  recently every single time i try to open the a...   \n","3  they really do everything they can to make the...   \n","4  everytime i exit out of a dm or a user s profi...   \n","\n","                                          tokenizing  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                          normalized  \\\n","0  [so, many, glitchy, issues, locations, delete,...   \n","1  [my, app, just, started, glitching, last, nigh...   \n","2  [recently, every, single, time, i, try, to, op...   \n","3  [they, really, do, everything, they, can, to, ...   \n","4  [everytime, i, exit, out, of, a, dm, or, a, us...   \n","\n","                                           stopwword  \\\n","0  [mani, glitchi, issu, locat, delet, nowher, le...   \n","1  [app, start, glitch, last, night, open, tri, t...   \n","2  [recent, everi, singl, time, tri, open, app, m...   \n","3  [realli, everyth, make, experi, bad, imag, asp...   \n","4  [everytim, exit, dm, user, profil, page, reel,...   \n","\n","                                          lemmatized  \\\n","0  [mani, glitchi, issu, locat, delet, nowher, le...   \n","1  [app, start, glitch, last, night, open, tri, t...   \n","2  [recent, everi, singl, time, tri, open, app, m...   \n","3  [realli, everyth, make, experi, bad, imag, asp...   \n","4  [everytim, exit, dm, user, profil, page, reel,...   \n","\n","                                          data_fixed  \n","0  mani glitchi issu locat delet nowher let post ...  \n","1  app start glitch last night open tri time get ...  \n","2  recent everi singl time tri open app matter te...  \n","3  realli everyth make experi bad imag aspect rat...  \n","4  everytim exit dm user profil page reel weird s...  "],"text/html":["\n","  <div id=\"df-8c0468dc-ca40-4363-beb1-015289dd4974\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>content</th>\n","      <th>case_folding</th>\n","      <th>tokenizing</th>\n","      <th>normalized</th>\n","      <th>stopwword</th>\n","      <th>lemmatized</th>\n","      <th>data_fixed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>So many glitchy issues. Locations delete out o...</td>\n","      <td>so many glitchy issues locations delete out of...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[so, many, glitchy, issues, locations, delete,...</td>\n","      <td>[mani, glitchi, issu, locat, delet, nowher, le...</td>\n","      <td>[mani, glitchi, issu, locat, delet, nowher, le...</td>\n","      <td>mani glitchi issu locat delet nowher let post ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>my app just started glitching last night. it w...</td>\n","      <td>my app just started glitching last night it wo...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[my, app, just, started, glitching, last, nigh...</td>\n","      <td>[app, start, glitch, last, night, open, tri, t...</td>\n","      <td>[app, start, glitch, last, night, open, tri, t...</td>\n","      <td>app start glitch last night open tri time get ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Recently, every single time I try to open the ...</td>\n","      <td>recently every single time i try to open the a...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recently, every, single, time, i, try, to, op...</td>\n","      <td>[recent, everi, singl, time, tri, open, app, m...</td>\n","      <td>[recent, everi, singl, time, tri, open, app, m...</td>\n","      <td>recent everi singl time tri open app matter te...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>They really do everything they can to make the...</td>\n","      <td>they really do everything they can to make the...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[they, really, do, everything, they, can, to, ...</td>\n","      <td>[realli, everyth, make, experi, bad, imag, asp...</td>\n","      <td>[realli, everyth, make, experi, bad, imag, asp...</td>\n","      <td>realli everyth make experi bad imag aspect rat...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Everytime I exit out of a DM or a user's profi...</td>\n","      <td>everytime i exit out of a dm or a user s profi...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytime, i, exit, out, of, a, dm, or, a, us...</td>\n","      <td>[everytim, exit, dm, user, profil, page, reel,...</td>\n","      <td>[everytim, exit, dm, user, profil, page, reel,...</td>\n","      <td>everytim exit dm user profil page reel weird s...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c0468dc-ca40-4363-beb1-015289dd4974')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8c0468dc-ca40-4363-beb1-015289dd4974 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8c0468dc-ca40-4363-beb1-015289dd4974');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3c1bfef9-de75-480d-995e-51089185c347\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c1bfef9-de75-480d-995e-51089185c347')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3c1bfef9-de75-480d-995e-51089185c347 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_clean","summary":"{\n  \"name\": \"data_clean\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          \"I've used this app for a long time and today was a completely different experience, the app was working fine until halfway through the day where I couldn't even open the app, it would just say \\\"Instagram has stopped working.\\\" So to fix this, I uninstalled and reinstalled the app. Works for a bit then does the same thing, even did all the other stuff they say to check before. Mad me so mad that I went and got an APK of the previous update just so it worked well. FIX YOUR APP META!!\",\n          \"It is a nice way to connect with people through Instagram but from few days I'm experiencing a new bug that whenever i refresh my chats then it hides some of groups nd shows by searching please fix it as soon as possible.. And i want you to add a new feature that is voice note sharing that all..... Thank you!\",\n          \"Really great app, but far from perfect. Its DM takes a long time to load every time I close and open it. Instagram should add a WhatsApp-like feature where old messages already load without an internet connection.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"i'm not enjoying the updates whatsoever every little addition is stealing something from another app and piling on more stuff that we don't need i don't appreciate the tabs and buttons being rearranged as it had been in the most recent update another issue i find with the app is the algorithm it doesn t support small creators quite like it pushes products and reposted stuff with paid ads in them even if the added features aren t removed i d love to see a reform in the algorithm\",\n          \"i've had login problems for just over a week and half now all i get is white screen i've reset my password a million times and ented a code and followed all the instructions but nothing is working don't want to open a new account as everything on this one i been trying for a few hours some days\",\n          \"very dead it's like an old western ghost town not a soul on here the algorithm is very concerning too poorly designed for most they will never get any followers likes views or link clicks unless you are a half naked girl trying to sell your body on of threads is just as bad and a poor attempt to take x traffic from them x is better than both of these dying apps very disappointed years ago it worked well for all not just who the algo prefers\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokenizing\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normalized\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stopwword\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lemmatized\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"data_fixed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4984,\n        \"samples\": [\n          \"I enjoy updat whatsoev everi littl addit steal someth anoth app pile stuff need appreci tab button rearrang recent updat anoth issu find app algorithm support small creator quit like push product repost stuff pay ad even ad featur remov love see reform algorithm\",\n          \"app self realli good problem delet post button keep go miss i'v alreadi report problem tri delet instal app start phone even check updat noth work\",\n          \"dead like old western ghost town soul algorithm concern poorli design never get follow like view link click unless half nake girl tri sell bodi thread bad poor attempt take x traffic x well die app disappoint year ago work well algo prefer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["data_clean.to_csv('TextPreprocessingInstagram.csv', index = False)"],"metadata":{"id":"b5NPmENBJXii"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sorted_df = data_clean[['score', 'data_fixed']]\n","sorted_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"BQgeBUAjJaxp","executionInfo":{"status":"ok","timestamp":1732619123637,"user_tz":-420,"elapsed":308,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"3ca4e89e-883f-486f-e638-9d97ebea1af9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score                                         data_fixed\n","0      1  mani glitchi issu locat delet nowher let post ...\n","1      1  app start glitch last night open tri time get ...\n","2      1  recent everi singl time tri open app matter te...\n","3      1  realli everyth make experi bad imag aspect rat...\n","4      1  everytim exit dm user profil page reel weird s..."],"text/html":["\n","  <div id=\"df-cc8f8748-1f0e-477a-a2da-89b2449ad657\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>data_fixed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>mani glitchi issu locat delet nowher let post ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>app start glitch last night open tri time get ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>recent everi singl time tri open app matter te...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>realli everyth make experi bad imag aspect rat...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>everytim exit dm user profil page reel weird s...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc8f8748-1f0e-477a-a2da-89b2449ad657')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cc8f8748-1f0e-477a-a2da-89b2449ad657 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cc8f8748-1f0e-477a-a2da-89b2449ad657');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f348afa1-34a3-4228-a82f-7183ee4cde63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f348afa1-34a3-4228-a82f-7183ee4cde63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f348afa1-34a3-4228-a82f-7183ee4cde63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sorted_df","summary":"{\n  \"name\": \"sorted_df\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"data_fixed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4984,\n        \"samples\": [\n          \"I enjoy updat whatsoev everi littl addit steal someth anoth app pile stuff need appreci tab button rearrang recent updat anoth issu find app algorithm support small creator quit like push product repost stuff pay ad even ad featur remov love see reform algorithm\",\n          \"app self realli good problem delet post button keep go miss i'v alreadi report problem tri delet instal app start phone even check updat noth work\",\n          \"dead like old western ghost town soul algorithm concern poorli design never get follow like view link click unless half nake girl tri sell bodi thread bad poor attempt take x traffic x well die app disappoint year ago work well algo prefer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["sorted_df.to_csv('data_fixed.csv', index = False)"],"metadata":{"id":"KvjNP8_0JdjI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#3. Pelabelan (Vader Lexicon)"],"metadata":{"id":"dhgNgaCWJied"}},{"cell_type":"code","source":["#lexocion based\n","!pip install vaderSentiment\n","import pandas as pd\n","from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n","analyser = SentimentIntensityAnalyzer()\n","\n","file_path = '/content/data_fixed.csv'\n","data = pd.read_csv(file_path)\n","\n","data['data_fixed'] = data['data_fixed'].astype(str)\n","\n","analyser = SentimentIntensityAnalyzer()\n","scores = [analyser.polarity_scores(x) for x in data['data_fixed']]\n","print(scores)\n","data['Compound_score'] = [x['compound'] for x in scores]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d1lVBIWVJyiW","executionInfo":{"status":"ok","timestamp":1734340972795,"user_tz":-420,"elapsed":5810,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"e3b21942-6aad-4716-9767-afaa2a204b76"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting vaderSentiment\n","  Downloading vaderSentiment-3.3.2-py2.py3-none-any.whl.metadata (572 bytes)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from vaderSentiment) (2.32.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->vaderSentiment) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->vaderSentiment) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->vaderSentiment) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->vaderSentiment) (2024.8.30)\n","Downloading vaderSentiment-3.3.2-py2.py3-none-any.whl (125 kB)\n","\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/126.0 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m \u001b[32m122.9/126.0 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m126.0/126.0 kB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: vaderSentiment\n","Successfully installed vaderSentiment-3.3.2\n","[{'neg': 0.176, 'neu': 0.675, 'pos': 0.148, 'compound': -0.0772}, {'neg': 0.136, 'neu': 0.775, 'pos': 0.089, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.81, 'pos': 0.19, 'compound': 0.8225}, {'neg': 0.087, 'neu': 0.663, 'pos': 0.249, 'compound': 0.875}, {'neg': 0.307, 'neu': 0.693, 'pos': 0.0, 'compound': -0.886}, {'neg': 0.125, 'neu': 0.691, 'pos': 0.184, 'compound': 0.3182}, {'neg': 0.052, 'neu': 0.811, 'pos': 0.137, 'compound': 0.5267}, {'neg': 0.123, 'neu': 0.772, 'pos': 0.105, 'compound': 0.0072}, {'neg': 0.225, 'neu': 0.498, 'pos': 0.277, 'compound': 0.34}, {'neg': 0.122, 'neu': 0.878, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.248, 'neu': 0.644, 'pos': 0.108, 'compound': -0.7269}, {'neg': 0.149, 'neu': 0.851, 'pos': 0.0, 'compound': -0.7579}, {'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.3612}, {'neg': 0.14, 'neu': 0.723, 'pos': 0.137, 'compound': -0.0258}, {'neg': 0.116, 'neu': 0.515, 'pos': 0.369, 'compound': 0.9403}, {'neg': 0.0, 'neu': 0.96, 'pos': 0.04, 'compound': 0.2732}, {'neg': 0.069, 'neu': 0.639, 'pos': 0.292, 'compound': 0.7915}, {'neg': 0.0, 'neu': 0.727, 'pos': 0.273, 'compound': 0.9081}, {'neg': 0.212, 'neu': 0.69, 'pos': 0.099, 'compound': -0.7096}, {'neg': 0.109, 'neu': 0.832, 'pos': 0.059, 'compound': -0.1779}, {'neg': 0.053, 'neu': 0.647, 'pos': 0.3, 'compound': 0.9118}, {'neg': 0.0, 'neu': 0.752, 'pos': 0.248, 'compound': 0.8979}, {'neg': 0.079, 'neu': 0.84, 'pos': 0.081, 'compound': 0.2732}, {'neg': 0.09, 'neu': 0.734, 'pos': 0.176, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.765, 'pos': 0.235, 'compound': 0.8834}, {'neg': 0.068, 'neu': 0.875, 'pos': 0.057, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.9, 'pos': 0.1, 'compound': 0.4939}, {'neg': 0.115, 'neu': 0.759, 'pos': 0.126, 'compound': -0.1027}, {'neg': 0.094, 'neu': 0.761, 'pos': 0.145, 'compound': 0.4588}, {'neg': 0.159, 'neu': 0.703, 'pos': 0.139, 'compound': -0.25}, {'neg': 0.207, 'neu': 0.704, 'pos': 0.089, 'compound': -0.7506}, {'neg': 0.117, 'neu': 0.645, 'pos': 0.238, 'compound': 0.7096}, {'neg': 0.092, 'neu': 0.583, 'pos': 0.326, 'compound': 0.9125}, {'neg': 0.229, 'neu': 0.558, 'pos': 0.213, 'compound': -0.2023}, {'neg': 0.094, 'neu': 0.645, 'pos': 0.261, 'compound': 0.8555}, {'neg': 0.219, 'neu': 0.722, 'pos': 0.059, 'compound': -0.8225}, {'neg': 0.038, 'neu': 0.889, 'pos': 0.073, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.945, 'pos': 0.055, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.3818}, {'neg': 0.215, 'neu': 0.785, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.075, 'neu': 0.892, 'pos': 0.033, 'compound': -0.4062}, {'neg': 0.067, 'neu': 0.857, 'pos': 0.076, 'compound': 0.1027}, {'neg': 0.148, 'neu': 0.545, 'pos': 0.307, 'compound': 0.8074}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.8126}, {'neg': 0.173, 'neu': 0.735, 'pos': 0.092, 'compound': -0.5719}, {'neg': 0.088, 'neu': 0.582, 'pos': 0.33, 'compound': 0.9095}, {'neg': 0.103, 'neu': 0.729, 'pos': 0.168, 'compound': 0.4939}, {'neg': 0.095, 'neu': 0.799, 'pos': 0.106, 'compound': -0.1027}, {'neg': 0.102, 'neu': 0.762, 'pos': 0.136, 'compound': 0.3612}, {'neg': 0.088, 'neu': 0.665, 'pos': 0.247, 'compound': 0.7964}, {'neg': 0.135, 'neu': 0.865, 'pos': 0.0, 'compound': -0.7269}, {'neg': 0.097, 'neu': 0.758, 'pos': 0.145, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.772, 'pos': 0.228, 'compound': 0.872}, {'neg': 0.129, 'neu': 0.801, 'pos': 0.07, 'compound': -0.3182}, {'neg': 0.232, 'neu': 0.561, 'pos': 0.207, 'compound': -0.3182}, {'neg': 0.097, 'neu': 0.863, 'pos': 0.04, 'compound': -0.3818}, {'neg': 0.055, 'neu': 0.835, 'pos': 0.11, 'compound': 0.4019}, {'neg': 0.122, 'neu': 0.878, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.7717}, {'neg': 0.0, 'neu': 0.849, 'pos': 0.151, 'compound': 0.8271}, {'neg': 0.18, 'neu': 0.687, 'pos': 0.133, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.739, 'pos': 0.261, 'compound': 0.926}, {'neg': 0.078, 'neu': 0.802, 'pos': 0.12, 'compound': 0.1531}, {'neg': 0.104, 'neu': 0.778, 'pos': 0.118, 'compound': 0.1596}, {'neg': 0.06, 'neu': 0.819, 'pos': 0.122, 'compound': 0.2023}, {'neg': 0.129, 'neu': 0.772, 'pos': 0.098, 'compound': -0.3612}, {'neg': 0.156, 'neu': 0.742, 'pos': 0.102, 'compound': -0.4215}, {'neg': 0.05, 'neu': 0.633, 'pos': 0.317, 'compound': 0.8779}, {'neg': 0.203, 'neu': 0.797, 'pos': 0.0, 'compound': -0.8934}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.813, 'pos': 0.187, 'compound': 0.8126}, {'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.4939}, {'neg': 0.137, 'neu': 0.731, 'pos': 0.132, 'compound': -0.0516}, {'neg': 0.219, 'neu': 0.617, 'pos': 0.165, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.6808}, {'neg': 0.169, 'neu': 0.831, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.07, 'neu': 0.786, 'pos': 0.145, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.764, 'pos': 0.236, 'compound': 0.9062}, {'neg': 0.156, 'neu': 0.844, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.053, 'neu': 0.891, 'pos': 0.056, 'compound': 0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.032, 'neu': 0.92, 'pos': 0.048, 'compound': 0.1779}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.061, 'neu': 0.87, 'pos': 0.07, 'compound': 0.1027}, {'neg': 0.076, 'neu': 0.85, 'pos': 0.074, 'compound': -0.2732}, {'neg': 0.217, 'neu': 0.783, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.173, 'neu': 0.684, 'pos': 0.143, 'compound': -0.1027}, {'neg': 0.145, 'neu': 0.855, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.045, 'neu': 0.775, 'pos': 0.18, 'compound': 0.7184}, {'neg': 0.0, 'neu': 0.736, 'pos': 0.264, 'compound': 0.7845}, {'neg': 0.102, 'neu': 0.829, 'pos': 0.069, 'compound': -0.296}, {'neg': 0.377, 'neu': 0.458, 'pos': 0.166, 'compound': -0.9184}, {'neg': 0.122, 'neu': 0.691, 'pos': 0.187, 'compound': 0.6808}, {'neg': 0.054, 'neu': 0.946, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.119, 'neu': 0.747, 'pos': 0.134, 'compound': -0.0516}, {'neg': 0.2, 'neu': 0.691, 'pos': 0.109, 'compound': -0.5719}, {'neg': 0.185, 'neu': 0.668, 'pos': 0.147, 'compound': -0.4019}, {'neg': 0.096, 'neu': 0.729, 'pos': 0.174, 'compound': 0.3182}, {'neg': 0.158, 'neu': 0.585, 'pos': 0.258, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.929, 'pos': 0.071, 'compound': 0.4404}, {'neg': 0.17, 'neu': 0.766, 'pos': 0.064, 'compound': -0.8316}, {'neg': 0.157, 'neu': 0.761, 'pos': 0.081, 'compound': -0.5994}, {'neg': 0.266, 'neu': 0.507, 'pos': 0.227, 'compound': -0.2732}, {'neg': 0.194, 'neu': 0.806, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.169, 'neu': 0.762, 'pos': 0.069, 'compound': -0.4951}, {'neg': 0.073, 'neu': 0.892, 'pos': 0.035, 'compound': -0.34}, {'neg': 0.174, 'neu': 0.774, 'pos': 0.053, 'compound': -0.7473}, {'neg': 0.079, 'neu': 0.88, 'pos': 0.041, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.687, 'pos': 0.313, 'compound': 0.9531}, {'neg': 0.06, 'neu': 0.776, 'pos': 0.164, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.954, 'pos': 0.046, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.76, 'pos': 0.24, 'compound': 0.8934}, {'neg': 0.256, 'neu': 0.663, 'pos': 0.081, 'compound': -0.8481}, {'neg': 0.089, 'neu': 0.687, 'pos': 0.224, 'compound': 0.7506}, {'neg': 0.212, 'neu': 0.788, 'pos': 0.0, 'compound': -0.875}, {'neg': 0.096, 'neu': 0.662, 'pos': 0.243, 'compound': 0.7906}, {'neg': 0.129, 'neu': 0.871, 'pos': 0.0, 'compound': -0.6705}, {'neg': 0.206, 'neu': 0.678, 'pos': 0.116, 'compound': -0.6249}, {'neg': 0.162, 'neu': 0.81, 'pos': 0.028, 'compound': -0.8074}, {'neg': 0.046, 'neu': 0.792, 'pos': 0.162, 'compound': 0.6124}, {'neg': 0.122, 'neu': 0.689, 'pos': 0.189, 'compound': 0.34}, {'neg': 0.064, 'neu': 0.769, 'pos': 0.167, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.734, 'pos': 0.266, 'compound': 0.9349}, {'neg': 0.138, 'neu': 0.593, 'pos': 0.27, 'compound': 0.7845}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.055, 'neu': 0.752, 'pos': 0.192, 'compound': 0.7096}, {'neg': 0.12, 'neu': 0.789, 'pos': 0.09, 'compound': -0.3818}, {'neg': 0.102, 'neu': 0.647, 'pos': 0.251, 'compound': 0.8225}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.5994}, {'neg': 0.068, 'neu': 0.873, 'pos': 0.059, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.4588}, {'neg': 0.061, 'neu': 0.886, 'pos': 0.053, 'compound': -0.0772}, {'neg': 0.058, 'neu': 0.857, 'pos': 0.086, 'compound': 0.0772}, {'neg': 0.055, 'neu': 0.802, 'pos': 0.143, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.825, 'pos': 0.175, 'compound': 0.8519}, {'neg': 0.133, 'neu': 0.788, 'pos': 0.079, 'compound': -0.296}, {'neg': 0.091, 'neu': 0.835, 'pos': 0.074, 'compound': -0.2263}, {'neg': 0.086, 'neu': 0.831, 'pos': 0.083, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.827, 'pos': 0.173, 'compound': 0.7269}, {'neg': 0.184, 'neu': 0.699, 'pos': 0.116, 'compound': -0.6374}, {'neg': 0.066, 'neu': 0.897, 'pos': 0.038, 'compound': -0.2023}, {'neg': 0.054, 'neu': 0.847, 'pos': 0.098, 'compound': 0.2865}, {'neg': 0.064, 'neu': 0.637, 'pos': 0.299, 'compound': 0.8615}, {'neg': 0.053, 'neu': 0.812, 'pos': 0.134, 'compound': 0.4404}, {'neg': 0.106, 'neu': 0.734, 'pos': 0.159, 'compound': 0.4359}, {'neg': 0.036, 'neu': 0.9, 'pos': 0.064, 'compound': 0.2732}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.116, 'neu': 0.602, 'pos': 0.282, 'compound': 0.7717}, {'neg': 0.039, 'neu': 0.68, 'pos': 0.282, 'compound': 0.875}, {'neg': 0.045, 'neu': 0.862, 'pos': 0.092, 'compound': 0.3182}, {'neg': 0.062, 'neu': 0.793, 'pos': 0.144, 'compound': 0.4404}, {'neg': 0.048, 'neu': 0.758, 'pos': 0.193, 'compound': 0.6474}, {'neg': 0.065, 'neu': 0.861, 'pos': 0.074, 'compound': 0.128}, {'neg': 0.0, 'neu': 0.843, 'pos': 0.157, 'compound': 0.7845}, {'neg': 0.199, 'neu': 0.769, 'pos': 0.032, 'compound': -0.7717}, {'neg': 0.164, 'neu': 0.652, 'pos': 0.184, 'compound': 0.296}, {'neg': 0.133, 'neu': 0.613, 'pos': 0.254, 'compound': 0.7845}, {'neg': 0.211, 'neu': 0.789, 'pos': 0.0, 'compound': -0.8316}, {'neg': 0.0, 'neu': 0.601, 'pos': 0.399, 'compound': 0.8074}, {'neg': 0.061, 'neu': 0.86, 'pos': 0.08, 'compound': 0.2263}, {'neg': 0.184, 'neu': 0.705, 'pos': 0.111, 'compound': -0.6388}, {'neg': 0.053, 'neu': 0.86, 'pos': 0.087, 'compound': 0.1149}, {'neg': 0.052, 'neu': 0.686, 'pos': 0.263, 'compound': 0.9118}, {'neg': 0.098, 'neu': 0.669, 'pos': 0.233, 'compound': 0.7579}, {'neg': 0.089, 'neu': 0.736, 'pos': 0.175, 'compound': 0.34}, {'neg': 0.069, 'neu': 0.797, 'pos': 0.134, 'compound': 0.3612}, {'neg': 0.195, 'neu': 0.636, 'pos': 0.168, 'compound': -0.0516}, {'neg': 0.091, 'neu': 0.827, 'pos': 0.083, 'compound': -0.3182}, {'neg': 0.23, 'neu': 0.65, 'pos': 0.121, 'compound': -0.6908}, {'neg': 0.06, 'neu': 0.845, 'pos': 0.095, 'compound': 0.1779}, {'neg': 0.163, 'neu': 0.837, 'pos': 0.0, 'compound': -0.8225}, {'neg': 0.202, 'neu': 0.64, 'pos': 0.158, 'compound': -0.3244}, {'neg': 0.101, 'neu': 0.72, 'pos': 0.179, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.8271}, {'neg': 0.06, 'neu': 0.737, 'pos': 0.204, 'compound': 0.7351}, {'neg': 0.175, 'neu': 0.75, 'pos': 0.075, 'compound': -0.5574}, {'neg': 0.318, 'neu': 0.573, 'pos': 0.109, 'compound': -0.7906}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.072, 'neu': 0.8, 'pos': 0.128, 'compound': 0.2732}, {'neg': 0.188, 'neu': 0.812, 'pos': 0.0, 'compound': -0.6929}, {'neg': 0.0, 'neu': 0.85, 'pos': 0.15, 'compound': 0.6908}, {'neg': 0.155, 'neu': 0.659, 'pos': 0.186, 'compound': 0.34}, {'neg': 0.058, 'neu': 0.842, 'pos': 0.099, 'compound': 0.2263}, {'neg': 0.125, 'neu': 0.643, 'pos': 0.232, 'compound': 0.7165}, {'neg': 0.0, 'neu': 0.875, 'pos': 0.125, 'compound': 0.5719}, {'neg': 0.233, 'neu': 0.767, 'pos': 0.0, 'compound': -0.802}, {'neg': 0.124, 'neu': 0.835, 'pos': 0.041, 'compound': -0.5994}, {'neg': 0.079, 'neu': 0.856, 'pos': 0.065, 'compound': -0.1531}, {'neg': 0.105, 'neu': 0.672, 'pos': 0.222, 'compound': 0.7003}, {'neg': 0.032, 'neu': 0.831, 'pos': 0.136, 'compound': 0.5423}, {'neg': 0.162, 'neu': 0.624, 'pos': 0.215, 'compound': 0.4055}, {'neg': 0.089, 'neu': 0.585, 'pos': 0.326, 'compound': 0.9432}, {'neg': 0.076, 'neu': 0.859, 'pos': 0.065, 'compound': -0.128}, {'neg': 0.065, 'neu': 0.668, 'pos': 0.267, 'compound': 0.7964}, {'neg': 0.0, 'neu': 0.924, 'pos': 0.076, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.923, 'pos': 0.077, 'compound': 0.3612}, {'neg': 0.093, 'neu': 0.813, 'pos': 0.093, 'compound': 0.0}, {'neg': 0.062, 'neu': 0.817, 'pos': 0.121, 'compound': 0.2732}, {'neg': 0.113, 'neu': 0.887, 'pos': 0.0, 'compound': -0.6249}, {'neg': 0.192, 'neu': 0.698, 'pos': 0.11, 'compound': -0.7096}, {'neg': 0.0, 'neu': 0.668, 'pos': 0.332, 'compound': 0.9169}, {'neg': 0.0, 'neu': 0.863, 'pos': 0.137, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.902, 'pos': 0.098, 'compound': 0.3818}, {'neg': 0.068, 'neu': 0.857, 'pos': 0.076, 'compound': -0.1531}, {'neg': 0.186, 'neu': 0.751, 'pos': 0.063, 'compound': -0.4939}, {'neg': 0.126, 'neu': 0.699, 'pos': 0.174, 'compound': 0.2815}, {'neg': 0.078, 'neu': 0.85, 'pos': 0.072, 'compound': -0.0772}, {'neg': 0.064, 'neu': 0.837, 'pos': 0.099, 'compound': 0.1531}, {'neg': 0.098, 'neu': 0.753, 'pos': 0.149, 'compound': 0.4404}, {'neg': 0.169, 'neu': 0.735, 'pos': 0.097, 'compound': -0.3182}, {'neg': 0.09, 'neu': 0.835, 'pos': 0.075, 'compound': -0.2263}, {'neg': 0.187, 'neu': 0.783, 'pos': 0.03, 'compound': -0.7783}, {'neg': 0.035, 'neu': 0.806, 'pos': 0.159, 'compound': 0.7184}, {'neg': 0.055, 'neu': 0.815, 'pos': 0.13, 'compound': 0.4019}, {'neg': 0.236, 'neu': 0.506, 'pos': 0.258, 'compound': 0.316}, {'neg': 0.062, 'neu': 0.749, 'pos': 0.188, 'compound': 0.5994}, {'neg': 0.044, 'neu': 0.873, 'pos': 0.083, 'compound': 0.4588}, {'neg': 0.159, 'neu': 0.67, 'pos': 0.17, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.831, 'pos': 0.169, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.7003}, {'neg': 0.122, 'neu': 0.829, 'pos': 0.05, 'compound': -0.3818}, {'neg': 0.092, 'neu': 0.829, 'pos': 0.079, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.936, 'pos': 0.064, 'compound': 0.4939}, {'neg': 0.131, 'neu': 0.634, 'pos': 0.236, 'compound': 0.0772}, {'neg': 0.175, 'neu': 0.722, 'pos': 0.103, 'compound': -0.5093}, {'neg': 0.209, 'neu': 0.605, 'pos': 0.186, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.678, 'pos': 0.322, 'compound': 0.8957}, {'neg': 0.154, 'neu': 0.846, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.084, 'neu': 0.787, 'pos': 0.129, 'compound': -0.0516}, {'neg': 0.074, 'neu': 0.852, 'pos': 0.074, 'compound': 0.0}, {'neg': 0.164, 'neu': 0.655, 'pos': 0.181, 'compound': 0.2263}, {'neg': 0.152, 'neu': 0.769, 'pos': 0.079, 'compound': -0.1531}, {'neg': 0.053, 'neu': 0.7, 'pos': 0.247, 'compound': 0.8555}, {'neg': 0.196, 'neu': 0.653, 'pos': 0.151, 'compound': -0.4588}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.134, 'neu': 0.769, 'pos': 0.097, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.81, 'pos': 0.19, 'compound': 0.8519}, {'neg': 0.057, 'neu': 0.723, 'pos': 0.221, 'compound': 0.7506}, {'neg': 0.243, 'neu': 0.673, 'pos': 0.084, 'compound': -0.8591}, {'neg': 0.148, 'neu': 0.813, 'pos': 0.039, 'compound': -0.5574}, {'neg': 0.182, 'neu': 0.701, 'pos': 0.117, 'compound': -0.7096}, {'neg': 0.0, 'neu': 0.767, 'pos': 0.233, 'compound': 0.7783}, {'neg': 0.112, 'neu': 0.757, 'pos': 0.13, 'compound': -0.033}, {'neg': 0.078, 'neu': 0.861, 'pos': 0.061, 'compound': -0.25}, {'neg': 0.067, 'neu': 0.709, 'pos': 0.224, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.875, 'pos': 0.125, 'compound': 0.6637}, {'neg': 0.0, 'neu': 0.969, 'pos': 0.031, 'compound': 0.0772}, {'neg': 0.152, 'neu': 0.65, 'pos': 0.197, 'compound': 0.4939}, {'neg': 0.18, 'neu': 0.729, 'pos': 0.091, 'compound': -0.5994}, {'neg': 0.135, 'neu': 0.767, 'pos': 0.097, 'compound': -0.4019}, {'neg': 0.021, 'neu': 0.777, 'pos': 0.202, 'compound': 0.8591}, {'neg': 0.115, 'neu': 0.8, 'pos': 0.085, 'compound': -0.3182}, {'neg': 0.22, 'neu': 0.668, 'pos': 0.111, 'compound': -0.7096}, {'neg': 0.03, 'neu': 0.835, 'pos': 0.134, 'compound': 0.6249}, {'neg': 0.084, 'neu': 0.79, 'pos': 0.126, 'compound': 0.1724}, {'neg': 0.051, 'neu': 0.685, 'pos': 0.264, 'compound': 0.8252}, {'neg': 0.066, 'neu': 0.778, 'pos': 0.156, 'compound': 0.3818}, {'neg': 0.051, 'neu': 0.913, 'pos': 0.037, 'compound': -0.1779}, {'neg': 0.18, 'neu': 0.617, 'pos': 0.203, 'compound': 0.3182}, {'neg': 0.056, 'neu': 0.768, 'pos': 0.177, 'compound': 0.743}, {'neg': 0.306, 'neu': 0.524, 'pos': 0.17, 'compound': -0.8176}, {'neg': 0.065, 'neu': 0.726, 'pos': 0.209, 'compound': 0.836}, {'neg': 0.17, 'neu': 0.758, 'pos': 0.073, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.8225}, {'neg': 0.066, 'neu': 0.705, 'pos': 0.229, 'compound': 0.6675}, {'neg': 0.091, 'neu': 0.675, 'pos': 0.234, 'compound': 0.7783}, {'neg': 0.224, 'neu': 0.776, 'pos': 0.0, 'compound': -0.7783}, {'neg': 0.128, 'neu': 0.8, 'pos': 0.072, 'compound': -0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.118, 'neu': 0.853, 'pos': 0.028, 'compound': -0.6249}, {'neg': 0.059, 'neu': 0.912, 'pos': 0.029, 'compound': -0.2732}, {'neg': 0.107, 'neu': 0.756, 'pos': 0.138, 'compound': 0.1531}, {'neg': 0.046, 'neu': 0.954, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.117, 'neu': 0.616, 'pos': 0.268, 'compound': 0.7964}, {'neg': 0.156, 'neu': 0.781, 'pos': 0.063, 'compound': -0.5175}, {'neg': 0.062, 'neu': 0.806, 'pos': 0.131, 'compound': 0.25}, {'neg': 0.135, 'neu': 0.837, 'pos': 0.028, 'compound': -0.7184}, {'neg': 0.034, 'neu': 0.777, 'pos': 0.189, 'compound': 0.7506}, {'neg': 0.0, 'neu': 0.85, 'pos': 0.15, 'compound': 0.765}, {'neg': 0.059, 'neu': 0.626, 'pos': 0.315, 'compound': 0.9287}, {'neg': 0.202, 'neu': 0.798, 'pos': 0.0, 'compound': -0.679}, {'neg': 0.0, 'neu': 0.848, 'pos': 0.152, 'compound': 0.6124}, {'neg': 0.055, 'neu': 0.918, 'pos': 0.027, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.757, 'pos': 0.243, 'compound': 0.891}, {'neg': 0.038, 'neu': 0.797, 'pos': 0.165, 'compound': 0.7906}, {'neg': 0.175, 'neu': 0.825, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.861, 'pos': 0.139, 'compound': 0.7269}, {'neg': 0.038, 'neu': 0.797, 'pos': 0.165, 'compound': 0.7906}, {'neg': 0.194, 'neu': 0.661, 'pos': 0.146, 'compound': -0.2732}, {'neg': 0.035, 'neu': 0.503, 'pos': 0.462, 'compound': 0.9633}, {'neg': 0.054, 'neu': 0.85, 'pos': 0.096, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.848, 'pos': 0.152, 'compound': 0.7184}, {'neg': 0.065, 'neu': 0.835, 'pos': 0.1, 'compound': 0.2263}, {'neg': 0.051, 'neu': 0.676, 'pos': 0.273, 'compound': 0.8707}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.23, 'neu': 0.629, 'pos': 0.141, 'compound': -0.4019}, {'neg': 0.328, 'neu': 0.672, 'pos': 0.0, 'compound': -0.9393}, {'neg': 0.137, 'neu': 0.73, 'pos': 0.133, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.762, 'pos': 0.238, 'compound': 0.8957}, {'neg': 0.086, 'neu': 0.685, 'pos': 0.229, 'compound': 0.7717}, {'neg': 0.074, 'neu': 0.799, 'pos': 0.127, 'compound': 0.2263}, {'neg': 0.107, 'neu': 0.845, 'pos': 0.048, 'compound': -0.4767}, {'neg': 0.096, 'neu': 0.768, 'pos': 0.137, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.875}, {'neg': 0.105, 'neu': 0.833, 'pos': 0.062, 'compound': -0.296}, {'neg': 0.089, 'neu': 0.806, 'pos': 0.105, 'compound': 0.1779}, {'neg': 0.046, 'neu': 0.733, 'pos': 0.221, 'compound': 0.8519}, {'neg': 0.054, 'neu': 0.863, 'pos': 0.082, 'compound': 0.1027}, {'neg': 0.096, 'neu': 0.693, 'pos': 0.211, 'compound': 0.743}, {'neg': 0.143, 'neu': 0.665, 'pos': 0.193, 'compound': 0.4767}, {'neg': 0.173, 'neu': 0.827, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.126, 'neu': 0.843, 'pos': 0.03, 'compound': -0.6249}, {'neg': 0.086, 'neu': 0.725, 'pos': 0.188, 'compound': 0.7096}, {'neg': 0.173, 'neu': 0.725, 'pos': 0.102, 'compound': -0.5106}, {'neg': 0.036, 'neu': 0.897, 'pos': 0.067, 'compound': 0.0516}, {'neg': 0.187, 'neu': 0.615, 'pos': 0.197, 'compound': 0.1027}, {'neg': 0.057, 'neu': 0.687, 'pos': 0.255, 'compound': 0.8442}, {'neg': 0.118, 'neu': 0.635, 'pos': 0.247, 'compound': 0.798}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.796, 'pos': 0.204, 'compound': 0.8591}, {'neg': 0.0, 'neu': 0.835, 'pos': 0.165, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.721, 'pos': 0.279, 'compound': 0.9313}, {'neg': 0.134, 'neu': 0.766, 'pos': 0.1, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.866, 'pos': 0.134, 'compound': 0.4767}, {'neg': 0.044, 'neu': 0.771, 'pos': 0.185, 'compound': 0.7184}, {'neg': 0.048, 'neu': 0.775, 'pos': 0.176, 'compound': 0.765}, {'neg': 0.114, 'neu': 0.707, 'pos': 0.179, 'compound': 0.3182}, {'neg': 0.075, 'neu': 0.867, 'pos': 0.058, 'compound': -0.1779}, {'neg': 0.094, 'neu': 0.818, 'pos': 0.088, 'compound': -0.0516}, {'neg': 0.103, 'neu': 0.844, 'pos': 0.053, 'compound': -0.3384}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.394, 'neu': 0.513, 'pos': 0.093, 'compound': -0.9501}, {'neg': 0.047, 'neu': 0.678, 'pos': 0.275, 'compound': 0.8779}, {'neg': 0.141, 'neu': 0.818, 'pos': 0.041, 'compound': -0.6597}, {'neg': 0.122, 'neu': 0.59, 'pos': 0.288, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.733, 'pos': 0.267, 'compound': 0.8591}, {'neg': 0.0, 'neu': 0.659, 'pos': 0.341, 'compound': 0.9565}, {'neg': 0.22, 'neu': 0.78, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.14, 'neu': 0.72, 'pos': 0.14, 'compound': 0.0}, {'neg': 0.179, 'neu': 0.658, 'pos': 0.163, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.729, 'pos': 0.271, 'compound': 0.8555}, {'neg': 0.052, 'neu': 0.785, 'pos': 0.163, 'compound': 0.7003}, {'neg': 0.102, 'neu': 0.66, 'pos': 0.239, 'compound': 0.7717}, {'neg': 0.071, 'neu': 0.929, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.212, 'neu': 0.59, 'pos': 0.198, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.531, 'pos': 0.469, 'compound': 0.9648}, {'neg': 0.0, 'neu': 0.974, 'pos': 0.026, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.704, 'pos': 0.296, 'compound': 0.9313}, {'neg': 0.066, 'neu': 0.736, 'pos': 0.197, 'compound': 0.743}, {'neg': 0.174, 'neu': 0.658, 'pos': 0.168, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.644, 'pos': 0.356, 'compound': 0.958}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.5859}, {'neg': 0.139, 'neu': 0.558, 'pos': 0.303, 'compound': 0.8481}, {'neg': 0.042, 'neu': 0.781, 'pos': 0.177, 'compound': 0.7506}, {'neg': 0.153, 'neu': 0.595, 'pos': 0.252, 'compound': 0.5423}, {'neg': 0.121, 'neu': 0.764, 'pos': 0.115, 'compound': -0.0772}, {'neg': 0.056, 'neu': 0.793, 'pos': 0.15, 'compound': 0.3612}, {'neg': 0.077, 'neu': 0.8, 'pos': 0.123, 'compound': 0.1779}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.23, 'neu': 0.667, 'pos': 0.104, 'compound': -0.6249}, {'neg': 0.182, 'neu': 0.749, 'pos': 0.069, 'compound': -0.6486}, {'neg': 0.187, 'neu': 0.721, 'pos': 0.092, 'compound': -0.4939}, {'neg': 0.17, 'neu': 0.696, 'pos': 0.134, 'compound': -0.25}, {'neg': 0.324, 'neu': 0.676, 'pos': 0.0, 'compound': -0.9531}, {'neg': 0.035, 'neu': 0.766, 'pos': 0.199, 'compound': 0.7906}, {'neg': 0.057, 'neu': 0.892, 'pos': 0.05, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.83, 'pos': 0.17, 'compound': 0.802}, {'neg': 0.0, 'neu': 0.683, 'pos': 0.317, 'compound': 0.9315}, {'neg': 0.058, 'neu': 0.73, 'pos': 0.212, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.856, 'pos': 0.144, 'compound': 0.6808}, {'neg': 0.093, 'neu': 0.67, 'pos': 0.237, 'compound': 0.7906}, {'neg': 0.294, 'neu': 0.57, 'pos': 0.136, 'compound': -0.7351}, {'neg': 0.115, 'neu': 0.78, 'pos': 0.105, 'compound': 0.1027}, {'neg': 0.031, 'neu': 0.84, 'pos': 0.13, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.857, 'pos': 0.143, 'compound': 0.7717}, {'neg': 0.0, 'neu': 0.892, 'pos': 0.108, 'compound': 0.6249}, {'neg': 0.178, 'neu': 0.68, 'pos': 0.143, 'compound': -0.3818}, {'neg': 0.097, 'neu': 0.802, 'pos': 0.101, 'compound': -0.2182}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.097, 'neu': 0.63, 'pos': 0.273, 'compound': 0.7676}, {'neg': 0.154, 'neu': 0.712, 'pos': 0.133, 'compound': -0.2865}, {'neg': 0.0, 'neu': 0.555, 'pos': 0.445, 'compound': 0.9805}, {'neg': 0.029, 'neu': 0.868, 'pos': 0.103, 'compound': 0.5574}, {'neg': 0.037, 'neu': 0.814, 'pos': 0.15, 'compound': 0.6486}, {'neg': 0.042, 'neu': 0.591, 'pos': 0.367, 'compound': 0.963}, {'neg': 0.0, 'neu': 0.71, 'pos': 0.29, 'compound': 0.9313}, {'neg': 0.043, 'neu': 0.87, 'pos': 0.087, 'compound': 0.2263}, {'neg': 0.172, 'neu': 0.784, 'pos': 0.045, 'compound': -0.7783}, {'neg': 0.133, 'neu': 0.788, 'pos': 0.079, 'compound': -0.296}, {'neg': 0.206, 'neu': 0.747, 'pos': 0.047, 'compound': -0.8204}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.6124}, {'neg': 0.083, 'neu': 0.872, 'pos': 0.045, 'compound': -0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.207, 'neu': 0.761, 'pos': 0.032, 'compound': -0.872}, {'neg': 0.107, 'neu': 0.849, 'pos': 0.044, 'compound': -0.5267}, {'neg': 0.0, 'neu': 0.533, 'pos': 0.467, 'compound': 0.9741}, {'neg': 0.128, 'neu': 0.559, 'pos': 0.313, 'compound': 0.8357}, {'neg': 0.049, 'neu': 0.764, 'pos': 0.187, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.942, 'pos': 0.058, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.4404}, {'neg': 0.183, 'neu': 0.69, 'pos': 0.128, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.8126}, {'neg': 0.058, 'neu': 0.759, 'pos': 0.183, 'compound': 0.765}, {'neg': 0.168, 'neu': 0.769, 'pos': 0.063, 'compound': -0.5423}, {'neg': 0.134, 'neu': 0.794, 'pos': 0.072, 'compound': -0.3612}, {'neg': 0.055, 'neu': 0.75, 'pos': 0.195, 'compound': 0.7351}, {'neg': 0.054, 'neu': 0.787, 'pos': 0.158, 'compound': 0.631}, {'neg': 0.087, 'neu': 0.646, 'pos': 0.266, 'compound': 0.8126}, {'neg': 0.0, 'neu': 0.839, 'pos': 0.161, 'compound': 0.7717}, {'neg': 0.057, 'neu': 0.573, 'pos': 0.37, 'compound': 0.9595}, {'neg': 0.0, 'neu': 0.765, 'pos': 0.235, 'compound': 0.8225}, {'neg': 0.0, 'neu': 0.903, 'pos': 0.097, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.6124}, {'neg': 0.143, 'neu': 0.664, 'pos': 0.193, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.849, 'pos': 0.151, 'compound': 0.6908}, {'neg': 0.167, 'neu': 0.599, 'pos': 0.235, 'compound': 0.4951}, {'neg': 0.125, 'neu': 0.875, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.296}, {'neg': 0.22, 'neu': 0.78, 'pos': 0.0, 'compound': -0.8402}, {'neg': 0.0, 'neu': 0.712, 'pos': 0.288, 'compound': 0.93}, {'neg': 0.0, 'neu': 0.819, 'pos': 0.181, 'compound': 0.6486}, {'neg': 0.112, 'neu': 0.794, 'pos': 0.094, 'compound': -0.1531}, {'neg': 0.07, 'neu': 0.719, 'pos': 0.211, 'compound': 0.7383}, {'neg': 0.076, 'neu': 0.924, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.108, 'neu': 0.751, 'pos': 0.141, 'compound': 0.1779}, {'neg': 0.23, 'neu': 0.626, 'pos': 0.144, 'compound': -0.6249}, {'neg': 0.0, 'neu': 0.829, 'pos': 0.171, 'compound': 0.7506}, {'neg': 0.237, 'neu': 0.678, 'pos': 0.085, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.825, 'pos': 0.175, 'compound': 0.8442}, {'neg': 0.146, 'neu': 0.638, 'pos': 0.217, 'compound': 0.4404}, {'neg': 0.098, 'neu': 0.817, 'pos': 0.086, 'compound': -0.3818}, {'neg': 0.138, 'neu': 0.684, 'pos': 0.178, 'compound': 0.34}, {'neg': 0.203, 'neu': 0.772, 'pos': 0.024, 'compound': -0.8592}, {'neg': 0.055, 'neu': 0.869, 'pos': 0.077, 'compound': 0.0258}, {'neg': 0.112, 'neu': 0.749, 'pos': 0.139, 'compound': 0.296}, {'neg': 0.04, 'neu': 0.886, 'pos': 0.074, 'compound': 0.1531}, {'neg': 0.097, 'neu': 0.654, 'pos': 0.249, 'compound': 0.8025}, {'neg': 0.129, 'neu': 0.811, 'pos': 0.06, 'compound': -0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.749, 'pos': 0.251, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.621, 'pos': 0.379, 'compound': 0.8807}, {'neg': 0.15, 'neu': 0.82, 'pos': 0.03, 'compound': -0.7269}, {'neg': 0.203, 'neu': 0.754, 'pos': 0.043, 'compound': -0.7096}, {'neg': 0.158, 'neu': 0.662, 'pos': 0.181, 'compound': -0.0258}, {'neg': 0.165, 'neu': 0.706, 'pos': 0.129, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.829, 'pos': 0.171, 'compound': 0.6403}, {'neg': 0.0, 'neu': 0.806, 'pos': 0.194, 'compound': 0.7845}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.167, 'neu': 0.833, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.9313}, {'neg': 0.356, 'neu': 0.536, 'pos': 0.109, 'compound': -0.9452}, {'neg': 0.145, 'neu': 0.493, 'pos': 0.362, 'compound': 0.7845}, {'neg': 0.175, 'neu': 0.65, 'pos': 0.175, 'compound': -0.25}, {'neg': 0.185, 'neu': 0.759, 'pos': 0.056, 'compound': -0.7003}, {'neg': 0.055, 'neu': 0.8, 'pos': 0.145, 'compound': 0.5574}, {'neg': 0.136, 'neu': 0.864, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.93, 'pos': 0.07, 'compound': 0.3612}, {'neg': 0.303, 'neu': 0.525, 'pos': 0.172, 'compound': -0.7579}, {'neg': 0.083, 'neu': 0.708, 'pos': 0.209, 'compound': 0.6249}, {'neg': 0.087, 'neu': 0.761, 'pos': 0.152, 'compound': 0.3182}, {'neg': 0.082, 'neu': 0.74, 'pos': 0.178, 'compound': 0.701}, {'neg': 0.051, 'neu': 0.824, 'pos': 0.125, 'compound': 0.4588}, {'neg': 0.064, 'neu': 0.74, 'pos': 0.196, 'compound': 0.5423}, {'neg': 0.09, 'neu': 0.773, 'pos': 0.137, 'compound': 0.3523}, {'neg': 0.032, 'neu': 0.771, 'pos': 0.197, 'compound': 0.7964}, {'neg': 0.041, 'neu': 0.724, 'pos': 0.235, 'compound': 0.8176}, {'neg': 0.095, 'neu': 0.905, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.167, 'neu': 0.774, 'pos': 0.059, 'compound': -0.5423}, {'neg': 0.126, 'neu': 0.767, 'pos': 0.107, 'compound': -0.2023}, {'neg': 0.023, 'neu': 0.891, 'pos': 0.085, 'compound': 0.4939}, {'neg': 0.188, 'neu': 0.777, 'pos': 0.035, 'compound': -0.7717}, {'neg': 0.0, 'neu': 0.737, 'pos': 0.263, 'compound': 0.9325}, {'neg': 0.0, 'neu': 0.956, 'pos': 0.044, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.85, 'pos': 0.15, 'compound': 0.6486}, {'neg': 0.112, 'neu': 0.833, 'pos': 0.055, 'compound': -0.4215}, {'neg': 0.182, 'neu': 0.753, 'pos': 0.065, 'compound': -0.5267}, {'neg': 0.0, 'neu': 0.602, 'pos': 0.398, 'compound': 0.9661}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.17, 'neu': 0.784, 'pos': 0.046, 'compound': -0.6908}, {'neg': 0.144, 'neu': 0.75, 'pos': 0.106, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.9403}, {'neg': 0.0, 'neu': 0.787, 'pos': 0.213, 'compound': 0.765}, {'neg': 0.16, 'neu': 0.637, 'pos': 0.202, 'compound': 0.4404}, {'neg': 0.053, 'neu': 0.722, 'pos': 0.225, 'compound': 0.8402}, {'neg': 0.093, 'neu': 0.857, 'pos': 0.05, 'compound': -0.5106}, {'neg': 0.116, 'neu': 0.741, 'pos': 0.143, 'compound': 0.3612}, {'neg': 0.028, 'neu': 0.85, 'pos': 0.123, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.942, 'pos': 0.058, 'compound': 0.34}, {'neg': 0.116, 'neu': 0.665, 'pos': 0.219, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.7845}, {'neg': 0.063, 'neu': 0.937, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.188, 'neu': 0.689, 'pos': 0.123, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.925, 'pos': 0.075, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.6486}, {'neg': 0.098, 'neu': 0.866, 'pos': 0.036, 'compound': -0.4939}, {'neg': 0.102, 'neu': 0.762, 'pos': 0.136, 'compound': 0.2263}, {'neg': 0.069, 'neu': 0.613, 'pos': 0.319, 'compound': 0.8481}, {'neg': 0.069, 'neu': 0.823, 'pos': 0.108, 'compound': 0.3612}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.5106}, {'neg': 0.134, 'neu': 0.669, 'pos': 0.197, 'compound': 0.5574}, {'neg': 0.257, 'neu': 0.634, 'pos': 0.109, 'compound': -0.7096}, {'neg': 0.353, 'neu': 0.595, 'pos': 0.051, 'compound': -0.9287}, {'neg': 0.202, 'neu': 0.644, 'pos': 0.154, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.787, 'pos': 0.213, 'compound': 0.6597}, {'neg': 0.166, 'neu': 0.657, 'pos': 0.177, 'compound': 0.1027}, {'neg': 0.068, 'neu': 0.627, 'pos': 0.306, 'compound': 0.8176}, {'neg': 0.051, 'neu': 0.798, 'pos': 0.151, 'compound': 0.5994}, {'neg': 0.0, 'neu': 0.793, 'pos': 0.207, 'compound': 0.8885}, {'neg': 0.173, 'neu': 0.763, 'pos': 0.064, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.8074}, {'neg': 0.201, 'neu': 0.721, 'pos': 0.077, 'compound': -0.7184}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.146, 'neu': 0.783, 'pos': 0.07, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.796, 'pos': 0.204, 'compound': 0.7506}, {'neg': 0.116, 'neu': 0.683, 'pos': 0.201, 'compound': 0.4939}, {'neg': 0.084, 'neu': 0.863, 'pos': 0.053, 'compound': -0.3182}, {'neg': 0.06, 'neu': 0.619, 'pos': 0.321, 'compound': 0.8957}, {'neg': 0.114, 'neu': 0.789, 'pos': 0.097, 'compound': 0.0772}, {'neg': 0.18, 'neu': 0.82, 'pos': 0.0, 'compound': -0.7208}, {'neg': 0.141, 'neu': 0.79, 'pos': 0.069, 'compound': -0.6486}, {'neg': 0.254, 'neu': 0.746, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.083, 'neu': 0.917, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.101, 'neu': 0.581, 'pos': 0.318, 'compound': 0.891}, {'neg': 0.184, 'neu': 0.664, 'pos': 0.152, 'compound': -0.3612}, {'neg': 0.0, 'neu': 0.879, 'pos': 0.121, 'compound': 0.5859}, {'neg': 0.101, 'neu': 0.79, 'pos': 0.108, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.68, 'pos': 0.32, 'compound': 0.9325}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.093, 'neu': 0.833, 'pos': 0.073, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.668, 'pos': 0.332, 'compound': 0.9371}, {'neg': 0.072, 'neu': 0.742, 'pos': 0.186, 'compound': 0.7357}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.6705}, {'neg': 0.156, 'neu': 0.736, 'pos': 0.108, 'compound': -0.296}, {'neg': 0.049, 'neu': 0.704, 'pos': 0.246, 'compound': 0.6808}, {'neg': 0.059, 'neu': 0.786, 'pos': 0.155, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.689, 'pos': 0.311, 'compound': 0.9477}, {'neg': 0.173, 'neu': 0.746, 'pos': 0.081, 'compound': -0.4767}, {'neg': 0.038, 'neu': 0.634, 'pos': 0.327, 'compound': 0.9319}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.8316}, {'neg': 0.169, 'neu': 0.831, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.167, 'neu': 0.833, 'pos': 0.0, 'compound': -0.802}, {'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'compound': 0.9618}, {'neg': 0.159, 'neu': 0.793, 'pos': 0.049, 'compound': -0.6486}, {'neg': 0.088, 'neu': 0.777, 'pos': 0.135, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.6249}, {'neg': 0.088, 'neu': 0.912, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.063, 'neu': 0.937, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.892, 'pos': 0.108, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.961, 'pos': 0.039, 'compound': 0.0772}, {'neg': 0.137, 'neu': 0.763, 'pos': 0.099, 'compound': -0.128}, {'neg': 0.104, 'neu': 0.712, 'pos': 0.185, 'compound': 0.296}, {'neg': 0.159, 'neu': 0.748, 'pos': 0.093, 'compound': -0.5859}, {'neg': 0.0, 'neu': 0.777, 'pos': 0.223, 'compound': 0.8885}, {'neg': 0.065, 'neu': 0.828, 'pos': 0.107, 'compound': 0.2263}, {'neg': 0.077, 'neu': 0.831, 'pos': 0.092, 'compound': 0.128}, {'neg': 0.066, 'neu': 0.88, 'pos': 0.054, 'compound': -0.128}, {'neg': 0.07, 'neu': 0.809, 'pos': 0.12, 'compound': 0.2263}, {'neg': 0.075, 'neu': 0.78, 'pos': 0.146, 'compound': 0.2732}, {'neg': 0.035, 'neu': 0.757, 'pos': 0.208, 'compound': 0.8039}, {'neg': 0.092, 'neu': 0.684, 'pos': 0.225, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.94, 'pos': 0.06, 'compound': 0.3818}, {'neg': 0.059, 'neu': 0.461, 'pos': 0.48, 'compound': 0.9531}, {'neg': 0.16, 'neu': 0.678, 'pos': 0.162, 'compound': 0.0258}, {'neg': 0.193, 'neu': 0.704, 'pos': 0.104, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.739, 'pos': 0.261, 'compound': 0.93}, {'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.2732}, {'neg': 0.041, 'neu': 0.959, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.685, 'pos': 0.315, 'compound': 0.8442}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.858, 'pos': 0.142, 'compound': 0.5106}, {'neg': 0.064, 'neu': 0.769, 'pos': 0.167, 'compound': 0.6705}, {'neg': 0.092, 'neu': 0.65, 'pos': 0.257, 'compound': 0.6249}, {'neg': 0.305, 'neu': 0.553, 'pos': 0.142, 'compound': -0.9081}, {'neg': 0.0, 'neu': 0.935, 'pos': 0.065, 'compound': 0.2023}, {'neg': 0.157, 'neu': 0.843, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.08, 'neu': 0.839, 'pos': 0.08, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.4404}, {'neg': 0.287, 'neu': 0.562, 'pos': 0.152, 'compound': -0.5859}, {'neg': 0.078, 'neu': 0.624, 'pos': 0.298, 'compound': 0.836}, {'neg': 0.071, 'neu': 0.611, 'pos': 0.318, 'compound': 0.9186}, {'neg': 0.144, 'neu': 0.722, 'pos': 0.134, 'compound': -0.1027}, {'neg': 0.213, 'neu': 0.576, 'pos': 0.21, 'compound': -0.2732}, {'neg': 0.073, 'neu': 0.86, 'pos': 0.067, 'compound': -0.0772}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.142, 'neu': 0.693, 'pos': 0.165, 'compound': 0.276}, {'neg': 0.0, 'neu': 0.848, 'pos': 0.152, 'compound': 0.6124}, {'neg': 0.163, 'neu': 0.591, 'pos': 0.246, 'compound': 0.6369}, {'neg': 0.108, 'neu': 0.686, 'pos': 0.206, 'compound': 0.5106}, {'neg': 0.071, 'neu': 0.821, 'pos': 0.108, 'compound': 0.4363}, {'neg': 0.048, 'neu': 0.897, 'pos': 0.055, 'compound': 0.0772}, {'neg': 0.12, 'neu': 0.829, 'pos': 0.051, 'compound': -0.4588}, {'neg': 0.0, 'neu': 0.758, 'pos': 0.242, 'compound': 0.7184}, {'neg': 0.072, 'neu': 0.707, 'pos': 0.221, 'compound': 0.9062}, {'neg': 0.0, 'neu': 0.928, 'pos': 0.072, 'compound': 0.4019}, {'neg': 0.047, 'neu': 0.697, 'pos': 0.256, 'compound': 0.8779}, {'neg': 0.182, 'neu': 0.735, 'pos': 0.084, 'compound': -0.5859}, {'neg': 0.114, 'neu': 0.653, 'pos': 0.233, 'compound': 0.7269}, {'neg': 0.143, 'neu': 0.714, 'pos': 0.143, 'compound': -0.0}, {'neg': 0.053, 'neu': 0.718, 'pos': 0.229, 'compound': 0.8591}, {'neg': 0.041, 'neu': 0.82, 'pos': 0.139, 'compound': 0.6705}, {'neg': 0.264, 'neu': 0.687, 'pos': 0.049, 'compound': -0.8979}, {'neg': 0.0, 'neu': 0.688, 'pos': 0.312, 'compound': 0.9442}, {'neg': 0.123, 'neu': 0.809, 'pos': 0.068, 'compound': -0.3818}, {'neg': 0.066, 'neu': 0.784, 'pos': 0.15, 'compound': 0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.723, 'pos': 0.277, 'compound': 0.872}, {'neg': 0.0, 'neu': 0.806, 'pos': 0.194, 'compound': 0.7506}, {'neg': 0.176, 'neu': 0.824, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.0, 'neu': 0.547, 'pos': 0.453, 'compound': 0.9578}, {'neg': 0.065, 'neu': 0.873, 'pos': 0.062, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.662, 'pos': 0.338, 'compound': 0.9509}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.145, 'neu': 0.779, 'pos': 0.075, 'compound': -0.4019}, {'neg': 0.067, 'neu': 0.843, 'pos': 0.09, 'compound': 0.2023}, {'neg': 0.084, 'neu': 0.844, 'pos': 0.071, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.592, 'pos': 0.408, 'compound': 0.9584}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.055, 'neu': 0.793, 'pos': 0.151, 'compound': 0.6124}, {'neg': 0.111, 'neu': 0.758, 'pos': 0.131, 'compound': 0.2023}, {'neg': 0.242, 'neu': 0.546, 'pos': 0.211, 'compound': -0.1921}, {'neg': 0.122, 'neu': 0.588, 'pos': 0.29, 'compound': 0.8126}, {'neg': 0.0, 'neu': 0.599, 'pos': 0.401, 'compound': 0.9643}, {'neg': 0.129, 'neu': 0.794, 'pos': 0.077, 'compound': -0.4157}, {'neg': 0.089, 'neu': 0.911, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.08, 'neu': 0.803, 'pos': 0.117, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.907, 'pos': 0.093, 'compound': 0.3612}, {'neg': 0.074, 'neu': 0.767, 'pos': 0.159, 'compound': 0.296}, {'neg': 0.075, 'neu': 0.765, 'pos': 0.16, 'compound': 0.5713}, {'neg': 0.0, 'neu': 0.579, 'pos': 0.421, 'compound': 0.9022}, {'neg': 0.086, 'neu': 0.914, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.089, 'neu': 0.696, 'pos': 0.215, 'compound': 0.7676}, {'neg': 0.0, 'neu': 0.706, 'pos': 0.294, 'compound': 0.8402}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.093, 'neu': 0.907, 'pos': 0.0, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.681, 'pos': 0.319, 'compound': 0.8807}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.115, 'neu': 0.767, 'pos': 0.117, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.745, 'pos': 0.255, 'compound': 0.9337}, {'neg': 0.149, 'neu': 0.819, 'pos': 0.032, 'compound': -0.6908}, {'neg': 0.152, 'neu': 0.63, 'pos': 0.218, 'compound': 0.4404}, {'neg': 0.096, 'neu': 0.745, 'pos': 0.16, 'compound': 0.3818}, {'neg': 0.077, 'neu': 0.693, 'pos': 0.23, 'compound': 0.7351}, {'neg': 0.155, 'neu': 0.787, 'pos': 0.058, 'compound': -0.5859}, {'neg': 0.081, 'neu': 0.766, 'pos': 0.153, 'compound': 0.2732}, {'neg': 0.044, 'neu': 0.956, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.267, 'neu': 0.677, 'pos': 0.056, 'compound': -0.872}, {'neg': 0.304, 'neu': 0.507, 'pos': 0.189, 'compound': -0.6124}, {'neg': 0.17, 'neu': 0.789, 'pos': 0.041, 'compound': -0.6249}, {'neg': 0.096, 'neu': 0.714, 'pos': 0.189, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.3612}, {'neg': 0.036, 'neu': 0.651, 'pos': 0.313, 'compound': 0.9432}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.1, 'neu': 0.9, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.902, 'pos': 0.098, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.814, 'pos': 0.186, 'compound': 0.5859}, {'neg': 0.038, 'neu': 0.611, 'pos': 0.351, 'compound': 0.93}, {'neg': 0.091, 'neu': 0.624, 'pos': 0.286, 'compound': 0.8523}, {'neg': 0.169, 'neu': 0.695, 'pos': 0.136, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.479, 'pos': 0.521, 'compound': 0.9755}, {'neg': 0.063, 'neu': 0.774, 'pos': 0.163, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.6369}, {'neg': 0.107, 'neu': 0.755, 'pos': 0.137, 'compound': 0.128}, {'neg': 0.061, 'neu': 0.85, 'pos': 0.09, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.888, 'pos': 0.112, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.6808}, {'neg': 0.206, 'neu': 0.541, 'pos': 0.253, 'compound': 0.3239}, {'neg': 0.042, 'neu': 0.845, 'pos': 0.113, 'compound': 0.5719}, {'neg': 0.127, 'neu': 0.66, 'pos': 0.212, 'compound': 0.3818}, {'neg': 0.083, 'neu': 0.657, 'pos': 0.26, 'compound': 0.6369}, {'neg': 0.188, 'neu': 0.705, 'pos': 0.107, 'compound': -0.34}, {'neg': 0.098, 'neu': 0.902, 'pos': 0.0, 'compound': -0.4588}, {'neg': 0.134, 'neu': 0.866, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.923, 'pos': 0.077, 'compound': 0.5267}, {'neg': 0.139, 'neu': 0.693, 'pos': 0.169, 'compound': 0.0258}, {'neg': 0.037, 'neu': 0.645, 'pos': 0.318, 'compound': 0.9388}, {'neg': 0.082, 'neu': 0.846, 'pos': 0.073, 'compound': -0.0772}, {'neg': 0.279, 'neu': 0.627, 'pos': 0.094, 'compound': -0.8957}, {'neg': 0.09, 'neu': 0.863, 'pos': 0.047, 'compound': -0.296}, {'neg': 0.047, 'neu': 0.805, 'pos': 0.148, 'compound': 0.5859}, {'neg': 0.107, 'neu': 0.725, 'pos': 0.168, 'compound': 0.4404}, {'neg': 0.068, 'neu': 0.789, 'pos': 0.143, 'compound': 0.34}, {'neg': 0.073, 'neu': 0.811, 'pos': 0.116, 'compound': 0.1531}, {'neg': 0.152, 'neu': 0.696, 'pos': 0.152, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.765, 'pos': 0.235, 'compound': 0.8591}, {'neg': 0.141, 'neu': 0.859, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.657, 'pos': 0.343, 'compound': 0.9607}, {'neg': 0.063, 'neu': 0.866, 'pos': 0.072, 'compound': -0.128}, {'neg': 0.176, 'neu': 0.773, 'pos': 0.051, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.594, 'pos': 0.406, 'compound': 0.9648}, {'neg': 0.088, 'neu': 0.755, 'pos': 0.157, 'compound': 0.3182}, {'neg': 0.114, 'neu': 0.791, 'pos': 0.095, 'compound': -0.2263}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.12, 'neu': 0.7, 'pos': 0.18, 'compound': 0.4588}, {'neg': 0.135, 'neu': 0.835, 'pos': 0.029, 'compound': -0.6908}, {'neg': 0.337, 'neu': 0.663, 'pos': 0.0, 'compound': -0.936}, {'neg': 0.246, 'neu': 0.611, 'pos': 0.143, 'compound': -0.6808}, {'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.6369}, {'neg': 0.163, 'neu': 0.593, 'pos': 0.244, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.86, 'pos': 0.14, 'compound': 0.6369}, {'neg': 0.133, 'neu': 0.867, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.05, 'neu': 0.874, 'pos': 0.076, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.757, 'pos': 0.243, 'compound': 0.9287}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.643, 'pos': 0.357, 'compound': 0.8808}, {'neg': 0.141, 'neu': 0.733, 'pos': 0.127, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.924, 'pos': 0.076, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.8176}, {'neg': 0.155, 'neu': 0.719, 'pos': 0.126, 'compound': -0.3182}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.4215}, {'neg': 0.189, 'neu': 0.596, 'pos': 0.214, 'compound': 0.34}, {'neg': 0.046, 'neu': 0.641, 'pos': 0.314, 'compound': 0.9313}, {'neg': 0.0, 'neu': 0.56, 'pos': 0.44, 'compound': 0.9524}, {'neg': 0.105, 'neu': 0.669, 'pos': 0.225, 'compound': 0.7845}, {'neg': 0.065, 'neu': 0.878, 'pos': 0.056, 'compound': -0.1027}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.135, 'neu': 0.865, 'pos': 0.0, 'compound': -0.6517}, {'neg': 0.127, 'neu': 0.833, 'pos': 0.04, 'compound': -0.5267}, {'neg': 0.057, 'neu': 0.89, 'pos': 0.053, 'compound': -0.0516}, {'neg': 0.27, 'neu': 0.657, 'pos': 0.073, 'compound': -0.5719}, {'neg': 0.202, 'neu': 0.696, 'pos': 0.102, 'compound': -0.5574}, {'neg': 0.146, 'neu': 0.678, 'pos': 0.176, 'compound': 0.2008}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.7184}, {'neg': 0.11, 'neu': 0.712, 'pos': 0.178, 'compound': 0.2732}, {'neg': 0.059, 'neu': 0.771, 'pos': 0.17, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.698, 'pos': 0.302, 'compound': 0.8689}, {'neg': 0.068, 'neu': 0.886, 'pos': 0.046, 'compound': -0.2263}, {'neg': 0.128, 'neu': 0.525, 'pos': 0.348, 'compound': 0.8316}, {'neg': 0.157, 'neu': 0.843, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.049, 'neu': 0.787, 'pos': 0.165, 'compound': 0.4767}, {'neg': 0.221, 'neu': 0.636, 'pos': 0.143, 'compound': -0.5975}, {'neg': 0.194, 'neu': 0.642, 'pos': 0.164, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.6249}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.136, 'neu': 0.734, 'pos': 0.129, 'compound': -0.0516}, {'neg': 0.09, 'neu': 0.743, 'pos': 0.167, 'compound': 0.3612}, {'neg': 0.075, 'neu': 0.889, 'pos': 0.036, 'compound': -0.34}, {'neg': 0.253, 'neu': 0.48, 'pos': 0.267, 'compound': 0.1779}, {'neg': 0.137, 'neu': 0.62, 'pos': 0.243, 'compound': 0.5994}, {'neg': 0.114, 'neu': 0.763, 'pos': 0.123, 'compound': -0.1531}, {'neg': 0.222, 'neu': 0.53, 'pos': 0.248, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.708, 'pos': 0.292, 'compound': 0.9001}, {'neg': 0.069, 'neu': 0.867, 'pos': 0.064, 'compound': -0.0516}, {'neg': 0.044, 'neu': 0.798, 'pos': 0.158, 'compound': 0.6597}, {'neg': 0.078, 'neu': 0.86, 'pos': 0.063, 'compound': -0.1386}, {'neg': 0.057, 'neu': 0.638, 'pos': 0.304, 'compound': 0.8225}, {'neg': 0.126, 'neu': 0.688, 'pos': 0.186, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.933, 'pos': 0.067, 'compound': 0.2023}, {'neg': 0.165, 'neu': 0.642, 'pos': 0.193, 'compound': -0.0258}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.235, 'neu': 0.682, 'pos': 0.083, 'compound': -0.6124}, {'neg': 0.158, 'neu': 0.842, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.039, 'neu': 0.961, 'pos': 0.0, 'compound': -0.1695}, {'neg': 0.0, 'neu': 0.815, 'pos': 0.185, 'compound': 0.5106}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.761, 'pos': 0.239, 'compound': 0.7096}, {'neg': 0.155, 'neu': 0.845, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.068, 'neu': 0.771, 'pos': 0.162, 'compound': 0.3964}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.074, 'neu': 0.714, 'pos': 0.212, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.951, 'pos': 0.049, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.923, 'pos': 0.077, 'compound': 0.3612}, {'neg': 0.063, 'neu': 0.907, 'pos': 0.03, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.836, 'pos': 0.164, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.8885}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.5511}, {'neg': 0.0, 'neu': 0.762, 'pos': 0.238, 'compound': 0.6486}, {'neg': 0.258, 'neu': 0.644, 'pos': 0.098, 'compound': -0.5719}, {'neg': 0.117, 'neu': 0.72, 'pos': 0.163, 'compound': 0.0516}, {'neg': 0.066, 'neu': 0.815, 'pos': 0.119, 'compound': 0.1779}, {'neg': 0.125, 'neu': 0.761, 'pos': 0.114, 'compound': -0.128}, {'neg': 0.053, 'neu': 0.718, 'pos': 0.229, 'compound': 0.765}, {'neg': 0.191, 'neu': 0.743, 'pos': 0.065, 'compound': -0.6808}, {'neg': 0.083, 'neu': 0.917, 'pos': 0.0, 'compound': -0.25}, {'neg': 0.035, 'neu': 0.907, 'pos': 0.058, 'compound': 0.2263}, {'neg': 0.233, 'neu': 0.767, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.132, 'neu': 0.631, 'pos': 0.238, 'compound': 0.7096}, {'neg': 0.247, 'neu': 0.687, 'pos': 0.066, 'compound': -0.7964}, {'neg': 0.0, 'neu': 0.852, 'pos': 0.148, 'compound': 0.765}, {'neg': 0.076, 'neu': 0.924, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.151, 'neu': 0.769, 'pos': 0.08, 'compound': -0.4792}, {'neg': 0.073, 'neu': 0.927, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.4019}, {'neg': 0.057, 'neu': 0.321, 'pos': 0.622, 'compound': 0.9766}, {'neg': 0.0, 'neu': 0.963, 'pos': 0.037, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.764, 'pos': 0.236, 'compound': 0.7783}, {'neg': 0.261, 'neu': 0.696, 'pos': 0.043, 'compound': -0.91}, {'neg': 0.164, 'neu': 0.836, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.301, 'neu': 0.506, 'pos': 0.193, 'compound': -0.5258}, {'neg': 0.07, 'neu': 0.894, 'pos': 0.036, 'compound': -0.25}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.5367}, {'neg': 0.136, 'neu': 0.679, 'pos': 0.185, 'compound': 0.2263}, {'neg': 0.183, 'neu': 0.736, 'pos': 0.08, 'compound': -0.7906}, {'neg': 0.139, 'neu': 0.805, 'pos': 0.056, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.503, 'pos': 0.497, 'compound': 0.9628}, {'neg': 0.149, 'neu': 0.851, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.8316}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.073, 'neu': 0.701, 'pos': 0.226, 'compound': 0.5719}, {'neg': 0.062, 'neu': 0.797, 'pos': 0.141, 'compound': 0.4588}, {'neg': 0.167, 'neu': 0.615, 'pos': 0.218, 'compound': 0.1548}, {'neg': 0.0, 'neu': 0.944, 'pos': 0.056, 'compound': 0.3818}, {'neg': 0.06, 'neu': 0.666, 'pos': 0.274, 'compound': 0.8962}, {'neg': 0.0, 'neu': 0.9, 'pos': 0.1, 'compound': 0.4404}, {'neg': 0.117, 'neu': 0.835, 'pos': 0.048, 'compound': -0.5106}, {'neg': 0.077, 'neu': 0.774, 'pos': 0.149, 'compound': 0.3612}, {'neg': 0.238, 'neu': 0.723, 'pos': 0.039, 'compound': -0.8225}, {'neg': 0.206, 'neu': 0.714, 'pos': 0.08, 'compound': -0.6369}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.622, 'pos': 0.378, 'compound': 0.9517}, {'neg': 0.091, 'neu': 0.705, 'pos': 0.205, 'compound': 0.5267}, {'neg': 0.224, 'neu': 0.712, 'pos': 0.064, 'compound': -0.743}, {'neg': 0.047, 'neu': 0.569, 'pos': 0.385, 'compound': 0.8779}, {'neg': 0.0, 'neu': 0.601, 'pos': 0.399, 'compound': 0.9666}, {'neg': 0.148, 'neu': 0.798, 'pos': 0.054, 'compound': -0.5106}, {'neg': 0.118, 'neu': 0.648, 'pos': 0.234, 'compound': 0.7906}, {'neg': 0.176, 'neu': 0.601, 'pos': 0.223, 'compound': 0.296}, {'neg': 0.157, 'neu': 0.714, 'pos': 0.129, 'compound': -0.1548}, {'neg': 0.0, 'neu': 0.89, 'pos': 0.11, 'compound': 0.6486}, {'neg': 0.081, 'neu': 0.837, 'pos': 0.082, 'compound': 0.0088}, {'neg': 0.064, 'neu': 0.936, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.179, 'neu': 0.722, 'pos': 0.1, 'compound': -0.3182}, {'neg': 0.431, 'neu': 0.569, 'pos': 0.0, 'compound': -0.9648}, {'neg': 0.0, 'neu': 0.689, 'pos': 0.311, 'compound': 0.8176}, {'neg': 0.145, 'neu': 0.71, 'pos': 0.145, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.709, 'pos': 0.291, 'compound': 0.9062}, {'neg': 0.23, 'neu': 0.675, 'pos': 0.095, 'compound': -0.5267}, {'neg': 0.063, 'neu': 0.805, 'pos': 0.132, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.904, 'pos': 0.096, 'compound': 0.4939}, {'neg': 0.084, 'neu': 0.65, 'pos': 0.266, 'compound': 0.8658}, {'neg': 0.25, 'neu': 0.616, 'pos': 0.134, 'compound': -0.722}, {'neg': 0.0, 'neu': 0.711, 'pos': 0.289, 'compound': 0.9337}, {'neg': 0.086, 'neu': 0.73, 'pos': 0.184, 'compound': 0.4767}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.174, 'neu': 0.684, 'pos': 0.142, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.537, 'pos': 0.463, 'compound': 0.9622}, {'neg': 0.088, 'neu': 0.603, 'pos': 0.309, 'compound': 0.7783}, {'neg': 0.097, 'neu': 0.793, 'pos': 0.11, 'compound': 0.1027}, {'neg': 0.304, 'neu': 0.596, 'pos': 0.1, 'compound': -0.7579}, {'neg': 0.132, 'neu': 0.868, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.733, 'pos': 0.267, 'compound': 0.743}, {'neg': 0.203, 'neu': 0.714, 'pos': 0.083, 'compound': -0.4939}, {'neg': 0.128, 'neu': 0.66, 'pos': 0.212, 'compound': 0.5859}, {'neg': 0.043, 'neu': 0.691, 'pos': 0.266, 'compound': 0.7783}, {'neg': 0.077, 'neu': 0.477, 'pos': 0.446, 'compound': 0.9169}, {'neg': 0.072, 'neu': 0.8, 'pos': 0.128, 'compound': 0.0516}, {'neg': 0.159, 'neu': 0.841, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.123, 'neu': 0.76, 'pos': 0.117, 'compound': -0.0534}, {'neg': 0.0, 'neu': 0.923, 'pos': 0.077, 'compound': 0.3612}, {'neg': 0.183, 'neu': 0.473, 'pos': 0.344, 'compound': 0.7964}, {'neg': 0.0, 'neu': 0.709, 'pos': 0.291, 'compound': 0.8225}, {'neg': 0.179, 'neu': 0.597, 'pos': 0.223, 'compound': 0.25}, {'neg': 0.088, 'neu': 0.912, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.129, 'neu': 0.817, 'pos': 0.054, 'compound': -0.4588}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.048, 'neu': 0.839, 'pos': 0.113, 'compound': 0.4767}, {'neg': 0.354, 'neu': 0.446, 'pos': 0.2, 'compound': -0.7351}, {'neg': 0.0, 'neu': 0.882, 'pos': 0.118, 'compound': 0.4215}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.281, 'neu': 0.449, 'pos': 0.27, 'compound': -0.1027}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.5574}, {'neg': 0.0, 'neu': 0.734, 'pos': 0.266, 'compound': 0.891}, {'neg': 0.0, 'neu': 0.766, 'pos': 0.234, 'compound': 0.7269}, {'neg': 0.316, 'neu': 0.584, 'pos': 0.1, 'compound': -0.6351}, {'neg': 0.19, 'neu': 0.81, 'pos': 0.0, 'compound': -0.659}, {'neg': 0.063, 'neu': 0.858, 'pos': 0.079, 'compound': 0.128}, {'neg': 0.12, 'neu': 0.71, 'pos': 0.17, 'compound': 0.128}, {'neg': 0.168, 'neu': 0.741, 'pos': 0.09, 'compound': -0.6486}, {'neg': 0.096, 'neu': 0.852, 'pos': 0.052, 'compound': -0.2732}, {'neg': 0.085, 'neu': 0.853, 'pos': 0.061, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.758, 'pos': 0.242, 'compound': 0.7506}, {'neg': 0.127, 'neu': 0.769, 'pos': 0.103, 'compound': 0.0258}, {'neg': 0.048, 'neu': 0.915, 'pos': 0.037, 'compound': -0.0941}, {'neg': 0.0, 'neu': 0.817, 'pos': 0.183, 'compound': 0.5574}, {'neg': 0.209, 'neu': 0.791, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.19, 'neu': 0.734, 'pos': 0.076, 'compound': -0.5719}, {'neg': 0.182, 'neu': 0.747, 'pos': 0.071, 'compound': -0.5267}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.843, 'pos': 0.157, 'compound': 0.6249}, {'neg': 0.204, 'neu': 0.681, 'pos': 0.115, 'compound': -0.3612}, {'neg': 0.11, 'neu': 0.784, 'pos': 0.107, 'compound': -0.2732}, {'neg': 0.104, 'neu': 0.604, 'pos': 0.292, 'compound': 0.6808}, {'neg': 0.051, 'neu': 0.775, 'pos': 0.174, 'compound': 0.6808}, {'neg': 0.299, 'neu': 0.658, 'pos': 0.043, 'compound': -0.8316}, {'neg': 0.289, 'neu': 0.648, 'pos': 0.064, 'compound': -0.842}, {'neg': 0.0, 'neu': 0.703, 'pos': 0.297, 'compound': 0.765}, {'neg': 0.065, 'neu': 0.794, 'pos': 0.141, 'compound': 0.3818}, {'neg': 0.063, 'neu': 0.735, 'pos': 0.202, 'compound': 0.6808}, {'neg': 0.157, 'neu': 0.695, 'pos': 0.148, 'compound': -0.0767}, {'neg': 0.074, 'neu': 0.872, 'pos': 0.054, 'compound': -0.2023}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.3612}, {'neg': 0.096, 'neu': 0.731, 'pos': 0.173, 'compound': 0.25}, {'neg': 0.178, 'neu': 0.508, 'pos': 0.314, 'compound': 0.8225}, {'neg': 0.0, 'neu': 0.525, 'pos': 0.475, 'compound': 0.9709}, {'neg': 0.196, 'neu': 0.733, 'pos': 0.071, 'compound': -0.7003}, {'neg': 0.102, 'neu': 0.72, 'pos': 0.178, 'compound': 0.4588}, {'neg': 0.195, 'neu': 0.741, 'pos': 0.064, 'compound': -0.5994}, {'neg': 0.052, 'neu': 0.948, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.339, 'neu': 0.638, 'pos': 0.023, 'compound': -0.9501}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.6705}, {'neg': 0.077, 'neu': 0.846, 'pos': 0.077, 'compound': 0.0}, {'neg': 0.295, 'neu': 0.705, 'pos': 0.0, 'compound': -0.9062}, {'neg': 0.14, 'neu': 0.752, 'pos': 0.109, 'compound': -0.6124}, {'neg': 0.142, 'neu': 0.692, 'pos': 0.166, 'compound': 0.1779}, {'neg': 0.155, 'neu': 0.572, 'pos': 0.273, 'compound': 0.5414}, {'neg': 0.101, 'neu': 0.68, 'pos': 0.219, 'compound': 0.6908}, {'neg': 0.082, 'neu': 0.68, 'pos': 0.238, 'compound': 0.6705}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.846, 'pos': 0.154, 'compound': 0.5994}, {'neg': 0.167, 'neu': 0.728, 'pos': 0.105, 'compound': -0.5423}, {'neg': 0.098, 'neu': 0.722, 'pos': 0.18, 'compound': 0.5291}, {'neg': 0.0, 'neu': 0.73, 'pos': 0.27, 'compound': 0.8225}, {'neg': 0.075, 'neu': 0.646, 'pos': 0.279, 'compound': 0.7184}, {'neg': 0.122, 'neu': 0.699, 'pos': 0.178, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.681, 'pos': 0.319, 'compound': 0.9186}, {'neg': 0.112, 'neu': 0.785, 'pos': 0.103, 'compound': -0.0516}, {'neg': 0.093, 'neu': 0.727, 'pos': 0.18, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.723, 'pos': 0.277, 'compound': 0.9081}, {'neg': 0.22, 'neu': 0.78, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.295, 'neu': 0.591, 'pos': 0.114, 'compound': -0.5106}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.216, 'neu': 0.647, 'pos': 0.137, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.665, 'pos': 0.335, 'compound': 0.9274}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.097, 'neu': 0.755, 'pos': 0.147, 'compound': 0.34}, {'neg': 0.099, 'neu': 0.809, 'pos': 0.092, 'compound': -0.0516}, {'neg': 0.026, 'neu': 0.501, 'pos': 0.473, 'compound': 0.9796}, {'neg': 0.147, 'neu': 0.624, 'pos': 0.229, 'compound': 0.743}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.74, 'pos': 0.26, 'compound': 0.8625}, {'neg': 0.132, 'neu': 0.677, 'pos': 0.191, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.797, 'pos': 0.203, 'compound': 0.6808}, {'neg': 0.171, 'neu': 0.635, 'pos': 0.194, 'compound': 0.0772}, {'neg': 0.071, 'neu': 0.712, 'pos': 0.216, 'compound': 0.6705}, {'neg': 0.318, 'neu': 0.682, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.086, 'neu': 0.812, 'pos': 0.102, 'compound': -0.1027}, {'neg': 0.096, 'neu': 0.603, 'pos': 0.301, 'compound': 0.7579}, {'neg': 0.301, 'neu': 0.699, 'pos': 0.0, 'compound': -0.802}, {'neg': 0.232, 'neu': 0.68, 'pos': 0.088, 'compound': -0.5574}, {'neg': 0.074, 'neu': 0.798, 'pos': 0.128, 'compound': 0.25}, {'neg': 0.056, 'neu': 0.812, 'pos': 0.131, 'compound': 0.1531}, {'neg': 0.106, 'neu': 0.787, 'pos': 0.106, 'compound': 0.0}, {'neg': 0.068, 'neu': 0.655, 'pos': 0.276, 'compound': 0.743}, {'neg': 0.107, 'neu': 0.516, 'pos': 0.377, 'compound': 0.7003}, {'neg': 0.091, 'neu': 0.813, 'pos': 0.095, 'compound': 0.0516}, {'neg': 0.104, 'neu': 0.772, 'pos': 0.124, 'compound': 0.128}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.084, 'neu': 0.623, 'pos': 0.293, 'compound': 0.8271}, {'neg': 0.169, 'neu': 0.638, 'pos': 0.193, 'compound': 0.1027}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.091, 'neu': 0.568, 'pos': 0.341, 'compound': 0.9186}, {'neg': 0.097, 'neu': 0.647, 'pos': 0.255, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.661, 'pos': 0.339, 'compound': 0.8519}, {'neg': 0.19, 'neu': 0.475, 'pos': 0.335, 'compound': 0.7845}, {'neg': 0.102, 'neu': 0.645, 'pos': 0.254, 'compound': 0.7783}, {'neg': 0.19, 'neu': 0.609, 'pos': 0.201, 'compound': -0.1386}, {'neg': 0.107, 'neu': 0.621, 'pos': 0.271, 'compound': 0.5859}, {'neg': 0.194, 'neu': 0.734, 'pos': 0.071, 'compound': -0.6908}, {'neg': 0.221, 'neu': 0.695, 'pos': 0.084, 'compound': -0.6908}, {'neg': 0.116, 'neu': 0.884, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.127, 'neu': 0.49, 'pos': 0.382, 'compound': 0.8555}, {'neg': 0.168, 'neu': 0.774, 'pos': 0.058, 'compound': -0.6115}, {'neg': 0.101, 'neu': 0.817, 'pos': 0.082, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.649, 'pos': 0.351, 'compound': 0.9186}, {'neg': 0.223, 'neu': 0.66, 'pos': 0.117, 'compound': -0.7506}, {'neg': 0.0, 'neu': 0.809, 'pos': 0.191, 'compound': 0.6369}, {'neg': 0.161, 'neu': 0.619, 'pos': 0.22, 'compound': 0.4867}, {'neg': 0.0, 'neu': 0.942, 'pos': 0.058, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.643, 'pos': 0.357, 'compound': 0.9337}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.3818}, {'neg': 0.054, 'neu': 0.895, 'pos': 0.051, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.651, 'pos': 0.349, 'compound': 0.9501}, {'neg': 0.148, 'neu': 0.795, 'pos': 0.058, 'compound': -0.5106}, {'neg': 0.207, 'neu': 0.793, 'pos': 0.0, 'compound': -0.836}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.684, 'pos': 0.316, 'compound': 0.8271}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.088, 'neu': 0.654, 'pos': 0.258, 'compound': 0.6369}, {'neg': 0.106, 'neu': 0.894, 'pos': 0.0, 'compound': -0.3089}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.8126}, {'neg': 0.139, 'neu': 0.861, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.1, 'neu': 0.847, 'pos': 0.053, 'compound': -0.4939}, {'neg': 0.093, 'neu': 0.849, 'pos': 0.058, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.896, 'pos': 0.104, 'compound': 0.4404}, {'neg': 0.132, 'neu': 0.791, 'pos': 0.077, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.947, 'pos': 0.053, 'compound': 0.0772}, {'neg': 0.145, 'neu': 0.673, 'pos': 0.182, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.431}, {'neg': 0.065, 'neu': 0.706, 'pos': 0.229, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.925, 'pos': 0.075, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.8271}, {'neg': 0.227, 'neu': 0.667, 'pos': 0.106, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.897, 'pos': 0.103, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.611, 'pos': 0.389, 'compound': 0.8807}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.3612}, {'neg': 0.29, 'neu': 0.554, 'pos': 0.156, 'compound': -0.7579}, {'neg': 0.107, 'neu': 0.711, 'pos': 0.182, 'compound': 0.5859}, {'neg': 0.092, 'neu': 0.838, 'pos': 0.071, 'compound': -0.2023}, {'neg': 0.097, 'neu': 0.634, 'pos': 0.269, 'compound': 0.9001}, {'neg': 0.085, 'neu': 0.662, 'pos': 0.252, 'compound': 0.6486}, {'neg': 0.159, 'neu': 0.674, 'pos': 0.167, 'compound': 0.0772}, {'neg': 0.214, 'neu': 0.666, 'pos': 0.12, 'compound': -0.683}, {'neg': 0.062, 'neu': 0.805, 'pos': 0.133, 'compound': 0.4767}, {'neg': 0.223, 'neu': 0.777, 'pos': 0.0, 'compound': -0.743}, {'neg': 0.271, 'neu': 0.729, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.766, 'pos': 0.234, 'compound': 0.9287}, {'neg': 0.084, 'neu': 0.619, 'pos': 0.297, 'compound': 0.7845}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.076, 'neu': 0.924, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.087, 'neu': 0.623, 'pos': 0.29, 'compound': 0.7579}, {'neg': 0.0, 'neu': 0.901, 'pos': 0.099, 'compound': 0.4939}, {'neg': 0.048, 'neu': 0.745, 'pos': 0.207, 'compound': 0.7537}, {'neg': 0.25, 'neu': 0.697, 'pos': 0.053, 'compound': -0.8658}, {'neg': 0.069, 'neu': 0.776, 'pos': 0.155, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.859, 'pos': 0.141, 'compound': 0.7351}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.857, 'pos': 0.143, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.4019}, {'neg': 0.072, 'neu': 0.807, 'pos': 0.121, 'compound': 0.0516}, {'neg': 0.089, 'neu': 0.828, 'pos': 0.083, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.752, 'pos': 0.248, 'compound': 0.7845}, {'neg': 0.205, 'neu': 0.765, 'pos': 0.03, 'compound': -0.7506}, {'neg': 0.196, 'neu': 0.588, 'pos': 0.216, 'compound': 0.0516}, {'neg': 0.284, 'neu': 0.615, 'pos': 0.102, 'compound': -0.8271}, {'neg': 0.0, 'neu': 0.489, 'pos': 0.511, 'compound': 0.9753}, {'neg': 0.0, 'neu': 0.714, 'pos': 0.286, 'compound': 0.7351}, {'neg': 0.034, 'neu': 0.386, 'pos': 0.581, 'compound': 0.9709}, {'neg': 0.0, 'neu': 0.927, 'pos': 0.073, 'compound': 0.1531}, {'neg': 0.148, 'neu': 0.653, 'pos': 0.199, 'compound': -0.296}, {'neg': 0.086, 'neu': 0.766, 'pos': 0.148, 'compound': 0.3612}, {'neg': 0.118, 'neu': 0.473, 'pos': 0.408, 'compound': 0.9136}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.079, 'neu': 0.498, 'pos': 0.423, 'compound': 0.8519}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.6249}, {'neg': 0.102, 'neu': 0.796, 'pos': 0.102, 'compound': -0.25}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.168, 'neu': 0.765, 'pos': 0.067, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.936, 'pos': 0.064, 'compound': 0.0772}, {'neg': 0.193, 'neu': 0.592, 'pos': 0.215, 'compound': 0.1466}, {'neg': 0.155, 'neu': 0.773, 'pos': 0.072, 'compound': -0.4767}, {'neg': 0.113, 'neu': 0.837, 'pos': 0.05, 'compound': -0.4588}, {'neg': 0.194, 'neu': 0.709, 'pos': 0.097, 'compound': -0.3818}, {'neg': 0.273, 'neu': 0.727, 'pos': 0.0, 'compound': -0.8885}, {'neg': 0.0, 'neu': 0.868, 'pos': 0.132, 'compound': 0.4404}, {'neg': 0.163, 'neu': 0.718, 'pos': 0.119, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.5859}, {'neg': 0.176, 'neu': 0.824, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.095, 'neu': 0.905, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.278, 'neu': 0.609, 'pos': 0.113, 'compound': -0.9169}, {'neg': 0.0, 'neu': 0.85, 'pos': 0.15, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.5423}, {'neg': 0.095, 'neu': 0.698, 'pos': 0.207, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.738, 'pos': 0.262, 'compound': 0.7506}, {'neg': 0.058, 'neu': 0.823, 'pos': 0.119, 'compound': 0.3612}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.068, 'neu': 0.817, 'pos': 0.115, 'compound': 0.34}, {'neg': 0.194, 'neu': 0.742, 'pos': 0.065, 'compound': -0.7906}, {'neg': 0.134, 'neu': 0.707, 'pos': 0.159, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.779, 'pos': 0.221, 'compound': 0.7003}, {'neg': 0.139, 'neu': 0.861, 'pos': 0.0, 'compound': -0.5267}, {'neg': 0.0, 'neu': 0.733, 'pos': 0.267, 'compound': 0.7115}, {'neg': 0.194, 'neu': 0.806, 'pos': 0.0, 'compound': -0.7184}, {'neg': 0.165, 'neu': 0.779, 'pos': 0.056, 'compound': -0.5423}, {'neg': 0.061, 'neu': 0.76, 'pos': 0.179, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.673, 'pos': 0.327, 'compound': 0.8074}, {'neg': 0.042, 'neu': 0.867, 'pos': 0.091, 'compound': 0.296}, {'neg': 0.176, 'neu': 0.779, 'pos': 0.045, 'compound': -0.7506}, {'neg': 0.218, 'neu': 0.735, 'pos': 0.046, 'compound': -0.802}, {'neg': 0.081, 'neu': 0.769, 'pos': 0.15, 'compound': 0.4404}, {'neg': 0.23, 'neu': 0.522, 'pos': 0.248, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.2263}, {'neg': 0.059, 'neu': 0.725, 'pos': 0.215, 'compound': 0.7269}, {'neg': 0.091, 'neu': 0.811, 'pos': 0.098, 'compound': 0.0516}, {'neg': 0.154, 'neu': 0.57, 'pos': 0.276, 'compound': 0.5106}, {'neg': 0.254, 'neu': 0.51, 'pos': 0.237, 'compound': -0.296}, {'neg': 0.15, 'neu': 0.562, 'pos': 0.287, 'compound': 0.7906}, {'neg': 0.08, 'neu': 0.92, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.232, 'neu': 0.541, 'pos': 0.227, 'compound': -0.0516}, {'neg': 0.181, 'neu': 0.673, 'pos': 0.146, 'compound': -0.296}, {'neg': 0.03, 'neu': 0.808, 'pos': 0.162, 'compound': 0.5232}, {'neg': 0.0, 'neu': 0.779, 'pos': 0.221, 'compound': 0.8689}, {'neg': 0.09, 'neu': 0.833, 'pos': 0.076, 'compound': -0.2023}, {'neg': 0.0, 'neu': 0.763, 'pos': 0.237, 'compound': 0.8402}, {'neg': 0.15, 'neu': 0.725, 'pos': 0.126, 'compound': -0.25}, {'neg': 0.04, 'neu': 0.96, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.151, 'neu': 0.663, 'pos': 0.186, 'compound': 0.34}, {'neg': 0.104, 'neu': 0.677, 'pos': 0.219, 'compound': 0.6808}, {'neg': 0.053, 'neu': 0.947, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.277, 'neu': 0.723, 'pos': 0.0, 'compound': -0.7927}, {'neg': 0.122, 'neu': 0.661, 'pos': 0.217, 'compound': 0.5574}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.081, 'neu': 0.885, 'pos': 0.034, 'compound': -0.4215}, {'neg': 0.237, 'neu': 0.615, 'pos': 0.148, 'compound': -0.4404}, {'neg': 0.084, 'neu': 0.717, 'pos': 0.199, 'compound': 0.5719}, {'neg': 0.184, 'neu': 0.74, 'pos': 0.076, 'compound': -0.5423}, {'neg': 0.149, 'neu': 0.729, 'pos': 0.122, 'compound': 0.0258}, {'neg': 0.164, 'neu': 0.573, 'pos': 0.264, 'compound': 0.5994}, {'neg': 0.062, 'neu': 0.889, 'pos': 0.049, 'compound': -0.128}, {'neg': 0.081, 'neu': 0.919, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.123, 'neu': 0.877, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.148, 'neu': 0.772, 'pos': 0.08, 'compound': -0.3182}, {'neg': 0.069, 'neu': 0.848, 'pos': 0.082, 'compound': 0.128}, {'neg': 0.163, 'neu': 0.728, 'pos': 0.109, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.66, 'pos': 0.34, 'compound': 0.9169}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.94, 'pos': 0.06, 'compound': 0.2023}, {'neg': 0.122, 'neu': 0.791, 'pos': 0.086, 'compound': -0.25}, {'neg': 0.165, 'neu': 0.671, 'pos': 0.165, 'compound': 0.0}, {'neg': 0.167, 'neu': 0.679, 'pos': 0.154, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.845, 'pos': 0.155, 'compound': 0.5574}, {'neg': 0.145, 'neu': 0.763, 'pos': 0.092, 'compound': -0.4215}, {'neg': 0.24, 'neu': 0.552, 'pos': 0.208, 'compound': -0.4588}, {'neg': 0.074, 'neu': 0.926, 'pos': 0.0, 'compound': -0.5106}, {'neg': 0.084, 'neu': 0.916, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.13, 'neu': 0.737, 'pos': 0.132, 'compound': 0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.949, 'pos': 0.051, 'compound': 0.0772}, {'neg': 0.152, 'neu': 0.574, 'pos': 0.274, 'compound': 0.7646}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.3477}, {'neg': 0.062, 'neu': 0.664, 'pos': 0.275, 'compound': 0.8519}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.34}, {'neg': 0.112, 'neu': 0.775, 'pos': 0.112, 'compound': 0.0}, {'neg': 0.139, 'neu': 0.716, 'pos': 0.145, 'compound': 0.0772}, {'neg': 0.172, 'neu': 0.745, 'pos': 0.082, 'compound': -0.1298}, {'neg': 0.0, 'neu': 0.83, 'pos': 0.17, 'compound': 0.7906}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.7845}, {'neg': 0.0, 'neu': 0.753, 'pos': 0.247, 'compound': 0.8176}, {'neg': 0.108, 'neu': 0.68, 'pos': 0.212, 'compound': 0.5719}, {'neg': 0.087, 'neu': 0.777, 'pos': 0.136, 'compound': 0.3612}, {'neg': 0.274, 'neu': 0.726, 'pos': 0.0, 'compound': -0.7717}, {'neg': 0.255, 'neu': 0.612, 'pos': 0.133, 'compound': -0.5574}, {'neg': 0.094, 'neu': 0.906, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.104, 'neu': 0.846, 'pos': 0.05, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.673, 'pos': 0.327, 'compound': 0.8481}, {'neg': 0.056, 'neu': 0.847, 'pos': 0.097, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.887, 'pos': 0.113, 'compound': 0.4939}, {'neg': 0.167, 'neu': 0.746, 'pos': 0.088, 'compound': -0.5574}, {'neg': 0.107, 'neu': 0.801, 'pos': 0.093, 'compound': -0.2023}, {'neg': 0.0, 'neu': 0.615, 'pos': 0.385, 'compound': 0.875}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.7184}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.938, 'pos': 0.062, 'compound': 0.2023}, {'neg': 0.086, 'neu': 0.818, 'pos': 0.095, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.839, 'pos': 0.161, 'compound': 0.743}, {'neg': 0.083, 'neu': 0.917, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.22, 'neu': 0.68, 'pos': 0.1, 'compound': -0.4588}, {'neg': 0.082, 'neu': 0.779, 'pos': 0.139, 'compound': 0.3182}, {'neg': 0.181, 'neu': 0.647, 'pos': 0.172, 'compound': -0.1027}, {'neg': 0.042, 'neu': 0.687, 'pos': 0.272, 'compound': 0.8856}, {'neg': 0.223, 'neu': 0.567, 'pos': 0.21, 'compound': -0.2023}, {'neg': 0.059, 'neu': 0.722, 'pos': 0.219, 'compound': 0.8074}, {'neg': 0.114, 'neu': 0.764, 'pos': 0.122, 'compound': 0.0534}, {'neg': 0.1, 'neu': 0.602, 'pos': 0.298, 'compound': 0.7096}, {'neg': 0.172, 'neu': 0.748, 'pos': 0.08, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.935, 'pos': 0.065, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.888, 'pos': 0.112, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.708, 'pos': 0.292, 'compound': 0.8957}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.5423}, {'neg': 0.201, 'neu': 0.708, 'pos': 0.091, 'compound': -0.4404}, {'neg': 0.096, 'neu': 0.904, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.108, 'neu': 0.815, 'pos': 0.077, 'compound': -0.3612}, {'neg': 0.113, 'neu': 0.679, 'pos': 0.208, 'compound': 0.3657}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.205, 'neu': 0.684, 'pos': 0.11, 'compound': -0.3612}, {'neg': 0.0, 'neu': 0.54, 'pos': 0.46, 'compound': 0.9618}, {'neg': 0.0, 'neu': 0.844, 'pos': 0.156, 'compound': 0.34}, {'neg': 0.093, 'neu': 0.83, 'pos': 0.077, 'compound': -0.2023}, {'neg': 0.201, 'neu': 0.519, 'pos': 0.28, 'compound': 0.3182}, {'neg': 0.317, 'neu': 0.541, 'pos': 0.143, 'compound': -0.8442}, {'neg': 0.121, 'neu': 0.739, 'pos': 0.14, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.8225}, {'neg': 0.083, 'neu': 0.8, 'pos': 0.117, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.911, 'pos': 0.089, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.877, 'pos': 0.123, 'compound': 0.4939}, {'neg': 0.143, 'neu': 0.737, 'pos': 0.12, 'compound': -0.128}, {'neg': 0.155, 'neu': 0.734, 'pos': 0.111, 'compound': -0.4767}, {'neg': 0.112, 'neu': 0.695, 'pos': 0.193, 'compound': 0.4826}, {'neg': 0.152, 'neu': 0.734, 'pos': 0.114, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.809, 'pos': 0.191, 'compound': 0.607}, {'neg': 0.0, 'neu': 0.911, 'pos': 0.089, 'compound': 0.4215}, {'neg': 0.211, 'neu': 0.626, 'pos': 0.163, 'compound': -0.3054}, {'neg': 0.142, 'neu': 0.632, 'pos': 0.226, 'compound': 0.5859}, {'neg': 0.269, 'neu': 0.634, 'pos': 0.097, 'compound': -0.6908}, {'neg': 0.142, 'neu': 0.776, 'pos': 0.082, 'compound': -0.3182}, {'neg': 0.126, 'neu': 0.827, 'pos': 0.047, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.25}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.082, 'neu': 0.816, 'pos': 0.102, 'compound': -0.3182}, {'neg': 0.161, 'neu': 0.763, 'pos': 0.076, 'compound': -0.4588}, {'neg': 0.081, 'neu': 0.753, 'pos': 0.166, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.726, 'pos': 0.274, 'compound': 0.8658}, {'neg': 0.0, 'neu': 0.831, 'pos': 0.169, 'compound': 0.6705}, {'neg': 0.2, 'neu': 0.8, 'pos': 0.0, 'compound': -0.8402}, {'neg': 0.0, 'neu': 0.664, 'pos': 0.336, 'compound': 0.9349}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.61, 'pos': 0.39, 'compound': 0.8074}, {'neg': 0.0, 'neu': 0.867, 'pos': 0.133, 'compound': 0.1531}, {'neg': 0.096, 'neu': 0.794, 'pos': 0.11, 'compound': 0.1724}, {'neg': 0.0, 'neu': 0.786, 'pos': 0.214, 'compound': 0.8316}, {'neg': 0.049, 'neu': 0.866, 'pos': 0.085, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.553, 'pos': 0.447, 'compound': 0.9595}, {'neg': 0.0, 'neu': 0.942, 'pos': 0.058, 'compound': 0.296}, {'neg': 0.145, 'neu': 0.783, 'pos': 0.072, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.893, 'pos': 0.107, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.843, 'pos': 0.157, 'compound': 0.7096}, {'neg': 0.031, 'neu': 0.507, 'pos': 0.463, 'compound': 0.9618}, {'neg': 0.0, 'neu': 0.921, 'pos': 0.079, 'compound': 0.4588}, {'neg': 0.213, 'neu': 0.708, 'pos': 0.079, 'compound': -0.5994}, {'neg': 0.176, 'neu': 0.688, 'pos': 0.136, 'compound': -0.4588}, {'neg': 0.085, 'neu': 0.849, 'pos': 0.066, 'compound': -0.1531}, {'neg': 0.095, 'neu': 0.596, 'pos': 0.309, 'compound': 0.7269}, {'neg': 0.273, 'neu': 0.727, 'pos': 0.0, 'compound': -0.9001}, {'neg': 0.12, 'neu': 0.817, 'pos': 0.062, 'compound': -0.296}, {'neg': 0.167, 'neu': 0.598, 'pos': 0.234, 'compound': 0.4215}, {'neg': 0.087, 'neu': 0.559, 'pos': 0.355, 'compound': 0.8225}, {'neg': 0.066, 'neu': 0.715, 'pos': 0.219, 'compound': 0.6319}, {'neg': 0.16, 'neu': 0.718, 'pos': 0.122, 'compound': -0.34}, {'neg': 0.23, 'neu': 0.596, 'pos': 0.174, 'compound': -0.0772}, {'neg': 0.306, 'neu': 0.694, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.194, 'neu': 0.638, 'pos': 0.168, 'compound': -0.2263}, {'neg': 0.062, 'neu': 0.798, 'pos': 0.14, 'compound': 0.4692}, {'neg': 0.176, 'neu': 0.631, 'pos': 0.193, 'compound': 0.2211}, {'neg': 0.123, 'neu': 0.771, 'pos': 0.105, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.73, 'pos': 0.27, 'compound': 0.743}, {'neg': 0.146, 'neu': 0.748, 'pos': 0.106, 'compound': -0.6705}, {'neg': 0.054, 'neu': 0.843, 'pos': 0.102, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.508, 'pos': 0.492, 'compound': 0.9652}, {'neg': 0.222, 'neu': 0.579, 'pos': 0.199, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.74, 'pos': 0.26, 'compound': 0.891}, {'neg': 0.163, 'neu': 0.681, 'pos': 0.155, 'compound': -0.0772}, {'neg': 0.2, 'neu': 0.629, 'pos': 0.172, 'compound': -0.362}, {'neg': 0.098, 'neu': 0.418, 'pos': 0.484, 'compound': 0.9726}, {'neg': 0.034, 'neu': 0.82, 'pos': 0.146, 'compound': 0.743}, {'neg': 0.087, 'neu': 0.846, 'pos': 0.067, 'compound': -0.2023}, {'neg': 0.0, 'neu': 0.922, 'pos': 0.078, 'compound': 0.4215}, {'neg': 0.138, 'neu': 0.801, 'pos': 0.061, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.9, 'pos': 0.1, 'compound': 0.2732}, {'neg': 0.117, 'neu': 0.674, 'pos': 0.209, 'compound': 0.4939}, {'neg': 0.306, 'neu': 0.598, 'pos': 0.096, 'compound': -0.743}, {'neg': 0.174, 'neu': 0.671, 'pos': 0.155, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.827, 'pos': 0.173, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.7506}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.029, 'neu': 0.74, 'pos': 0.231, 'compound': 0.9042}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.036, 'neu': 0.725, 'pos': 0.239, 'compound': 0.8807}, {'neg': 0.102, 'neu': 0.702, 'pos': 0.196, 'compound': 0.296}, {'neg': 0.069, 'neu': 0.488, 'pos': 0.442, 'compound': 0.91}, {'neg': 0.0, 'neu': 0.782, 'pos': 0.218, 'compound': 0.6597}, {'neg': 0.108, 'neu': 0.721, 'pos': 0.17, 'compound': 0.4767}, {'neg': 0.03, 'neu': 0.688, 'pos': 0.282, 'compound': 0.8934}, {'neg': 0.129, 'neu': 0.832, 'pos': 0.039, 'compound': -0.7096}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.721, 'pos': 0.279, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.768, 'pos': 0.232, 'compound': 0.8779}, {'neg': 0.06, 'neu': 0.687, 'pos': 0.252, 'compound': 0.7711}, {'neg': 0.091, 'neu': 0.705, 'pos': 0.205, 'compound': 0.5267}, {'neg': 0.183, 'neu': 0.771, 'pos': 0.046, 'compound': -0.6486}, {'neg': 0.059, 'neu': 0.862, 'pos': 0.079, 'compound': 0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.078, 'neu': 0.665, 'pos': 0.257, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.662, 'pos': 0.338, 'compound': 0.9509}, {'neg': 0.0, 'neu': 0.907, 'pos': 0.093, 'compound': 0.4939}, {'neg': 0.174, 'neu': 0.74, 'pos': 0.087, 'compound': -0.4019}, {'neg': 0.238, 'neu': 0.596, 'pos': 0.166, 'compound': -0.6486}, {'neg': 0.25, 'neu': 0.648, 'pos': 0.102, 'compound': -0.4939}, {'neg': 0.044, 'neu': 0.86, 'pos': 0.095, 'compound': 0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.845, 'pos': 0.155, 'compound': 0.5574}, {'neg': 0.089, 'neu': 0.825, 'pos': 0.086, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.625, 'pos': 0.375, 'compound': 0.9186}, {'neg': 0.105, 'neu': 0.663, 'pos': 0.232, 'compound': 0.5106}, {'neg': 0.098, 'neu': 0.838, 'pos': 0.064, 'compound': -0.296}, {'neg': 0.253, 'neu': 0.48, 'pos': 0.266, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.703, 'pos': 0.297, 'compound': 0.9382}, {'neg': 0.276, 'neu': 0.664, 'pos': 0.06, 'compound': -0.7579}, {'neg': 0.048, 'neu': 0.832, 'pos': 0.12, 'compound': 0.4019}, {'neg': 0.309, 'neu': 0.597, 'pos': 0.094, 'compound': -0.9169}, {'neg': 0.108, 'neu': 0.746, 'pos': 0.146, 'compound': 0.25}, {'neg': 0.178, 'neu': 0.767, 'pos': 0.056, 'compound': -0.7906}, {'neg': 0.106, 'neu': 0.7, 'pos': 0.194, 'compound': 0.5994}, {'neg': 0.091, 'neu': 0.811, 'pos': 0.098, 'compound': 0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.182, 'neu': 0.57, 'pos': 0.248, 'compound': 0.5719}, {'neg': 0.055, 'neu': 0.83, 'pos': 0.115, 'compound': 0.2491}, {'neg': 0.223, 'neu': 0.721, 'pos': 0.056, 'compound': -0.8834}, {'neg': 0.086, 'neu': 0.732, 'pos': 0.182, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.673, 'pos': 0.327, 'compound': 0.9607}, {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.8176}, {'neg': 0.122, 'neu': 0.878, 'pos': 0.0, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.646, 'pos': 0.354, 'compound': 0.8555}, {'neg': 0.116, 'neu': 0.81, 'pos': 0.073, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.799, 'pos': 0.201, 'compound': 0.8074}, {'neg': 0.118, 'neu': 0.619, 'pos': 0.262, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.691, 'pos': 0.309, 'compound': 0.9081}, {'neg': 0.191, 'neu': 0.693, 'pos': 0.116, 'compound': -0.5106}, {'neg': 0.109, 'neu': 0.737, 'pos': 0.154, 'compound': 0.0772}, {'neg': 0.125, 'neu': 0.739, 'pos': 0.136, 'compound': -0.1027}, {'neg': 0.079, 'neu': 0.827, 'pos': 0.094, 'compound': 0.1027}, {'neg': 0.255, 'neu': 0.553, 'pos': 0.191, 'compound': -0.5423}, {'neg': 0.075, 'neu': 0.889, 'pos': 0.036, 'compound': -0.34}, {'neg': 0.101, 'neu': 0.71, 'pos': 0.189, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.059, 'neu': 0.819, 'pos': 0.121, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.655, 'pos': 0.345, 'compound': 0.9231}, {'neg': 0.0, 'neu': 0.893, 'pos': 0.107, 'compound': 0.34}, {'neg': 0.212, 'neu': 0.788, 'pos': 0.0, 'compound': -0.7783}, {'neg': 0.0, 'neu': 0.781, 'pos': 0.219, 'compound': 0.7096}, {'neg': 0.116, 'neu': 0.797, 'pos': 0.086, 'compound': -0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.296}, {'neg': 0.065, 'neu': 0.544, 'pos': 0.391, 'compound': 0.9274}, {'neg': 0.071, 'neu': 0.711, 'pos': 0.218, 'compound': 0.6808}, {'neg': 0.207, 'neu': 0.705, 'pos': 0.087, 'compound': -0.5859}, {'neg': 0.102, 'neu': 0.759, 'pos': 0.138, 'compound': 0.0828}, {'neg': 0.099, 'neu': 0.901, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.252, 'neu': 0.748, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.6597}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.207, 'neu': 0.698, 'pos': 0.095, 'compound': -0.6705}, {'neg': 0.059, 'neu': 0.886, 'pos': 0.055, 'compound': -0.0258}, {'neg': 0.215, 'neu': 0.579, 'pos': 0.207, 'compound': -0.3182}, {'neg': 0.065, 'neu': 0.728, 'pos': 0.207, 'compound': 0.7506}, {'neg': 0.111, 'neu': 0.682, 'pos': 0.206, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.689, 'pos': 0.311, 'compound': 0.9042}, {'neg': 0.067, 'neu': 0.711, 'pos': 0.222, 'compound': 0.7512}, {'neg': 0.129, 'neu': 0.745, 'pos': 0.125, 'compound': -0.4939}, {'neg': 0.083, 'neu': 0.755, 'pos': 0.162, 'compound': 0.2732}, {'neg': 0.157, 'neu': 0.762, 'pos': 0.081, 'compound': -0.6597}, {'neg': 0.313, 'neu': 0.642, 'pos': 0.046, 'compound': -0.8979}, {'neg': 0.142, 'neu': 0.685, 'pos': 0.173, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.662, 'pos': 0.338, 'compound': 0.9413}, {'neg': 0.051, 'neu': 0.874, 'pos': 0.075, 'compound': 0.1476}, {'neg': 0.063, 'neu': 0.68, 'pos': 0.258, 'compound': 0.872}, {'neg': 0.0, 'neu': 0.735, 'pos': 0.265, 'compound': 0.8481}, {'neg': 0.283, 'neu': 0.536, 'pos': 0.18, 'compound': -0.5859}, {'neg': 0.094, 'neu': 0.591, 'pos': 0.316, 'compound': 0.9371}, {'neg': 0.099, 'neu': 0.549, 'pos': 0.352, 'compound': 0.7845}, {'neg': 0.171, 'neu': 0.783, 'pos': 0.046, 'compound': -0.7351}, {'neg': 0.1, 'neu': 0.716, 'pos': 0.185, 'compound': 0.5434}, {'neg': 0.128, 'neu': 0.827, 'pos': 0.045, 'compound': -0.6808}, {'neg': 0.035, 'neu': 0.819, 'pos': 0.146, 'compound': 0.7191}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.8126}, {'neg': 0.134, 'neu': 0.746, 'pos': 0.119, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.616, 'pos': 0.384, 'compound': 0.9747}, {'neg': 0.178, 'neu': 0.697, 'pos': 0.125, 'compound': -0.2263}, {'neg': 0.154, 'neu': 0.696, 'pos': 0.151, 'compound': -0.296}, {'neg': 0.277, 'neu': 0.672, 'pos': 0.051, 'compound': -0.8126}, {'neg': 0.074, 'neu': 0.691, 'pos': 0.235, 'compound': 0.743}, {'neg': 0.205, 'neu': 0.587, 'pos': 0.208, 'compound': -0.2058}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.7269}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.5574}, {'neg': 0.074, 'neu': 0.853, 'pos': 0.074, 'compound': 0.0}, {'neg': 0.076, 'neu': 0.763, 'pos': 0.161, 'compound': 0.4588}, {'neg': 0.08, 'neu': 0.873, 'pos': 0.047, 'compound': -0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.778, 'pos': 0.222, 'compound': 0.7506}, {'neg': 0.119, 'neu': 0.761, 'pos': 0.121, 'compound': 0.0258}, {'neg': 0.242, 'neu': 0.699, 'pos': 0.059, 'compound': -0.8225}, {'neg': 0.0, 'neu': 0.668, 'pos': 0.332, 'compound': 0.9371}, {'neg': 0.158, 'neu': 0.842, 'pos': 0.0, 'compound': -0.7184}, {'neg': 0.194, 'neu': 0.701, 'pos': 0.105, 'compound': -0.4215}, {'neg': 0.23, 'neu': 0.746, 'pos': 0.024, 'compound': -0.8555}, {'neg': 0.074, 'neu': 0.686, 'pos': 0.24, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.759, 'pos': 0.241, 'compound': 0.8442}, {'neg': 0.093, 'neu': 0.749, 'pos': 0.158, 'compound': 0.296}, {'neg': 0.226, 'neu': 0.679, 'pos': 0.094, 'compound': -0.7184}, {'neg': 0.0, 'neu': 0.526, 'pos': 0.474, 'compound': 0.9371}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.6808}, {'neg': 0.251, 'neu': 0.556, 'pos': 0.193, 'compound': -0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.316, 'neu': 0.6, 'pos': 0.084, 'compound': -0.9403}, {'neg': 0.0, 'neu': 0.815, 'pos': 0.185, 'compound': 0.7579}, {'neg': 0.107, 'neu': 0.777, 'pos': 0.117, 'compound': 0.0516}, {'neg': 0.095, 'neu': 0.713, 'pos': 0.192, 'compound': 0.5994}, {'neg': 0.122, 'neu': 0.596, 'pos': 0.283, 'compound': 0.8176}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.627, 'pos': 0.373, 'compound': 0.8176}, {'neg': 0.079, 'neu': 0.847, 'pos': 0.074, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.687, 'pos': 0.313, 'compound': 0.8885}, {'neg': 0.143, 'neu': 0.674, 'pos': 0.183, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.599, 'pos': 0.401, 'compound': 0.9136}, {'neg': 0.0, 'neu': 0.806, 'pos': 0.194, 'compound': 0.8442}, {'neg': 0.086, 'neu': 0.828, 'pos': 0.086, 'compound': 0.0}, {'neg': 0.098, 'neu': 0.78, 'pos': 0.122, 'compound': 0.128}, {'neg': 0.207, 'neu': 0.67, 'pos': 0.123, 'compound': -0.6124}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.103, 'neu': 0.69, 'pos': 0.207, 'compound': 0.4019}, {'neg': 0.153, 'neu': 0.682, 'pos': 0.165, 'compound': 0.0516}, {'neg': 0.088, 'neu': 0.655, 'pos': 0.257, 'compound': 0.8176}, {'neg': 0.303, 'neu': 0.697, 'pos': 0.0, 'compound': -0.8402}, {'neg': 0.133, 'neu': 0.762, 'pos': 0.106, 'compound': -0.2732}, {'neg': 0.259, 'neu': 0.623, 'pos': 0.118, 'compound': -0.6705}, {'neg': 0.0, 'neu': 0.936, 'pos': 0.064, 'compound': 0.2263}, {'neg': 0.084, 'neu': 0.836, 'pos': 0.08, 'compound': -0.0258}, {'neg': 0.094, 'neu': 0.827, 'pos': 0.079, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.583, 'pos': 0.417, 'compound': 0.9764}, {'neg': 0.052, 'neu': 0.948, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.128, 'neu': 0.65, 'pos': 0.222, 'compound': 0.5994}, {'neg': 0.0, 'neu': 0.699, 'pos': 0.301, 'compound': 0.8225}, {'neg': 0.0, 'neu': 0.795, 'pos': 0.205, 'compound': 0.6908}, {'neg': 0.066, 'neu': 0.841, 'pos': 0.093, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.637, 'pos': 0.363, 'compound': 0.8271}, {'neg': 0.0, 'neu': 0.505, 'pos': 0.495, 'compound': 0.9136}, {'neg': 0.057, 'neu': 0.898, 'pos': 0.045, 'compound': -0.128}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.939, 'pos': 0.061, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.7818}, {'neg': 0.0, 'neu': 0.63, 'pos': 0.37, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.933, 'pos': 0.067, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.854, 'pos': 0.146, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.662, 'pos': 0.338, 'compound': 0.9231}, {'neg': 0.138, 'neu': 0.625, 'pos': 0.237, 'compound': 0.296}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.101, 'neu': 0.795, 'pos': 0.105, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.729, 'pos': 0.271, 'compound': 0.7783}, {'neg': 0.132, 'neu': 0.677, 'pos': 0.191, 'compound': 0.5106}, {'neg': 0.229, 'neu': 0.771, 'pos': 0.0, 'compound': -0.7648}, {'neg': 0.064, 'neu': 0.847, 'pos': 0.089, 'compound': 0.0258}, {'neg': 0.119, 'neu': 0.717, 'pos': 0.164, 'compound': 0.296}, {'neg': 0.078, 'neu': 0.635, 'pos': 0.287, 'compound': 0.6412}, {'neg': 0.065, 'neu': 0.89, 'pos': 0.045, 'compound': -0.1531}, {'neg': 0.072, 'neu': 0.856, 'pos': 0.072, 'compound': 0.0}, {'neg': 0.042, 'neu': 0.958, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.554, 'pos': 0.446, 'compound': 0.9022}, {'neg': 0.241, 'neu': 0.759, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.825, 'pos': 0.175, 'compound': 0.8442}, {'neg': 0.046, 'neu': 0.723, 'pos': 0.231, 'compound': 0.7717}, {'neg': 0.105, 'neu': 0.895, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.108, 'neu': 0.763, 'pos': 0.129, 'compound': 0.128}, {'neg': 0.327, 'neu': 0.558, 'pos': 0.116, 'compound': -0.6486}, {'neg': 0.028, 'neu': 0.972, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.192, 'neu': 0.722, 'pos': 0.086, 'compound': -0.4767}, {'neg': 0.174, 'neu': 0.612, 'pos': 0.213, 'compound': 0.2732}, {'neg': 0.076, 'neu': 0.735, 'pos': 0.188, 'compound': 0.4519}, {'neg': 0.0, 'neu': 0.703, 'pos': 0.297, 'compound': 0.9136}, {'neg': 0.0, 'neu': 0.736, 'pos': 0.264, 'compound': 0.7269}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.785, 'pos': 0.215, 'compound': 0.6369}, {'neg': 0.085, 'neu': 0.846, 'pos': 0.069, 'compound': -0.128}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.8126}, {'neg': 0.0, 'neu': 0.82, 'pos': 0.18, 'compound': 0.7783}, {'neg': 0.077, 'neu': 0.745, 'pos': 0.178, 'compound': 0.5859}, {'neg': 0.069, 'neu': 0.754, 'pos': 0.177, 'compound': 0.6597}, {'neg': 0.303, 'neu': 0.568, 'pos': 0.129, 'compound': -0.8481}, {'neg': 0.05, 'neu': 0.876, 'pos': 0.075, 'compound': 0.0828}, {'neg': 0.077, 'neu': 0.825, 'pos': 0.098, 'compound': 0.1935}, {'neg': 0.226, 'neu': 0.632, 'pos': 0.142, 'compound': -0.1531}, {'neg': 0.103, 'neu': 0.737, 'pos': 0.16, 'compound': 0.4019}, {'neg': 0.119, 'neu': 0.612, 'pos': 0.269, 'compound': 0.5267}, {'neg': 0.147, 'neu': 0.609, 'pos': 0.244, 'compound': 0.3612}, {'neg': 0.232, 'neu': 0.667, 'pos': 0.102, 'compound': -0.6249}, {'neg': 0.104, 'neu': 0.896, 'pos': 0.0, 'compound': -0.5116}, {'neg': 0.147, 'neu': 0.684, 'pos': 0.169, 'compound': 0.0258}, {'neg': 0.079, 'neu': 0.893, 'pos': 0.028, 'compound': -0.4588}, {'neg': 0.112, 'neu': 0.888, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.346, 'neu': 0.654, 'pos': 0.0, 'compound': -0.9231}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.723, 'pos': 0.277, 'compound': 0.8979}, {'neg': 0.0, 'neu': 0.963, 'pos': 0.037, 'compound': 0.2023}, {'neg': 0.145, 'neu': 0.817, 'pos': 0.038, 'compound': -0.569}, {'neg': 0.056, 'neu': 0.871, 'pos': 0.073, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.6597}, {'neg': 0.083, 'neu': 0.688, 'pos': 0.228, 'compound': 0.8402}, {'neg': 0.279, 'neu': 0.642, 'pos': 0.079, 'compound': -0.9246}, {'neg': 0.245, 'neu': 0.585, 'pos': 0.17, 'compound': -0.1027}, {'neg': 0.225, 'neu': 0.72, 'pos': 0.055, 'compound': -0.6124}, {'neg': 0.121, 'neu': 0.645, 'pos': 0.234, 'compound': 0.7717}, {'neg': 0.078, 'neu': 0.829, 'pos': 0.093, 'compound': 0.1134}, {'neg': 0.0, 'neu': 0.746, 'pos': 0.254, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.788, 'pos': 0.212, 'compound': 0.7783}, {'neg': 0.199, 'neu': 0.508, 'pos': 0.293, 'compound': 0.34}, {'neg': 0.085, 'neu': 0.692, 'pos': 0.223, 'compound': 0.5267}, {'neg': 0.235, 'neu': 0.765, 'pos': 0.0, 'compound': -0.9201}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.34}, {'neg': 0.194, 'neu': 0.612, 'pos': 0.194, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.911, 'pos': 0.089, 'compound': 0.6124}, {'neg': 0.099, 'neu': 0.623, 'pos': 0.278, 'compound': 0.5994}, {'neg': 0.086, 'neu': 0.801, 'pos': 0.113, 'compound': -0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.093, 'neu': 0.846, 'pos': 0.062, 'compound': -0.2828}, {'neg': 0.111, 'neu': 0.779, 'pos': 0.111, 'compound': 0.0}, {'neg': 0.206, 'neu': 0.731, 'pos': 0.063, 'compound': -0.6486}, {'neg': 0.146, 'neu': 0.824, 'pos': 0.03, 'compound': -0.7269}, {'neg': 0.111, 'neu': 0.451, 'pos': 0.439, 'compound': 0.7906}, {'neg': 0.078, 'neu': 0.694, 'pos': 0.228, 'compound': 0.6369}, {'neg': 0.258, 'neu': 0.742, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.0, 'neu': 0.627, 'pos': 0.373, 'compound': 0.872}, {'neg': 0.097, 'neu': 0.767, 'pos': 0.137, 'compound': 0.296}, {'neg': 0.152, 'neu': 0.848, 'pos': 0.0, 'compound': -0.6124}, {'neg': 0.313, 'neu': 0.687, 'pos': 0.0, 'compound': -0.8591}, {'neg': 0.059, 'neu': 0.618, 'pos': 0.323, 'compound': 0.8552}, {'neg': 0.161, 'neu': 0.726, 'pos': 0.113, 'compound': -0.2748}, {'neg': 0.326, 'neu': 0.587, 'pos': 0.087, 'compound': -0.8807}, {'neg': 0.0, 'neu': 0.797, 'pos': 0.203, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.764, 'pos': 0.236, 'compound': 0.7003}, {'neg': 0.104, 'neu': 0.741, 'pos': 0.155, 'compound': 0.128}, {'neg': 0.0, 'neu': 0.836, 'pos': 0.164, 'compound': 0.6908}, {'neg': 0.043, 'neu': 0.861, 'pos': 0.096, 'compound': 0.2732}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.171, 'neu': 0.685, 'pos': 0.144, 'compound': -0.3687}, {'neg': 0.106, 'neu': 0.716, 'pos': 0.178, 'compound': 0.4404}, {'neg': 0.25, 'neu': 0.541, 'pos': 0.209, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.7351}, {'neg': 0.122, 'neu': 0.717, 'pos': 0.161, 'compound': 0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.8625}, {'neg': 0.214, 'neu': 0.786, 'pos': 0.0, 'compound': -0.7184}, {'neg': 0.0, 'neu': 0.656, 'pos': 0.344, 'compound': 0.9413}, {'neg': 0.051, 'neu': 0.767, 'pos': 0.183, 'compound': 0.8225}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.338, 'neu': 0.541, 'pos': 0.121, 'compound': -0.8402}, {'neg': 0.112, 'neu': 0.67, 'pos': 0.218, 'compound': 0.4404}, {'neg': 0.119, 'neu': 0.782, 'pos': 0.099, 'compound': -0.1531}, {'neg': 0.133, 'neu': 0.569, 'pos': 0.299, 'compound': 0.7184}, {'neg': 0.201, 'neu': 0.745, 'pos': 0.054, 'compound': -0.7845}, {'neg': 0.058, 'neu': 0.652, 'pos': 0.29, 'compound': 0.8519}, {'neg': 0.099, 'neu': 0.798, 'pos': 0.103, 'compound': 0.296}, {'neg': 0.129, 'neu': 0.871, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.141, 'neu': 0.719, 'pos': 0.141, 'compound': 0.0}, {'neg': 0.149, 'neu': 0.687, 'pos': 0.164, 'compound': 0.4195}, {'neg': 0.0, 'neu': 0.664, 'pos': 0.336, 'compound': 0.8225}, {'neg': 0.276, 'neu': 0.534, 'pos': 0.19, 'compound': -0.4404}, {'neg': 0.105, 'neu': 0.895, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.859, 'pos': 0.141, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.716, 'pos': 0.284, 'compound': 0.8591}, {'neg': 0.134, 'neu': 0.586, 'pos': 0.281, 'compound': 0.8689}, {'neg': 0.233, 'neu': 0.708, 'pos': 0.059, 'compound': -0.8126}, {'neg': 0.0, 'neu': 0.782, 'pos': 0.218, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.8834}, {'neg': 0.131, 'neu': 0.78, 'pos': 0.089, 'compound': -0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.101, 'neu': 0.727, 'pos': 0.172, 'compound': 0.6369}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.09, 'neu': 0.603, 'pos': 0.308, 'compound': 0.886}, {'neg': 0.112, 'neu': 0.785, 'pos': 0.103, 'compound': -0.3182}, {'neg': 0.074, 'neu': 0.839, 'pos': 0.087, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.895, 'pos': 0.105, 'compound': 0.5106}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.221, 'neu': 0.779, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.829, 'pos': 0.171, 'compound': 0.7184}, {'neg': 0.161, 'neu': 0.778, 'pos': 0.061, 'compound': -0.5574}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.766, 'pos': 0.234, 'compound': 0.7506}, {'neg': 0.146, 'neu': 0.753, 'pos': 0.1, 'compound': -0.2732}, {'neg': 0.236, 'neu': 0.627, 'pos': 0.137, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.852, 'pos': 0.148, 'compound': 0.5106}, {'neg': 0.11, 'neu': 0.691, 'pos': 0.199, 'compound': 0.5267}, {'neg': 0.097, 'neu': 0.665, 'pos': 0.238, 'compound': 0.6249}, {'neg': 0.187, 'neu': 0.674, 'pos': 0.14, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.735, 'pos': 0.265, 'compound': 0.9136}, {'neg': 0.0, 'neu': 0.842, 'pos': 0.158, 'compound': 0.4939}, {'neg': 0.171, 'neu': 0.769, 'pos': 0.06, 'compound': -0.6808}, {'neg': 0.094, 'neu': 0.718, 'pos': 0.188, 'compound': 0.5267}, {'neg': 0.139, 'neu': 0.769, 'pos': 0.092, 'compound': -0.3818}, {'neg': 0.285, 'neu': 0.526, 'pos': 0.189, 'compound': -0.5106}, {'neg': 0.068, 'neu': 0.694, 'pos': 0.238, 'compound': 0.8779}, {'neg': 0.104, 'neu': 0.842, 'pos': 0.054, 'compound': -0.3182}, {'neg': 0.141, 'neu': 0.814, 'pos': 0.045, 'compound': -0.6486}, {'neg': 0.0, 'neu': 0.805, 'pos': 0.195, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.6597}, {'neg': 0.085, 'neu': 0.692, 'pos': 0.223, 'compound': 0.5267}, {'neg': 0.155, 'neu': 0.845, 'pos': 0.0, 'compound': -0.5574}, {'neg': 0.0, 'neu': 0.796, 'pos': 0.204, 'compound': 0.8176}, {'neg': 0.208, 'neu': 0.792, 'pos': 0.0, 'compound': -0.743}, {'neg': 0.0, 'neu': 0.86, 'pos': 0.14, 'compound': 0.3818}, {'neg': 0.156, 'neu': 0.583, 'pos': 0.26, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.951, 'pos': 0.049, 'compound': 0.0772}, {'neg': 0.092, 'neu': 0.782, 'pos': 0.126, 'compound': 0.0516}, {'neg': 0.35, 'neu': 0.65, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.084, 'neu': 0.916, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.476, 'pos': 0.524, 'compound': 0.9371}, {'neg': 0.071, 'neu': 0.895, 'pos': 0.034, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.49, 'pos': 0.51, 'compound': 0.9779}, {'neg': 0.0, 'neu': 0.676, 'pos': 0.324, 'compound': 0.875}, {'neg': 0.171, 'neu': 0.661, 'pos': 0.168, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.945, 'pos': 0.055, 'compound': 0.2023}, {'neg': 0.037, 'neu': 0.963, 'pos': 0.0, 'compound': -0.0516}, {'neg': 0.093, 'neu': 0.662, 'pos': 0.245, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.705, 'pos': 0.295, 'compound': 0.7717}, {'neg': 0.081, 'neu': 0.838, 'pos': 0.081, 'compound': 0.0}, {'neg': 0.129, 'neu': 0.683, 'pos': 0.188, 'compound': 0.296}, {'neg': 0.254, 'neu': 0.51, 'pos': 0.237, 'compound': -0.296}, {'neg': 0.195, 'neu': 0.641, 'pos': 0.164, 'compound': -0.0516}, {'neg': 0.248, 'neu': 0.621, 'pos': 0.131, 'compound': -0.5994}, {'neg': 0.05, 'neu': 0.816, 'pos': 0.134, 'compound': 0.5423}, {'neg': 0.085, 'neu': 0.725, 'pos': 0.19, 'compound': 0.7269}, {'neg': 0.284, 'neu': 0.716, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.266, 'neu': 0.665, 'pos': 0.069, 'compound': -0.7906}, {'neg': 0.105, 'neu': 0.895, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.068, 'neu': 0.42, 'pos': 0.512, 'compound': 0.9423}, {'neg': 0.0, 'neu': 0.785, 'pos': 0.215, 'compound': 0.8176}, {'neg': 0.0, 'neu': 0.945, 'pos': 0.055, 'compound': 0.3687}, {'neg': 0.094, 'neu': 0.861, 'pos': 0.045, 'compound': -0.34}, {'neg': 0.132, 'neu': 0.662, 'pos': 0.205, 'compound': 0.5423}, {'neg': 0.066, 'neu': 0.747, 'pos': 0.188, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.582, 'pos': 0.418, 'compound': 0.9403}, {'neg': 0.112, 'neu': 0.574, 'pos': 0.314, 'compound': 0.6908}, {'neg': 0.277, 'neu': 0.646, 'pos': 0.077, 'compound': -0.6705}, {'neg': 0.175, 'neu': 0.768, 'pos': 0.057, 'compound': -0.7184}, {'neg': 0.0, 'neu': 0.924, 'pos': 0.076, 'compound': 0.4019}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.055, 'neu': 0.79, 'pos': 0.155, 'compound': 0.5994}, {'neg': 0.211, 'neu': 0.679, 'pos': 0.11, 'compound': -0.5994}, {'neg': 0.143, 'neu': 0.774, 'pos': 0.083, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.586, 'pos': 0.414, 'compound': 0.8834}, {'neg': 0.0, 'neu': 0.713, 'pos': 0.287, 'compound': 0.926}, {'neg': 0.076, 'neu': 0.677, 'pos': 0.247, 'compound': 0.6808}, {'neg': 0.173, 'neu': 0.789, 'pos': 0.038, 'compound': -0.6808}, {'neg': 0.0, 'neu': 0.946, 'pos': 0.054, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.745, 'pos': 0.255, 'compound': 0.9186}, {'neg': 0.121, 'neu': 0.805, 'pos': 0.075, 'compound': -0.2023}, {'neg': 0.26, 'neu': 0.499, 'pos': 0.241, 'compound': -0.1779}, {'neg': 0.119, 'neu': 0.751, 'pos': 0.131, 'compound': 0.128}, {'neg': 0.194, 'neu': 0.78, 'pos': 0.026, 'compound': -0.7497}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.693, 'pos': 0.307, 'compound': 0.9371}, {'neg': 0.12, 'neu': 0.785, 'pos': 0.095, 'compound': -0.3612}, {'neg': 0.176, 'neu': 0.642, 'pos': 0.182, 'compound': 0.0516}, {'neg': 0.1, 'neu': 0.9, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.172, 'neu': 0.751, 'pos': 0.078, 'compound': -0.5423}, {'neg': 0.174, 'neu': 0.717, 'pos': 0.109, 'compound': -0.2263}, {'neg': 0.226, 'neu': 0.679, 'pos': 0.094, 'compound': -0.5423}, {'neg': 0.078, 'neu': 0.743, 'pos': 0.179, 'compound': 0.6151}, {'neg': 0.16, 'neu': 0.84, 'pos': 0.0, 'compound': -0.765}, {'neg': 0.168, 'neu': 0.717, 'pos': 0.115, 'compound': -0.5719}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.101, 'neu': 0.899, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.766, 'pos': 0.234, 'compound': 0.8555}, {'neg': 0.073, 'neu': 0.824, 'pos': 0.103, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.787, 'pos': 0.213, 'compound': 0.5574}, {'neg': 0.088, 'neu': 0.912, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.3612}, {'neg': 0.101, 'neu': 0.78, 'pos': 0.119, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.811, 'pos': 0.189, 'compound': 0.6369}, {'neg': 0.274, 'neu': 0.665, 'pos': 0.061, 'compound': -0.8271}, {'neg': 0.104, 'neu': 0.846, 'pos': 0.05, 'compound': -0.3612}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.726, 'pos': 0.274, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.704, 'pos': 0.296, 'compound': 0.7906}, {'neg': 0.234, 'neu': 0.468, 'pos': 0.298, 'compound': 0.3818}, {'neg': 0.116, 'neu': 0.754, 'pos': 0.13, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.701, 'pos': 0.299, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.761, 'pos': 0.239, 'compound': 0.8834}, {'neg': 0.2, 'neu': 0.632, 'pos': 0.168, 'compound': -0.1531}, {'neg': 0.059, 'neu': 0.585, 'pos': 0.356, 'compound': 0.8934}, {'neg': 0.158, 'neu': 0.664, 'pos': 0.178, 'compound': 0.0516}, {'neg': 0.105, 'neu': 0.61, 'pos': 0.285, 'compound': 0.6494}, {'neg': 0.13, 'neu': 0.87, 'pos': 0.0, 'compound': -0.5106}, {'neg': 0.06, 'neu': 0.94, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.204, 'neu': 0.679, 'pos': 0.117, 'compound': -0.0258}, {'neg': 0.203, 'neu': 0.571, 'pos': 0.226, 'compound': 0.0516}, {'neg': 0.355, 'neu': 0.645, 'pos': 0.0, 'compound': -0.9686}, {'neg': 0.094, 'neu': 0.906, 'pos': 0.0, 'compound': -0.2732}, {'neg': 0.479, 'neu': 0.468, 'pos': 0.052, 'compound': -0.9477}, {'neg': 0.116, 'neu': 0.884, 'pos': 0.0, 'compound': -0.5267}, {'neg': 0.157, 'neu': 0.736, 'pos': 0.107, 'compound': -0.3818}, {'neg': 0.0, 'neu': 0.709, 'pos': 0.291, 'compound': 0.8442}, {'neg': 0.116, 'neu': 0.804, 'pos': 0.08, 'compound': -0.4939}, {'neg': 0.049, 'neu': 0.897, 'pos': 0.053, 'compound': 0.0571}, {'neg': 0.064, 'neu': 0.75, 'pos': 0.186, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.8126}, {'neg': 0.0, 'neu': 0.66, 'pos': 0.34, 'compound': 0.8689}, {'neg': 0.127, 'neu': 0.79, 'pos': 0.082, 'compound': -0.3182}, {'neg': 0.087, 'neu': 0.8, 'pos': 0.113, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.761, 'pos': 0.239, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.795, 'pos': 0.205, 'compound': 0.6597}, {'neg': 0.08, 'neu': 0.774, 'pos': 0.146, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.95, 'pos': 0.05, 'compound': 0.2023}, {'neg': 0.05, 'neu': 0.586, 'pos': 0.365, 'compound': 0.9325}, {'neg': 0.0, 'neu': 0.861, 'pos': 0.139, 'compound': 0.4404}, {'neg': 0.106, 'neu': 0.762, 'pos': 0.132, 'compound': 0.1027}, {'neg': 0.151, 'neu': 0.785, 'pos': 0.063, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.846, 'pos': 0.154, 'compound': 0.4588}, {'neg': 0.105, 'neu': 0.895, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.211, 'neu': 0.789, 'pos': 0.0, 'compound': -0.886}, {'neg': 0.0, 'neu': 0.913, 'pos': 0.087, 'compound': 0.2023}, {'neg': 0.276, 'neu': 0.612, 'pos': 0.112, 'compound': -0.7783}, {'neg': 0.0, 'neu': 0.679, 'pos': 0.321, 'compound': 0.9432}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.097, 'neu': 0.76, 'pos': 0.142, 'compound': 0.3182}, {'neg': 0.121, 'neu': 0.821, 'pos': 0.058, 'compound': -0.4404}, {'neg': 0.314, 'neu': 0.686, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.0, 'neu': 0.746, 'pos': 0.254, 'compound': 0.7003}, {'neg': 0.086, 'neu': 0.831, 'pos': 0.083, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.892, 'pos': 0.108, 'compound': 0.4404}, {'neg': 0.14, 'neu': 0.789, 'pos': 0.072, 'compound': -0.5859}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.107, 'neu': 0.672, 'pos': 0.221, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.5423}, {'neg': 0.239, 'neu': 0.761, 'pos': 0.0, 'compound': -0.875}, {'neg': 0.0, 'neu': 0.474, 'pos': 0.526, 'compound': 0.9821}, {'neg': 0.175, 'neu': 0.75, 'pos': 0.075, 'compound': -0.4939}, {'neg': 0.108, 'neu': 0.641, 'pos': 0.251, 'compound': 0.7964}, {'neg': 0.071, 'neu': 0.684, 'pos': 0.245, 'compound': 0.7269}, {'neg': 0.068, 'neu': 0.763, 'pos': 0.168, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.913, 'pos': 0.087, 'compound': 0.4207}, {'neg': 0.06, 'neu': 0.7, 'pos': 0.241, 'compound': 0.7783}, {'neg': 0.075, 'neu': 0.833, 'pos': 0.092, 'compound': 0.1461}, {'neg': 0.0, 'neu': 0.676, 'pos': 0.324, 'compound': 0.9403}, {'neg': 0.18, 'neu': 0.602, 'pos': 0.218, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.3612}, {'neg': 0.113, 'neu': 0.833, 'pos': 0.054, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.773, 'pos': 0.227, 'compound': 0.6124}, {'neg': 0.053, 'neu': 0.84, 'pos': 0.107, 'compound': 0.3818}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.115, 'neu': 0.769, 'pos': 0.115, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.736, 'pos': 0.264, 'compound': 0.8779}, {'neg': 0.151, 'neu': 0.578, 'pos': 0.271, 'compound': 0.7506}, {'neg': 0.0, 'neu': 0.65, 'pos': 0.35, 'compound': 0.9274}, {'neg': 0.233, 'neu': 0.606, 'pos': 0.161, 'compound': -0.34}, {'neg': 0.056, 'neu': 0.852, 'pos': 0.092, 'compound': 0.128}, {'neg': 0.053, 'neu': 0.761, 'pos': 0.185, 'compound': 0.5267}, {'neg': 0.194, 'neu': 0.549, 'pos': 0.257, 'compound': 0.3612}, {'neg': 0.169, 'neu': 0.831, 'pos': 0.0, 'compound': -0.743}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.06, 'neu': 0.885, 'pos': 0.055, 'compound': -0.0516}, {'neg': 0.055, 'neu': 0.727, 'pos': 0.218, 'compound': 0.7964}, {'neg': 0.14, 'neu': 0.725, 'pos': 0.135, 'compound': -0.0258}, {'neg': 0.072, 'neu': 0.471, 'pos': 0.457, 'compound': 0.9477}, {'neg': 0.0, 'neu': 0.712, 'pos': 0.288, 'compound': 0.8442}, {'neg': 0.069, 'neu': 0.86, 'pos': 0.072, 'compound': 0.0258}, {'neg': 0.081, 'neu': 0.833, 'pos': 0.086, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.583, 'pos': 0.417, 'compound': 0.9682}, {'neg': 0.132, 'neu': 0.766, 'pos': 0.102, 'compound': -0.34}, {'neg': 0.182, 'neu': 0.608, 'pos': 0.209, 'compound': -0.296}, {'neg': 0.047, 'neu': 0.867, 'pos': 0.087, 'compound': 0.296}, {'neg': 0.128, 'neu': 0.872, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.152, 'neu': 0.712, 'pos': 0.136, 'compound': -0.128}, {'neg': 0.165, 'neu': 0.779, 'pos': 0.056, 'compound': -0.3612}, {'neg': 0.0, 'neu': 0.869, 'pos': 0.131, 'compound': 0.3089}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.3612}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.804, 'pos': 0.196, 'compound': 0.8402}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.4215}, {'neg': 0.108, 'neu': 0.892, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.162, 'neu': 0.771, 'pos': 0.067, 'compound': -0.5859}, {'neg': 0.092, 'neu': 0.751, 'pos': 0.156, 'compound': 0.296}, {'neg': 0.063, 'neu': 0.832, 'pos': 0.105, 'compound': 0.2263}, {'neg': 0.066, 'neu': 0.878, 'pos': 0.056, 'compound': -0.1027}, {'neg': 0.085, 'neu': 0.456, 'pos': 0.459, 'compound': 0.9718}, {'neg': 0.237, 'neu': 0.488, 'pos': 0.275, 'compound': 0.2197}, {'neg': 0.212, 'neu': 0.261, 'pos': 0.527, 'compound': 0.9552}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.163, 'neu': 0.692, 'pos': 0.144, 'compound': -0.25}, {'neg': 0.078, 'neu': 0.843, 'pos': 0.078, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.783, 'pos': 0.217, 'compound': 0.8074}, {'neg': 0.105, 'neu': 0.572, 'pos': 0.322, 'compound': 0.802}, {'neg': 0.262, 'neu': 0.459, 'pos': 0.279, 'compound': -0.1779}, {'neg': 0.065, 'neu': 0.889, 'pos': 0.046, 'compound': -0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.34}, {'neg': 0.264, 'neu': 0.693, 'pos': 0.044, 'compound': -0.9186}, {'neg': 0.081, 'neu': 0.847, 'pos': 0.072, 'compound': -0.0772}, {'neg': 0.247, 'neu': 0.753, 'pos': 0.0, 'compound': -0.8481}, {'neg': 0.059, 'neu': 0.587, 'pos': 0.354, 'compound': 0.911}, {'neg': 0.124, 'neu': 0.645, 'pos': 0.23, 'compound': 0.3182}, {'neg': 0.087, 'neu': 0.675, 'pos': 0.238, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.804, 'pos': 0.196, 'compound': 0.6808}, {'neg': 0.182, 'neu': 0.647, 'pos': 0.17, 'compound': -0.128}, {'neg': 0.312, 'neu': 0.688, 'pos': 0.0, 'compound': -0.8225}, {'neg': 0.072, 'neu': 0.77, 'pos': 0.158, 'compound': 0.5653}, {'neg': 0.152, 'neu': 0.695, 'pos': 0.153, 'compound': 0.0258}, {'neg': 0.122, 'neu': 0.802, 'pos': 0.076, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.782, 'pos': 0.218, 'compound': 0.886}, {'neg': 0.073, 'neu': 0.809, 'pos': 0.118, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.34}, {'neg': 0.141, 'neu': 0.731, 'pos': 0.128, 'compound': -0.2023}, {'neg': 0.055, 'neu': 0.683, 'pos': 0.263, 'compound': 0.7269}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.052, 'neu': 0.58, 'pos': 0.368, 'compound': 0.936}, {'neg': 0.097, 'neu': 0.811, 'pos': 0.093, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.442, 'pos': 0.558, 'compound': 0.9661}, {'neg': 0.255, 'neu': 0.57, 'pos': 0.174, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.897, 'pos': 0.103, 'compound': 0.34}, {'neg': 0.065, 'neu': 0.654, 'pos': 0.281, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.848, 'pos': 0.152, 'compound': 0.3612}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.093, 'neu': 0.717, 'pos': 0.19, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.706, 'pos': 0.294, 'compound': 0.6124}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.857, 'pos': 0.143, 'compound': 0.6908}, {'neg': 0.208, 'neu': 0.552, 'pos': 0.241, 'compound': 0.128}, {'neg': 0.2, 'neu': 0.621, 'pos': 0.179, 'compound': -0.1531}, {'neg': 0.1, 'neu': 0.798, 'pos': 0.102, 'compound': 0.0258}, {'neg': 0.103, 'neu': 0.783, 'pos': 0.114, 'compound': 0.0772}, {'neg': 0.123, 'neu': 0.639, 'pos': 0.238, 'compound': 0.6369}, {'neg': 0.338, 'neu': 0.592, 'pos': 0.07, 'compound': -0.8591}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.5267}, {'neg': 0.0, 'neu': 0.928, 'pos': 0.072, 'compound': 0.1027}, {'neg': 0.168, 'neu': 0.733, 'pos': 0.099, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.787, 'pos': 0.213, 'compound': 0.6597}, {'neg': 0.138, 'neu': 0.718, 'pos': 0.144, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.854, 'pos': 0.146, 'compound': 0.4404}, {'neg': 0.09, 'neu': 0.768, 'pos': 0.143, 'compound': 0.34}, {'neg': 0.321, 'neu': 0.553, 'pos': 0.126, 'compound': -0.7783}, {'neg': 0.085, 'neu': 0.723, 'pos': 0.192, 'compound': 0.5267}, {'neg': 0.153, 'neu': 0.682, 'pos': 0.165, 'compound': 0.0516}, {'neg': 0.176, 'neu': 0.79, 'pos': 0.033, 'compound': -0.6908}, {'neg': 0.156, 'neu': 0.74, 'pos': 0.105, 'compound': -0.25}, {'neg': 0.069, 'neu': 0.897, 'pos': 0.034, 'compound': -0.3182}, {'neg': 0.101, 'neu': 0.783, 'pos': 0.115, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.795, 'pos': 0.205, 'compound': 0.6369}, {'neg': 0.105, 'neu': 0.716, 'pos': 0.179, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.494, 'pos': 0.506, 'compound': 0.9661}, {'neg': 0.296, 'neu': 0.62, 'pos': 0.084, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.777, 'pos': 0.223, 'compound': 0.6808}, {'neg': 0.086, 'neu': 0.606, 'pos': 0.308, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.545, 'pos': 0.455, 'compound': 0.8934}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.887, 'pos': 0.113, 'compound': 0.4215}, {'neg': 0.102, 'neu': 0.721, 'pos': 0.177, 'compound': 0.3182}, {'neg': 0.147, 'neu': 0.853, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.137, 'neu': 0.519, 'pos': 0.344, 'compound': 0.6597}, {'neg': 0.042, 'neu': 0.683, 'pos': 0.275, 'compound': 0.9118}, {'neg': 0.05, 'neu': 0.717, 'pos': 0.233, 'compound': 0.6249}, {'neg': 0.23, 'neu': 0.658, 'pos': 0.111, 'compound': -0.4404}, {'neg': 0.259, 'neu': 0.655, 'pos': 0.086, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.827, 'pos': 0.173, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.891}, {'neg': 0.163, 'neu': 0.837, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.161, 'neu': 0.648, 'pos': 0.192, 'compound': 0.296}, {'neg': 0.092, 'neu': 0.819, 'pos': 0.089, 'compound': -0.0258}, {'neg': 0.203, 'neu': 0.455, 'pos': 0.343, 'compound': 0.4588}, {'neg': 0.094, 'neu': 0.906, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.255, 'neu': 0.745, 'pos': 0.0, 'compound': -0.8205}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.4404}, {'neg': 0.163, 'neu': 0.787, 'pos': 0.051, 'compound': -0.7184}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.694, 'pos': 0.306, 'compound': 0.936}, {'neg': 0.139, 'neu': 0.684, 'pos': 0.177, 'compound': 0.2732}, {'neg': 0.144, 'neu': 0.738, 'pos': 0.118, 'compound': 0.1531}, {'neg': 0.112, 'neu': 0.888, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.116, 'neu': 0.667, 'pos': 0.216, 'compound': 0.5659}, {'neg': 0.0, 'neu': 0.81, 'pos': 0.19, 'compound': 0.7269}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.599, 'pos': 0.401, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.5423}, {'neg': 0.099, 'neu': 0.792, 'pos': 0.109, 'compound': 0.128}, {'neg': 0.091, 'neu': 0.676, 'pos': 0.233, 'compound': 0.4939}, {'neg': 0.25, 'neu': 0.635, 'pos': 0.114, 'compound': -0.4949}, {'neg': 0.036, 'neu': 0.872, 'pos': 0.092, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.602, 'pos': 0.398, 'compound': 0.7845}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.296}, {'neg': 0.17, 'neu': 0.643, 'pos': 0.187, 'compound': -0.1012}, {'neg': 0.225, 'neu': 0.775, 'pos': 0.0, 'compound': -0.8979}, {'neg': 0.197, 'neu': 0.711, 'pos': 0.092, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.955, 'pos': 0.045, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.921, 'pos': 0.079, 'compound': 0.3612}, {'neg': 0.125, 'neu': 0.76, 'pos': 0.114, 'compound': 0.1984}, {'neg': 0.0, 'neu': 0.777, 'pos': 0.223, 'compound': 0.5574}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.913, 'pos': 0.087, 'compound': 0.296}, {'neg': 0.03, 'neu': 0.82, 'pos': 0.15, 'compound': 0.6249}, {'neg': 0.091, 'neu': 0.698, 'pos': 0.211, 'compound': 0.5267}, {'neg': 0.092, 'neu': 0.784, 'pos': 0.123, 'compound': 0.0258}, {'neg': 0.187, 'neu': 0.611, 'pos': 0.202, 'compound': -0.0772}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.3612}, {'neg': 0.126, 'neu': 0.698, 'pos': 0.177, 'compound': 0.4939}, {'neg': 0.079, 'neu': 0.882, 'pos': 0.038, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.539, 'pos': 0.461, 'compound': 0.969}, {'neg': 0.113, 'neu': 0.778, 'pos': 0.109, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.903, 'pos': 0.097, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.759, 'pos': 0.241, 'compound': 0.4215}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.697, 'pos': 0.303, 'compound': 0.8126}, {'neg': 0.0, 'neu': 0.947, 'pos': 0.053, 'compound': 0.128}, {'neg': 0.124, 'neu': 0.847, 'pos': 0.03, 'compound': -0.6249}, {'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.811, 'pos': 0.189, 'compound': 0.4939}, {'neg': 0.077, 'neu': 0.923, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.791, 'pos': 0.209, 'compound': 0.891}, {'neg': 0.133, 'neu': 0.566, 'pos': 0.301, 'compound': 0.8442}, {'neg': 0.157, 'neu': 0.716, 'pos': 0.128, 'compound': -0.128}, {'neg': 0.115, 'neu': 0.642, 'pos': 0.243, 'compound': 0.6808}, {'neg': 0.212, 'neu': 0.64, 'pos': 0.148, 'compound': -0.4404}, {'neg': 0.252, 'neu': 0.716, 'pos': 0.032, 'compound': -0.8271}, {'neg': 0.0, 'neu': 0.699, 'pos': 0.301, 'compound': 0.9153}, {'neg': 0.25, 'neu': 0.625, 'pos': 0.125, 'compound': -0.6597}, {'neg': 0.121, 'neu': 0.879, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.123, 'neu': 0.877, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.167, 'neu': 0.588, 'pos': 0.245, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.896, 'pos': 0.104, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.7096}, {'neg': 0.0, 'neu': 0.921, 'pos': 0.079, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.34}, {'neg': 0.085, 'neu': 0.588, 'pos': 0.326, 'compound': 0.802}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.7845}, {'neg': 0.059, 'neu': 0.941, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.292, 'neu': 0.595, 'pos': 0.114, 'compound': -0.6808}, {'neg': 0.0, 'neu': 0.856, 'pos': 0.144, 'compound': 0.6597}, {'neg': 0.061, 'neu': 0.753, 'pos': 0.186, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.599, 'pos': 0.401, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.682, 'pos': 0.318, 'compound': 0.8779}, {'neg': 0.0, 'neu': 0.657, 'pos': 0.343, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.755, 'pos': 0.245, 'compound': 0.7783}, {'neg': 0.185, 'neu': 0.601, 'pos': 0.214, 'compound': 0.1585}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.7579}, {'neg': 0.112, 'neu': 0.598, 'pos': 0.291, 'compound': 0.5423}, {'neg': 0.071, 'neu': 0.778, 'pos': 0.151, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.901, 'pos': 0.099, 'compound': 0.4939}, {'neg': 0.215, 'neu': 0.746, 'pos': 0.038, 'compound': -0.8519}, {'neg': 0.187, 'neu': 0.576, 'pos': 0.236, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.9, 'pos': 0.1, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.939, 'pos': 0.061, 'compound': 0.0258}, {'neg': 0.094, 'neu': 0.731, 'pos': 0.175, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.6, 'pos': 0.4, 'compound': 0.9432}, {'neg': 0.076, 'neu': 0.762, 'pos': 0.162, 'compound': 0.4019}, {'neg': 0.278, 'neu': 0.659, 'pos': 0.063, 'compound': -0.9201}, {'neg': 0.225, 'neu': 0.562, 'pos': 0.213, 'compound': -0.1531}, {'neg': 0.157, 'neu': 0.7, 'pos': 0.143, 'compound': -0.25}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.109, 'neu': 0.821, 'pos': 0.07, 'compound': -0.3182}, {'neg': 0.148, 'neu': 0.795, 'pos': 0.058, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.89, 'pos': 0.11, 'compound': 0.2732}, {'neg': 0.102, 'neu': 0.679, 'pos': 0.219, 'compound': 0.7096}, {'neg': 0.138, 'neu': 0.82, 'pos': 0.043, 'compound': -0.4404}, {'neg': 0.072, 'neu': 0.613, 'pos': 0.315, 'compound': 0.8442}, {'neg': 0.043, 'neu': 0.702, 'pos': 0.255, 'compound': 0.7215}, {'neg': 0.0, 'neu': 0.793, 'pos': 0.207, 'compound': 0.8807}, {'neg': 0.113, 'neu': 0.887, 'pos': 0.0, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.881, 'pos': 0.119, 'compound': 0.5859}, {'neg': 0.079, 'neu': 0.726, 'pos': 0.195, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.764, 'pos': 0.236, 'compound': 0.8689}, {'neg': 0.0, 'neu': 0.663, 'pos': 0.337, 'compound': 0.9538}, {'neg': 0.088, 'neu': 0.672, 'pos': 0.241, 'compound': 0.802}, {'neg': 0.171, 'neu': 0.685, 'pos': 0.144, 'compound': -0.2033}, {'neg': 0.0, 'neu': 0.858, 'pos': 0.142, 'compound': 0.5365}, {'neg': 0.02, 'neu': 0.633, 'pos': 0.347, 'compound': 0.9524}, {'neg': 0.064, 'neu': 0.847, 'pos': 0.089, 'compound': 0.0258}, {'neg': 0.052, 'neu': 0.726, 'pos': 0.222, 'compound': 0.8074}, {'neg': 0.076, 'neu': 0.667, 'pos': 0.258, 'compound': 0.7184}, {'neg': 0.097, 'neu': 0.657, 'pos': 0.246, 'compound': 0.8176}, {'neg': 0.08, 'neu': 0.828, 'pos': 0.092, 'compound': -0.128}, {'neg': 0.089, 'neu': 0.842, 'pos': 0.069, 'compound': -0.2023}, {'neg': 0.218, 'neu': 0.782, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.04, 'neu': 0.805, 'pos': 0.154, 'compound': 0.7003}, {'neg': 0.143, 'neu': 0.76, 'pos': 0.097, 'compound': -0.4588}, {'neg': 0.081, 'neu': 0.783, 'pos': 0.136, 'compound': 0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.14, 'neu': 0.751, 'pos': 0.109, 'compound': -0.0516}, {'neg': 0.07, 'neu': 0.798, 'pos': 0.132, 'compound': 0.2732}, {'neg': 0.11, 'neu': 0.782, 'pos': 0.108, 'compound': -0.0258}, {'neg': 0.049, 'neu': 0.903, 'pos': 0.048, 'compound': -0.0258}, {'neg': 0.025, 'neu': 0.684, 'pos': 0.291, 'compound': 0.9451}, {'neg': 0.248, 'neu': 0.752, 'pos': 0.0, 'compound': -0.765}, {'neg': 0.09, 'neu': 0.685, 'pos': 0.225, 'compound': 0.6486}, {'neg': 0.103, 'neu': 0.679, 'pos': 0.217, 'compound': 0.6369}, {'neg': 0.073, 'neu': 0.892, 'pos': 0.035, 'compound': -0.34}, {'neg': 0.272, 'neu': 0.536, 'pos': 0.192, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.951, 'pos': 0.049, 'compound': 0.3612}, {'neg': 0.19, 'neu': 0.81, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.119, 'neu': 0.819, 'pos': 0.061, 'compound': -0.4019}, {'neg': 0.15, 'neu': 0.784, 'pos': 0.066, 'compound': -0.5267}, {'neg': 0.108, 'neu': 0.76, 'pos': 0.132, 'compound': -0.1531}, {'neg': 0.043, 'neu': 0.909, 'pos': 0.048, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.835, 'pos': 0.165, 'compound': 0.7269}, {'neg': 0.206, 'neu': 0.619, 'pos': 0.174, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.649, 'pos': 0.351, 'compound': 0.9186}, {'neg': 0.0, 'neu': 0.819, 'pos': 0.181, 'compound': 0.7351}, {'neg': 0.234, 'neu': 0.766, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.21, 'neu': 0.694, 'pos': 0.096, 'compound': -0.7269}, {'neg': 0.092, 'neu': 0.846, 'pos': 0.062, 'compound': -0.296}, {'neg': 0.22, 'neu': 0.611, 'pos': 0.169, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.893, 'pos': 0.107, 'compound': 0.5859}, {'neg': 0.195, 'neu': 0.747, 'pos': 0.059, 'compound': -0.624}, {'neg': 0.181, 'neu': 0.649, 'pos': 0.17, 'compound': -0.128}, {'neg': 0.184, 'neu': 0.628, 'pos': 0.188, 'compound': 0.0258}, {'neg': 0.214, 'neu': 0.76, 'pos': 0.025, 'compound': -0.8658}, {'neg': 0.0, 'neu': 0.728, 'pos': 0.272, 'compound': 0.8442}, {'neg': 0.076, 'neu': 0.692, 'pos': 0.232, 'compound': 0.5423}, {'neg': 0.096, 'neu': 0.759, 'pos': 0.145, 'compound': 0.128}, {'neg': 0.175, 'neu': 0.758, 'pos': 0.067, 'compound': -0.5719}, {'neg': 0.144, 'neu': 0.806, 'pos': 0.051, 'compound': -0.5994}, {'neg': 0.241, 'neu': 0.759, 'pos': 0.0, 'compound': -0.8591}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.8779}, {'neg': 0.163, 'neu': 0.783, 'pos': 0.054, 'compound': -0.5574}, {'neg': 0.166, 'neu': 0.621, 'pos': 0.213, 'compound': 0.1531}, {'neg': 0.202, 'neu': 0.776, 'pos': 0.022, 'compound': -0.886}, {'neg': 0.05, 'neu': 0.896, 'pos': 0.054, 'compound': 0.0516}, {'neg': 0.048, 'neu': 0.859, 'pos': 0.093, 'compound': 0.3182}, {'neg': 0.195, 'neu': 0.675, 'pos': 0.13, 'compound': -0.5851}, {'neg': 0.053, 'neu': 0.947, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.105, 'neu': 0.748, 'pos': 0.147, 'compound': 0.4588}, {'neg': 0.126, 'neu': 0.827, 'pos': 0.047, 'compound': -0.4939}, {'neg': 0.142, 'neu': 0.711, 'pos': 0.147, 'compound': 0.0516}, {'neg': 0.051, 'neu': 0.826, 'pos': 0.124, 'compound': 0.4404}, {'neg': 0.072, 'neu': 0.833, 'pos': 0.095, 'compound': 0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.064, 'neu': 0.811, 'pos': 0.124, 'compound': 0.3612}, {'neg': 0.134, 'neu': 0.763, 'pos': 0.103, 'compound': -0.25}, {'neg': 0.0, 'neu': 0.84, 'pos': 0.16, 'compound': 0.8519}, {'neg': 0.168, 'neu': 0.773, 'pos': 0.059, 'compound': -0.5994}, {'neg': 0.089, 'neu': 0.664, 'pos': 0.247, 'compound': 0.743}, {'neg': 0.059, 'neu': 0.767, 'pos': 0.174, 'compound': 0.6808}, {'neg': 0.056, 'neu': 0.513, 'pos': 0.431, 'compound': 0.9413}, {'neg': 0.123, 'neu': 0.877, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.09, 'neu': 0.675, 'pos': 0.235, 'compound': 0.5423}, {'neg': 0.064, 'neu': 0.755, 'pos': 0.182, 'compound': 0.25}, {'neg': 0.061, 'neu': 0.663, 'pos': 0.276, 'compound': 0.7964}, {'neg': 0.077, 'neu': 0.665, 'pos': 0.258, 'compound': 0.923}, {'neg': 0.081, 'neu': 0.776, 'pos': 0.143, 'compound': 0.2732}, {'neg': 0.095, 'neu': 0.737, 'pos': 0.168, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.582, 'pos': 0.418, 'compound': 0.9335}, {'neg': 0.099, 'neu': 0.803, 'pos': 0.099, 'compound': 0.0}, {'neg': 0.146, 'neu': 0.807, 'pos': 0.047, 'compound': -0.6486}, {'neg': 0.06, 'neu': 0.799, 'pos': 0.14, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.795, 'pos': 0.205, 'compound': 0.5994}, {'neg': 0.228, 'neu': 0.742, 'pos': 0.03, 'compound': -0.8752}, {'neg': 0.0, 'neu': 0.846, 'pos': 0.154, 'compound': 0.5478}, {'neg': 0.178, 'neu': 0.761, 'pos': 0.061, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.4215}, {'neg': 0.195, 'neu': 0.653, 'pos': 0.152, 'compound': -0.5859}, {'neg': 0.067, 'neu': 0.743, 'pos': 0.191, 'compound': 0.4588}, {'neg': 0.414, 'neu': 0.494, 'pos': 0.092, 'compound': -0.9538}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.859, 'pos': 0.141, 'compound': 0.8126}, {'neg': 0.068, 'neu': 0.809, 'pos': 0.123, 'compound': 0.3182}, {'neg': 0.054, 'neu': 0.946, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.211, 'neu': 0.739, 'pos': 0.05, 'compound': -0.7845}, {'neg': 0.053, 'neu': 0.744, 'pos': 0.204, 'compound': 0.7717}, {'neg': 0.0, 'neu': 0.732, 'pos': 0.268, 'compound': 0.8176}, {'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.6249}, {'neg': 0.415, 'neu': 0.395, 'pos': 0.19, 'compound': -0.8442}, {'neg': 0.206, 'neu': 0.794, 'pos': 0.0, 'compound': -0.7579}, {'neg': 0.111, 'neu': 0.633, 'pos': 0.256, 'compound': 0.5574}, {'neg': 0.229, 'neu': 0.537, 'pos': 0.234, 'compound': 0.0516}, {'neg': 0.096, 'neu': 0.816, 'pos': 0.089, 'compound': -0.0516}, {'neg': 0.1, 'neu': 0.741, 'pos': 0.159, 'compound': 0.1531}, {'neg': 0.051, 'neu': 0.808, 'pos': 0.141, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.685, 'pos': 0.315, 'compound': 0.9349}, {'neg': 0.096, 'neu': 0.676, 'pos': 0.228, 'compound': 0.5719}, {'neg': 0.072, 'neu': 0.83, 'pos': 0.098, 'compound': 0.0516}, {'neg': 0.224, 'neu': 0.659, 'pos': 0.118, 'compound': -0.6486}, {'neg': 0.0, 'neu': 0.615, 'pos': 0.385, 'compound': 0.9325}, {'neg': 0.21, 'neu': 0.7, 'pos': 0.09, 'compound': -0.5574}, {'neg': 0.075, 'neu': 0.838, 'pos': 0.087, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.933, 'pos': 0.067, 'compound': 0.2023}, {'neg': 0.048, 'neu': 0.699, 'pos': 0.253, 'compound': 0.8126}, {'neg': 0.184, 'neu': 0.759, 'pos': 0.057, 'compound': -0.6705}, {'neg': 0.065, 'neu': 0.935, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.897, 'pos': 0.103, 'compound': 0.4588}, {'neg': 0.159, 'neu': 0.568, 'pos': 0.273, 'compound': 0.4588}, {'neg': 0.13, 'neu': 0.602, 'pos': 0.268, 'compound': 0.7579}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.114, 'neu': 0.51, 'pos': 0.376, 'compound': 0.7717}, {'neg': 0.098, 'neu': 0.827, 'pos': 0.075, 'compound': -0.296}, {'neg': 0.194, 'neu': 0.806, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.314, 'neu': 0.686, 'pos': 0.0, 'compound': -0.8625}, {'neg': 0.126, 'neu': 0.698, 'pos': 0.176, 'compound': 0.128}, {'neg': 0.125, 'neu': 0.767, 'pos': 0.107, 'compound': 0.0772}, {'neg': 0.094, 'neu': 0.67, 'pos': 0.236, 'compound': 0.6486}, {'neg': 0.096, 'neu': 0.839, 'pos': 0.065, 'compound': -0.3182}, {'neg': 0.152, 'neu': 0.704, 'pos': 0.144, 'compound': -0.0772}, {'neg': 0.089, 'neu': 0.814, 'pos': 0.097, 'compound': 0.0516}, {'neg': 0.061, 'neu': 0.812, 'pos': 0.127, 'compound': 0.3489}, {'neg': 0.0, 'neu': 0.792, 'pos': 0.208, 'compound': 0.8402}, {'neg': 0.0, 'neu': 0.956, 'pos': 0.044, 'compound': 0.0258}, {'neg': 0.297, 'neu': 0.655, 'pos': 0.048, 'compound': -0.9169}, {'neg': 0.083, 'neu': 0.917, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.952, 'pos': 0.048, 'compound': 0.0772}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.877, 'pos': 0.123, 'compound': 0.4939}, {'neg': 0.184, 'neu': 0.696, 'pos': 0.12, 'compound': -0.4588}, {'neg': 0.0, 'neu': 0.73, 'pos': 0.27, 'compound': 0.9382}, {'neg': 0.0, 'neu': 0.826, 'pos': 0.174, 'compound': 0.8785}, {'neg': 0.132, 'neu': 0.686, 'pos': 0.182, 'compound': 0.2732}, {'neg': 0.184, 'neu': 0.645, 'pos': 0.171, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.845, 'pos': 0.155, 'compound': 0.5423}, {'neg': 0.077, 'neu': 0.661, 'pos': 0.262, 'compound': 0.7506}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.819, 'pos': 0.181, 'compound': 0.6486}, {'neg': 0.07, 'neu': 0.93, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.346, 'neu': 0.654, 'pos': 0.0, 'compound': -0.8402}, {'neg': 0.179, 'neu': 0.674, 'pos': 0.147, 'compound': -0.3612}, {'neg': 0.12, 'neu': 0.802, 'pos': 0.078, 'compound': -0.296}, {'neg': 0.087, 'neu': 0.833, 'pos': 0.08, 'compound': -0.0516}, {'neg': 0.169, 'neu': 0.702, 'pos': 0.129, 'compound': -0.34}, {'neg': 0.106, 'neu': 0.623, 'pos': 0.271, 'compound': 0.3612}, {'neg': 0.094, 'neu': 0.906, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.103, 'neu': 0.897, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.081, 'neu': 0.814, 'pos': 0.105, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.6908}, {'neg': 0.081, 'neu': 0.865, 'pos': 0.053, 'compound': -0.2732}, {'neg': 0.126, 'neu': 0.802, 'pos': 0.072, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.934, 'pos': 0.066, 'compound': 0.296}, {'neg': 0.067, 'neu': 0.748, 'pos': 0.184, 'compound': 0.5709}, {'neg': 0.083, 'neu': 0.769, 'pos': 0.148, 'compound': 0.2732}, {'neg': 0.095, 'neu': 0.671, 'pos': 0.233, 'compound': 0.5994}, {'neg': 0.055, 'neu': 0.872, 'pos': 0.073, 'compound': 0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.032, 'neu': 0.628, 'pos': 0.34, 'compound': 0.9668}, {'neg': 0.133, 'neu': 0.673, 'pos': 0.194, 'compound': 0.25}, {'neg': 0.259, 'neu': 0.741, 'pos': 0.0, 'compound': -0.7717}, {'neg': 0.068, 'neu': 0.849, 'pos': 0.083, 'compound': -0.1027}, {'neg': 0.038, 'neu': 0.838, 'pos': 0.124, 'compound': 0.4588}, {'neg': 0.093, 'neu': 0.815, 'pos': 0.093, 'compound': 0.0}, {'neg': 0.207, 'neu': 0.793, 'pos': 0.0, 'compound': -0.7184}, {'neg': 0.329, 'neu': 0.571, 'pos': 0.1, 'compound': -0.8402}, {'neg': 0.062, 'neu': 0.768, 'pos': 0.171, 'compound': 0.6249}, {'neg': 0.178, 'neu': 0.713, 'pos': 0.109, 'compound': -0.4707}, {'neg': 0.073, 'neu': 0.775, 'pos': 0.152, 'compound': 0.4144}, {'neg': 0.052, 'neu': 0.635, 'pos': 0.313, 'compound': 0.9118}, {'neg': 0.134, 'neu': 0.866, 'pos': 0.0, 'compound': -0.5664}, {'neg': 0.0, 'neu': 0.58, 'pos': 0.42, 'compound': 0.969}, {'neg': 0.088, 'neu': 0.817, 'pos': 0.095, 'compound': 0.0516}, {'neg': 0.214, 'neu': 0.786, 'pos': 0.0, 'compound': -0.9056}, {'neg': 0.133, 'neu': 0.744, 'pos': 0.122, 'compound': -0.0534}, {'neg': 0.058, 'neu': 0.842, 'pos': 0.1, 'compound': 0.1531}, {'neg': 0.08, 'neu': 0.776, 'pos': 0.144, 'compound': 0.3182}, {'neg': 0.204, 'neu': 0.616, 'pos': 0.18, 'compound': -0.2732}, {'neg': 0.028, 'neu': 0.785, 'pos': 0.187, 'compound': 0.7832}, {'neg': 0.0, 'neu': 0.778, 'pos': 0.222, 'compound': 0.6908}, {'neg': 0.189, 'neu': 0.539, 'pos': 0.272, 'compound': 0.4767}, {'neg': 0.077, 'neu': 0.853, 'pos': 0.069, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.807, 'pos': 0.193, 'compound': 0.6705}, {'neg': 0.099, 'neu': 0.816, 'pos': 0.085, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.944, 'pos': 0.056, 'compound': 0.3612}, {'neg': 0.272, 'neu': 0.593, 'pos': 0.135, 'compound': -0.6249}, {'neg': 0.066, 'neu': 0.934, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.068, 'neu': 0.772, 'pos': 0.16, 'compound': 0.4588}, {'neg': 0.16, 'neu': 0.752, 'pos': 0.088, 'compound': -0.1868}, {'neg': 0.159, 'neu': 0.841, 'pos': 0.0, 'compound': -0.8442}, {'neg': 0.135, 'neu': 0.748, 'pos': 0.116, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.746, 'pos': 0.254, 'compound': 0.8176}, {'neg': 0.114, 'neu': 0.727, 'pos': 0.159, 'compound': 0.3979}, {'neg': 0.24, 'neu': 0.622, 'pos': 0.137, 'compound': -0.4215}, {'neg': 0.196, 'neu': 0.678, 'pos': 0.126, 'compound': -0.5719}, {'neg': 0.134, 'neu': 0.785, 'pos': 0.081, 'compound': -0.2081}, {'neg': 0.0, 'neu': 0.897, 'pos': 0.103, 'compound': 0.5859}, {'neg': 0.226, 'neu': 0.628, 'pos': 0.146, 'compound': -0.6486}, {'neg': 0.099, 'neu': 0.803, 'pos': 0.099, 'compound': 0.0}, {'neg': 0.085, 'neu': 0.851, 'pos': 0.064, 'compound': -0.1546}, {'neg': 0.047, 'neu': 0.741, 'pos': 0.212, 'compound': 0.8225}, {'neg': 0.24, 'neu': 0.651, 'pos': 0.109, 'compound': -0.7845}, {'neg': 0.0, 'neu': 0.722, 'pos': 0.278, 'compound': 0.743}, {'neg': 0.064, 'neu': 0.782, 'pos': 0.154, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.633, 'pos': 0.367, 'compound': 0.9169}, {'neg': 0.092, 'neu': 0.847, 'pos': 0.061, 'compound': -0.2263}, {'neg': 0.123, 'neu': 0.877, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.193, 'neu': 0.693, 'pos': 0.115, 'compound': -0.5574}, {'neg': 0.126, 'neu': 0.333, 'pos': 0.542, 'compound': 0.9552}, {'neg': 0.0, 'neu': 0.84, 'pos': 0.16, 'compound': 0.6908}, {'neg': 0.351, 'neu': 0.649, 'pos': 0.0, 'compound': -0.91}, {'neg': 0.104, 'neu': 0.831, 'pos': 0.065, 'compound': -0.3182}, {'neg': 0.096, 'neu': 0.816, 'pos': 0.089, 'compound': -0.0516}, {'neg': 0.132, 'neu': 0.868, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.111, 'neu': 0.765, 'pos': 0.123, 'compound': -0.0772}, {'neg': 0.237, 'neu': 0.763, 'pos': 0.0, 'compound': -0.9081}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.34}, {'neg': 0.116, 'neu': 0.741, 'pos': 0.143, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.4215}, {'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.7351}, {'neg': 0.088, 'neu': 0.753, 'pos': 0.158, 'compound': 0.1779}, {'neg': 0.1, 'neu': 0.9, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.133, 'neu': 0.824, 'pos': 0.043, 'compound': -0.4404}, {'neg': 0.232, 'neu': 0.452, 'pos': 0.316, 'compound': 0.4501}, {'neg': 0.118, 'neu': 0.83, 'pos': 0.052, 'compound': -0.3612}, {'neg': 0.168, 'neu': 0.721, 'pos': 0.111, 'compound': -0.5267}, {'neg': 0.042, 'neu': 0.7, 'pos': 0.258, 'compound': 0.8943}, {'neg': 0.0, 'neu': 0.891, 'pos': 0.109, 'compound': 0.5267}, {'neg': 0.267, 'neu': 0.692, 'pos': 0.041, 'compound': -0.802}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.4019}, {'neg': 0.038, 'neu': 0.682, 'pos': 0.28, 'compound': 0.9153}, {'neg': 0.038, 'neu': 0.962, 'pos': 0.0, 'compound': -0.128}, {'neg': 0.258, 'neu': 0.644, 'pos': 0.098, 'compound': -0.6908}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.53, 'pos': 0.47, 'compound': 0.9712}, {'neg': 0.0, 'neu': 0.873, 'pos': 0.127, 'compound': 0.5267}, {'neg': 0.158, 'neu': 0.506, 'pos': 0.336, 'compound': 0.9001}, {'neg': 0.181, 'neu': 0.562, 'pos': 0.257, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.918, 'pos': 0.082, 'compound': 0.3612}, {'neg': 0.103, 'neu': 0.817, 'pos': 0.08, 'compound': -0.3378}, {'neg': 0.208, 'neu': 0.792, 'pos': 0.0, 'compound': -0.743}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.7096}, {'neg': 0.0, 'neu': 0.786, 'pos': 0.214, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.711, 'pos': 0.289, 'compound': 0.7867}, {'neg': 0.047, 'neu': 0.676, 'pos': 0.276, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.3612}, {'neg': 0.099, 'neu': 0.651, 'pos': 0.25, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.721, 'pos': 0.279, 'compound': 0.886}, {'neg': 0.146, 'neu': 0.854, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.259, 'neu': 0.741, 'pos': 0.0, 'compound': -0.8126}, {'neg': 0.066, 'neu': 0.85, 'pos': 0.085, 'compound': -0.0516}, {'neg': 0.072, 'neu': 0.761, 'pos': 0.167, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.614, 'pos': 0.386, 'compound': 0.9545}, {'neg': 0.032, 'neu': 0.88, 'pos': 0.088, 'compound': 0.34}, {'neg': 0.046, 'neu': 0.87, 'pos': 0.083, 'compound': 0.25}, {'neg': 0.107, 'neu': 0.714, 'pos': 0.179, 'compound': 0.2023}, {'neg': 0.084, 'neu': 0.75, 'pos': 0.166, 'compound': 0.3818}, {'neg': 0.313, 'neu': 0.599, 'pos': 0.088, 'compound': -0.9153}, {'neg': 0.029, 'neu': 0.835, 'pos': 0.136, 'compound': 0.6249}, {'neg': 0.084, 'neu': 0.84, 'pos': 0.076, 'compound': -0.0516}, {'neg': 0.048, 'neu': 0.824, 'pos': 0.128, 'compound': 0.4215}, {'neg': 0.09, 'neu': 0.635, 'pos': 0.274, 'compound': 0.6705}, {'neg': 0.174, 'neu': 0.675, 'pos': 0.151, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.624, 'pos': 0.376, 'compound': 0.9643}, {'neg': 0.0, 'neu': 0.678, 'pos': 0.322, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.622, 'pos': 0.378, 'compound': 0.9571}, {'neg': 0.072, 'neu': 0.784, 'pos': 0.144, 'compound': 0.34}, {'neg': 0.114, 'neu': 0.69, 'pos': 0.195, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.5267}, {'neg': 0.201, 'neu': 0.646, 'pos': 0.153, 'compound': -0.4019}, {'neg': 0.066, 'neu': 0.934, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.12, 'neu': 0.832, 'pos': 0.048, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.842, 'pos': 0.158, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.633, 'pos': 0.367, 'compound': 0.9169}, {'neg': 0.135, 'neu': 0.865, 'pos': 0.0, 'compound': -0.4939}, {'neg': 0.133, 'neu': 0.741, 'pos': 0.126, 'compound': -0.0772}, {'neg': 0.192, 'neu': 0.728, 'pos': 0.079, 'compound': -0.7269}, {'neg': 0.057, 'neu': 0.71, 'pos': 0.233, 'compound': 0.836}, {'neg': 0.099, 'neu': 0.704, 'pos': 0.197, 'compound': 0.3309}, {'neg': 0.109, 'neu': 0.717, 'pos': 0.174, 'compound': 0.1779}, {'neg': 0.055, 'neu': 0.897, 'pos': 0.048, 'compound': -0.0772}, {'neg': 0.326, 'neu': 0.633, 'pos': 0.042, 'compound': -0.9468}, {'neg': 0.087, 'neu': 0.838, 'pos': 0.075, 'compound': -0.1027}, {'neg': 0.238, 'neu': 0.762, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.087, 'neu': 0.838, 'pos': 0.075, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.767, 'pos': 0.233, 'compound': 0.7845}, {'neg': 0.245, 'neu': 0.667, 'pos': 0.088, 'compound': -0.6369}, {'neg': 0.098, 'neu': 0.731, 'pos': 0.171, 'compound': 0.3538}, {'neg': 0.121, 'neu': 0.535, 'pos': 0.344, 'compound': 0.8689}, {'neg': 0.053, 'neu': 0.809, 'pos': 0.138, 'compound': 0.5106}, {'neg': 0.081, 'neu': 0.919, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.654, 'pos': 0.346, 'compound': 0.8625}, {'neg': 0.225, 'neu': 0.672, 'pos': 0.104, 'compound': -0.743}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.073, 'neu': 0.647, 'pos': 0.28, 'compound': 0.7717}, {'neg': 0.073, 'neu': 0.702, 'pos': 0.226, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.949, 'pos': 0.051, 'compound': 0.0772}, {'neg': 0.364, 'neu': 0.545, 'pos': 0.091, 'compound': -0.7579}, {'neg': 0.208, 'neu': 0.605, 'pos': 0.187, 'compound': -0.1655}, {'neg': 0.135, 'neu': 0.731, 'pos': 0.135, 'compound': 0.0041}, {'neg': 0.0, 'neu': 0.836, 'pos': 0.164, 'compound': 0.4767}, {'neg': 0.108, 'neu': 0.84, 'pos': 0.052, 'compound': -0.34}, {'neg': 0.32, 'neu': 0.68, 'pos': 0.0, 'compound': -0.8689}, {'neg': 0.118, 'neu': 0.821, 'pos': 0.061, 'compound': -0.4588}, {'neg': 0.274, 'neu': 0.664, 'pos': 0.062, 'compound': -0.872}, {'neg': 0.354, 'neu': 0.331, 'pos': 0.316, 'compound': -0.128}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.6249}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.14, 'neu': 0.674, 'pos': 0.186, 'compound': 0.3976}, {'neg': 0.0, 'neu': 0.948, 'pos': 0.052, 'compound': 0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.295, 'neu': 0.705, 'pos': 0.0, 'compound': -0.872}, {'neg': 0.128, 'neu': 0.737, 'pos': 0.135, 'compound': -0.1779}, {'neg': 0.216, 'neu': 0.597, 'pos': 0.187, 'compound': -0.2732}, {'neg': 0.084, 'neu': 0.498, 'pos': 0.417, 'compound': 0.8658}, {'neg': 0.052, 'neu': 0.948, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.197, 'neu': 0.803, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.873, 'pos': 0.127, 'compound': 0.6369}, {'neg': 0.104, 'neu': 0.896, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.843, 'pos': 0.157, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.662, 'pos': 0.338, 'compound': 0.9509}, {'neg': 0.13, 'neu': 0.808, 'pos': 0.062, 'compound': -0.3818}, {'neg': 0.102, 'neu': 0.727, 'pos': 0.171, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.386, 'pos': 0.614, 'compound': 0.975}, {'neg': 0.266, 'neu': 0.684, 'pos': 0.05, 'compound': -0.8934}, {'neg': 0.099, 'neu': 0.849, 'pos': 0.052, 'compound': -0.3182}, {'neg': 0.241, 'neu': 0.759, 'pos': 0.0, 'compound': -0.836}, {'neg': 0.083, 'neu': 0.827, 'pos': 0.09, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.649, 'pos': 0.351, 'compound': 0.8689}, {'neg': 0.072, 'neu': 0.723, 'pos': 0.205, 'compound': 0.6597}, {'neg': 0.355, 'neu': 0.61, 'pos': 0.034, 'compound': -0.9201}, {'neg': 0.0, 'neu': 0.935, 'pos': 0.065, 'compound': 0.2023}, {'neg': 0.046, 'neu': 0.954, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.17, 'neu': 0.66, 'pos': 0.17, 'compound': 0.0}, {'neg': 0.085, 'neu': 0.877, 'pos': 0.038, 'compound': -0.3818}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.069, 'neu': 0.833, 'pos': 0.098, 'compound': 0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.127, 'neu': 0.873, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.093, 'neu': 0.619, 'pos': 0.289, 'compound': 0.8176}, {'neg': 0.168, 'neu': 0.726, 'pos': 0.106, 'compound': -0.6124}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.8689}, {'neg': 0.1, 'neu': 0.739, 'pos': 0.16, 'compound': 0.5267}, {'neg': 0.145, 'neu': 0.631, 'pos': 0.224, 'compound': 0.6486}, {'neg': 0.1, 'neu': 0.554, 'pos': 0.347, 'compound': 0.6908}, {'neg': 0.164, 'neu': 0.647, 'pos': 0.189, 'compound': 0.2263}, {'neg': 0.221, 'neu': 0.726, 'pos': 0.053, 'compound': -0.7184}, {'neg': 0.15, 'neu': 0.85, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.283, 'neu': 0.642, 'pos': 0.075, 'compound': -0.9231}, {'neg': 0.0, 'neu': 0.966, 'pos': 0.034, 'compound': 0.0516}, {'neg': 0.224, 'neu': 0.665, 'pos': 0.111, 'compound': -0.6249}, {'neg': 0.14, 'neu': 0.656, 'pos': 0.204, 'compound': 0.4215}, {'neg': 0.241, 'neu': 0.714, 'pos': 0.044, 'compound': -0.7003}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.601, 'pos': 0.399, 'compound': 0.9714}, {'neg': 0.216, 'neu': 0.721, 'pos': 0.062, 'compound': -0.886}, {'neg': 0.0, 'neu': 0.758, 'pos': 0.242, 'compound': 0.9084}, {'neg': 0.197, 'neu': 0.803, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.041, 'neu': 0.81, 'pos': 0.149, 'compound': 0.6908}, {'neg': 0.062, 'neu': 0.724, 'pos': 0.214, 'compound': 0.6808}, {'neg': 0.234, 'neu': 0.766, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.082, 'neu': 0.732, 'pos': 0.186, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.7615}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.661, 'pos': 0.339, 'compound': 0.9153}, {'neg': 0.1, 'neu': 0.573, 'pos': 0.327, 'compound': 0.7096}, {'neg': 0.0, 'neu': 0.892, 'pos': 0.108, 'compound': 0.4404}, {'neg': 0.209, 'neu': 0.791, 'pos': 0.0, 'compound': -0.765}, {'neg': 0.161, 'neu': 0.732, 'pos': 0.107, 'compound': -0.3818}, {'neg': 0.146, 'neu': 0.705, 'pos': 0.149, 'compound': 0.0258}, {'neg': 0.07, 'neu': 0.543, 'pos': 0.387, 'compound': 0.872}, {'neg': 0.0, 'neu': 0.857, 'pos': 0.143, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.812, 'pos': 0.188, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.872}, {'neg': 0.069, 'neu': 0.718, 'pos': 0.213, 'compound': 0.7184}, {'neg': 0.177, 'neu': 0.678, 'pos': 0.145, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.776, 'pos': 0.224, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.757, 'pos': 0.243, 'compound': 0.7717}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.106, 'neu': 0.81, 'pos': 0.085, 'compound': -0.1531}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.788, 'pos': 0.212, 'compound': 0.7351}, {'neg': 0.118, 'neu': 0.697, 'pos': 0.185, 'compound': 0.4215}, {'neg': 0.21, 'neu': 0.678, 'pos': 0.112, 'compound': -0.4404}, {'neg': 0.322, 'neu': 0.678, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.8555}, {'neg': 0.166, 'neu': 0.755, 'pos': 0.079, 'compound': -0.3167}, {'neg': 0.284, 'neu': 0.716, 'pos': 0.0, 'compound': -0.872}, {'neg': 0.0, 'neu': 0.633, 'pos': 0.367, 'compound': 0.9524}, {'neg': 0.102, 'neu': 0.855, 'pos': 0.043, 'compound': -0.4215}, {'neg': 0.153, 'neu': 0.795, 'pos': 0.052, 'compound': -0.6369}, {'neg': 0.142, 'neu': 0.796, 'pos': 0.062, 'compound': -0.3182}, {'neg': 0.084, 'neu': 0.719, 'pos': 0.198, 'compound': 0.6908}, {'neg': 0.144, 'neu': 0.72, 'pos': 0.136, 'compound': -0.0516}, {'neg': 0.28, 'neu': 0.593, 'pos': 0.127, 'compound': -0.7506}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.851, 'pos': 0.149, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.933, 'pos': 0.067, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.737, 'pos': 0.263, 'compound': 0.886}, {'neg': 0.162, 'neu': 0.735, 'pos': 0.103, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.8885}, {'neg': 0.095, 'neu': 0.813, 'pos': 0.092, 'compound': -0.0258}, {'neg': 0.063, 'neu': 0.821, 'pos': 0.116, 'compound': 0.296}, {'neg': 0.181, 'neu': 0.669, 'pos': 0.151, 'compound': -0.2263}, {'neg': 0.156, 'neu': 0.794, 'pos': 0.05, 'compound': -0.6124}, {'neg': 0.0, 'neu': 0.779, 'pos': 0.221, 'compound': 0.6249}, {'neg': 0.404, 'neu': 0.596, 'pos': 0.0, 'compound': -0.8885}, {'neg': 0.155, 'neu': 0.845, 'pos': 0.0, 'compound': -0.5106}, {'neg': 0.132, 'neu': 0.434, 'pos': 0.434, 'compound': 0.946}, {'neg': 0.062, 'neu': 0.846, 'pos': 0.092, 'compound': 0.2023}, {'neg': 0.142, 'neu': 0.712, 'pos': 0.146, 'compound': 0.0516}, {'neg': 0.129, 'neu': 0.871, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.94, 'pos': 0.06, 'compound': 0.4215}, {'neg': 0.181, 'neu': 0.464, 'pos': 0.355, 'compound': 0.8176}, {'neg': 0.0, 'neu': 0.658, 'pos': 0.342, 'compound': 0.9337}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.073, 'neu': 0.865, 'pos': 0.062, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.852, 'pos': 0.148, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.804, 'pos': 0.196, 'compound': 0.5267}, {'neg': 0.039, 'neu': 0.771, 'pos': 0.191, 'compound': 0.7845}, {'neg': 0.0, 'neu': 0.851, 'pos': 0.149, 'compound': 0.6369}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.814, 'pos': 0.186, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.93, 'pos': 0.07, 'compound': 0.2732}, {'neg': 0.071, 'neu': 0.706, 'pos': 0.224, 'compound': 0.743}, {'neg': 0.188, 'neu': 0.61, 'pos': 0.202, 'compound': 0.128}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.073, 'neu': 0.602, 'pos': 0.326, 'compound': 0.9042}, {'neg': 0.243, 'neu': 0.757, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.12, 'neu': 0.783, 'pos': 0.097, 'compound': -0.128}, {'neg': 0.209, 'neu': 0.624, 'pos': 0.167, 'compound': -0.4404}, {'neg': 0.066, 'neu': 0.729, 'pos': 0.205, 'compound': 0.6124}, {'neg': 0.169, 'neu': 0.787, 'pos': 0.044, 'compound': -0.5267}, {'neg': 0.128, 'neu': 0.827, 'pos': 0.045, 'compound': -0.5423}, {'neg': 0.078, 'neu': 0.798, 'pos': 0.124, 'compound': 0.2732}, {'neg': 0.377, 'neu': 0.623, 'pos': 0.0, 'compound': -0.9648}, {'neg': 0.044, 'neu': 0.786, 'pos': 0.17, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.956, 'pos': 0.044, 'compound': 0.0258}, {'neg': 0.173, 'neu': 0.743, 'pos': 0.084, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.686, 'pos': 0.314, 'compound': 0.9423}, {'neg': 0.103, 'neu': 0.798, 'pos': 0.099, 'compound': -0.0258}, {'neg': 0.092, 'neu': 0.816, 'pos': 0.092, 'compound': 0.0}, {'neg': 0.121, 'neu': 0.66, 'pos': 0.219, 'compound': 0.5719}, {'neg': 0.048, 'neu': 0.704, 'pos': 0.248, 'compound': 0.7269}, {'neg': 0.153, 'neu': 0.808, 'pos': 0.039, 'compound': -0.5859}, {'neg': 0.113, 'neu': 0.7, 'pos': 0.187, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.703, 'pos': 0.297, 'compound': 0.9022}, {'neg': 0.087, 'neu': 0.719, 'pos': 0.194, 'compound': 0.6597}, {'neg': 0.114, 'neu': 0.817, 'pos': 0.069, 'compound': -0.2732}, {'neg': 0.106, 'neu': 0.657, 'pos': 0.237, 'compound': 0.802}, {'neg': 0.17, 'neu': 0.662, 'pos': 0.167, 'compound': -0.0258}, {'neg': 0.047, 'neu': 0.607, 'pos': 0.347, 'compound': 0.946}, {'neg': 0.207, 'neu': 0.598, 'pos': 0.195, 'compound': -0.0772}, {'neg': 0.081, 'neu': 0.843, 'pos': 0.075, 'compound': -0.0516}, {'neg': 0.125, 'neu': 0.573, 'pos': 0.302, 'compound': 0.8481}, {'neg': 0.144, 'neu': 0.678, 'pos': 0.177, 'compound': 0.128}, {'neg': 0.186, 'neu': 0.681, 'pos': 0.133, 'compound': -0.4404}, {'neg': 0.245, 'neu': 0.706, 'pos': 0.049, 'compound': -0.875}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.7351}, {'neg': 0.138, 'neu': 0.772, 'pos': 0.091, 'compound': -0.1027}, {'neg': 0.051, 'neu': 0.865, 'pos': 0.083, 'compound': 0.2579}, {'neg': 0.155, 'neu': 0.735, 'pos': 0.11, 'compound': -0.2732}, {'neg': 0.327, 'neu': 0.673, 'pos': 0.0, 'compound': -0.8807}, {'neg': 0.214, 'neu': 0.61, 'pos': 0.176, 'compound': -0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.265, 'neu': 0.663, 'pos': 0.072, 'compound': -0.6908}, {'neg': 0.222, 'neu': 0.502, 'pos': 0.276, 'compound': 0.1295}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.056, 'neu': 0.796, 'pos': 0.147, 'compound': 0.4767}, {'neg': 0.035, 'neu': 0.745, 'pos': 0.22, 'compound': 0.8934}, {'neg': 0.153, 'neu': 0.667, 'pos': 0.18, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.5719}, {'neg': 0.072, 'neu': 0.851, 'pos': 0.077, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.857, 'pos': 0.143, 'compound': 0.5423}, {'neg': 0.267, 'neu': 0.733, 'pos': 0.0, 'compound': -0.8442}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.073, 'neu': 0.927, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.111, 'neu': 0.889, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.231, 'neu': 0.669, 'pos': 0.1, 'compound': -0.6908}, {'neg': 0.263, 'neu': 0.526, 'pos': 0.211, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.516, 'pos': 0.484, 'compound': 0.9509}, {'neg': 0.093, 'neu': 0.805, 'pos': 0.102, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.753, 'pos': 0.247, 'compound': 0.7351}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.159, 'neu': 0.669, 'pos': 0.172, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.814, 'pos': 0.186, 'compound': 0.7906}, {'neg': 0.113, 'neu': 0.769, 'pos': 0.117, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.3612}, {'neg': 0.129, 'neu': 0.814, 'pos': 0.057, 'compound': -0.7269}, {'neg': 0.095, 'neu': 0.813, 'pos': 0.092, 'compound': -0.0258}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.141, 'neu': 0.75, 'pos': 0.109, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.656, 'pos': 0.344, 'compound': 0.8402}, {'neg': 0.13, 'neu': 0.676, 'pos': 0.195, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.918, 'pos': 0.082, 'compound': 0.3612}, {'neg': 0.169, 'neu': 0.448, 'pos': 0.383, 'compound': 0.7351}, {'neg': 0.163, 'neu': 0.837, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.125, 'neu': 0.616, 'pos': 0.259, 'compound': 0.6486}, {'neg': 0.247, 'neu': 0.753, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.167, 'neu': 0.694, 'pos': 0.139, 'compound': -0.4588}, {'neg': 0.183, 'neu': 0.7, 'pos': 0.117, 'compound': -0.4404}, {'neg': 0.047, 'neu': 0.569, 'pos': 0.384, 'compound': 0.9559}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.11, 'neu': 0.75, 'pos': 0.14, 'compound': 0.0516}, {'neg': 0.134, 'neu': 0.783, 'pos': 0.083, 'compound': -0.2732}, {'neg': 0.211, 'neu': 0.789, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.14, 'neu': 0.71, 'pos': 0.149, 'compound': 0.128}, {'neg': 0.087, 'neu': 0.705, 'pos': 0.208, 'compound': 0.5859}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.027, 'neu': 0.765, 'pos': 0.208, 'compound': 0.8807}, {'neg': 0.081, 'neu': 0.633, 'pos': 0.286, 'compound': 0.7783}, {'neg': 0.296, 'neu': 0.598, 'pos': 0.106, 'compound': -0.6908}, {'neg': 0.28, 'neu': 0.625, 'pos': 0.095, 'compound': -0.6808}, {'neg': 0.08, 'neu': 0.803, 'pos': 0.117, 'compound': 0.25}, {'neg': 0.155, 'neu': 0.763, 'pos': 0.082, 'compound': -0.5574}, {'neg': 0.074, 'neu': 0.842, 'pos': 0.084, 'compound': 0.0772}, {'neg': 0.051, 'neu': 0.812, 'pos': 0.137, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.728, 'pos': 0.272, 'compound': 0.802}, {'neg': 0.054, 'neu': 0.817, 'pos': 0.129, 'compound': 0.4588}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.073, 'neu': 0.892, 'pos': 0.035, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.965, 'pos': 0.035, 'compound': 0.0258}, {'neg': 0.085, 'neu': 0.785, 'pos': 0.131, 'compound': 0.0772}, {'neg': 0.221, 'neu': 0.751, 'pos': 0.029, 'compound': -0.8271}, {'neg': 0.125, 'neu': 0.875, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.83, 'pos': 0.17, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.903, 'pos': 0.097, 'compound': 0.4019}, {'neg': 0.135, 'neu': 0.797, 'pos': 0.069, 'compound': -0.34}, {'neg': 0.237, 'neu': 0.763, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.103, 'neu': 0.756, 'pos': 0.141, 'compound': 0.3612}, {'neg': 0.221, 'neu': 0.714, 'pos': 0.064, 'compound': -0.6597}, {'neg': 0.069, 'neu': 0.767, 'pos': 0.164, 'compound': 0.4019}, {'neg': 0.1, 'neu': 0.821, 'pos': 0.079, 'compound': -0.4019}, {'neg': 0.102, 'neu': 0.766, 'pos': 0.132, 'compound': 0.128}, {'neg': 0.131, 'neu': 0.681, 'pos': 0.188, 'compound': 0.296}, {'neg': 0.048, 'neu': 0.87, 'pos': 0.081, 'compound': 0.2023}, {'neg': 0.22, 'neu': 0.714, 'pos': 0.065, 'compound': -0.765}, {'neg': 0.199, 'neu': 0.801, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.258, 'neu': 0.672, 'pos': 0.071, 'compound': -0.6779}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.702, 'pos': 0.298, 'compound': 0.7579}, {'neg': 0.086, 'neu': 0.743, 'pos': 0.17, 'compound': 0.5423}, {'neg': 0.115, 'neu': 0.489, 'pos': 0.396, 'compound': 0.9565}, {'neg': 0.099, 'neu': 0.518, 'pos': 0.382, 'compound': 0.9337}, {'neg': 0.0, 'neu': 0.697, 'pos': 0.303, 'compound': 0.926}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.095, 'neu': 0.596, 'pos': 0.309, 'compound': 0.8885}, {'neg': 0.168, 'neu': 0.788, 'pos': 0.044, 'compound': -0.7184}, {'neg': 0.194, 'neu': 0.562, 'pos': 0.244, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.63, 'pos': 0.37, 'compound': 0.9337}, {'neg': 0.03, 'neu': 0.66, 'pos': 0.31, 'compound': 0.9403}, {'neg': 0.0, 'neu': 0.892, 'pos': 0.108, 'compound': 0.4588}, {'neg': 0.146, 'neu': 0.581, 'pos': 0.273, 'compound': 0.743}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.037, 'neu': 0.794, 'pos': 0.169, 'compound': 0.6124}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.801, 'pos': 0.199, 'compound': 0.7717}, {'neg': 0.116, 'neu': 0.846, 'pos': 0.038, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.939, 'pos': 0.061, 'compound': 0.0772}, {'neg': 0.074, 'neu': 0.926, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.108, 'neu': 0.706, 'pos': 0.186, 'compound': 0.5423}, {'neg': 0.111, 'neu': 0.786, 'pos': 0.104, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.92, 'pos': 0.08, 'compound': 0.4404}, {'neg': 0.227, 'neu': 0.773, 'pos': 0.0, 'compound': -0.8126}, {'neg': 0.256, 'neu': 0.65, 'pos': 0.093, 'compound': -0.6124}, {'neg': 0.0, 'neu': 0.726, 'pos': 0.274, 'compound': 0.8074}, {'neg': 0.149, 'neu': 0.851, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.104, 'neu': 0.535, 'pos': 0.361, 'compound': 0.8442}, {'neg': 0.224, 'neu': 0.667, 'pos': 0.109, 'compound': -0.7351}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.149, 'neu': 0.718, 'pos': 0.133, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.776, 'pos': 0.224, 'compound': 0.9081}, {'neg': 0.159, 'neu': 0.742, 'pos': 0.099, 'compound': -0.1779}, {'neg': 0.09, 'neu': 0.679, 'pos': 0.231, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.962, 'pos': 0.038, 'compound': 0.0258}, {'neg': 0.141, 'neu': 0.812, 'pos': 0.048, 'compound': -0.3641}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.067, 'neu': 0.711, 'pos': 0.221, 'compound': 0.5994}, {'neg': 0.185, 'neu': 0.815, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.078, 'neu': 0.754, 'pos': 0.168, 'compound': 0.4767}, {'neg': 0.051, 'neu': 0.86, 'pos': 0.088, 'compound': 0.1531}, {'neg': 0.183, 'neu': 0.69, 'pos': 0.127, 'compound': -0.5574}, {'neg': 0.048, 'neu': 0.741, 'pos': 0.211, 'compound': 0.6908}, {'neg': 0.108, 'neu': 0.64, 'pos': 0.252, 'compound': 0.5574}, {'neg': 0.358, 'neu': 0.472, 'pos': 0.17, 'compound': -0.7184}, {'neg': 0.0, 'neu': 0.92, 'pos': 0.08, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.616, 'pos': 0.384, 'compound': 0.9493}, {'neg': 0.27, 'neu': 0.643, 'pos': 0.087, 'compound': -0.6908}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.143, 'neu': 0.543, 'pos': 0.314, 'compound': 0.7003}, {'neg': 0.105, 'neu': 0.73, 'pos': 0.165, 'compound': 0.4215}, {'neg': 0.055, 'neu': 0.74, 'pos': 0.206, 'compound': 0.6908}, {'neg': 0.068, 'neu': 0.683, 'pos': 0.248, 'compound': 0.6124}, {'neg': 0.151, 'neu': 0.699, 'pos': 0.151, 'compound': 0.0}, {'neg': 0.049, 'neu': 0.951, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.299, 'neu': 0.635, 'pos': 0.066, 'compound': -0.8519}, {'neg': 0.165, 'neu': 0.659, 'pos': 0.176, 'compound': 0.1779}, {'neg': 0.065, 'neu': 0.772, 'pos': 0.163, 'compound': 0.4215}, {'neg': 0.089, 'neu': 0.629, 'pos': 0.281, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.795, 'pos': 0.205, 'compound': 0.6597}, {'neg': 0.244, 'neu': 0.564, 'pos': 0.192, 'compound': -0.4588}, {'neg': 0.148, 'neu': 0.852, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.059, 'neu': 0.834, 'pos': 0.107, 'compound': 0.2856}, {'neg': 0.0, 'neu': 0.79, 'pos': 0.21, 'compound': 0.7717}, {'neg': 0.055, 'neu': 0.885, 'pos': 0.06, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.717, 'pos': 0.283, 'compound': 0.743}, {'neg': 0.124, 'neu': 0.667, 'pos': 0.209, 'compound': 0.5574}, {'neg': 0.088, 'neu': 0.73, 'pos': 0.181, 'compound': 0.6369}, {'neg': 0.12, 'neu': 0.51, 'pos': 0.37, 'compound': 0.9062}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.105, 'neu': 0.614, 'pos': 0.282, 'compound': 0.5994}, {'neg': 0.194, 'neu': 0.659, 'pos': 0.147, 'compound': -0.4019}, {'neg': 0.476, 'neu': 0.524, 'pos': 0.0, 'compound': -0.8957}, {'neg': 0.064, 'neu': 0.844, 'pos': 0.092, 'compound': 0.128}, {'neg': 0.15, 'neu': 0.577, 'pos': 0.273, 'compound': 0.6369}, {'neg': 0.204, 'neu': 0.593, 'pos': 0.204, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.4215}, {'neg': 0.112, 'neu': 0.888, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.7096}, {'neg': 0.0, 'neu': 0.895, 'pos': 0.105, 'compound': 0.4019}, {'neg': 0.257, 'neu': 0.743, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.0, 'neu': 0.745, 'pos': 0.255, 'compound': 0.7579}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.881, 'pos': 0.119, 'compound': 0.4215}, {'neg': 0.1, 'neu': 0.704, 'pos': 0.196, 'compound': 0.3818}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.664, 'pos': 0.336, 'compound': 0.7269}, {'neg': 0.067, 'neu': 0.674, 'pos': 0.259, 'compound': 0.8885}, {'neg': 0.078, 'neu': 0.821, 'pos': 0.101, 'compound': 0.1531}, {'neg': 0.164, 'neu': 0.689, 'pos': 0.148, 'compound': -0.128}, {'neg': 0.0, 'neu': 0.625, 'pos': 0.375, 'compound': 0.9118}, {'neg': 0.169, 'neu': 0.554, 'pos': 0.277, 'compound': 0.4767}, {'neg': 0.243, 'neu': 0.681, 'pos': 0.077, 'compound': -0.5994}, {'neg': 0.155, 'neu': 0.541, 'pos': 0.305, 'compound': 0.7269}, {'neg': 0.115, 'neu': 0.885, 'pos': 0.0, 'compound': -0.6915}, {'neg': 0.098, 'neu': 0.773, 'pos': 0.129, 'compound': 0.1531}, {'neg': 0.11, 'neu': 0.74, 'pos': 0.15, 'compound': 0.2732}, {'neg': 0.104, 'neu': 0.858, 'pos': 0.038, 'compound': -0.4939}, {'neg': 0.347, 'neu': 0.653, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.726, 'pos': 0.274, 'compound': 0.7003}, {'neg': 0.349, 'neu': 0.524, 'pos': 0.127, 'compound': -0.8807}, {'neg': 0.238, 'neu': 0.693, 'pos': 0.069, 'compound': -0.7269}, {'neg': 0.07, 'neu': 0.855, 'pos': 0.075, 'compound': 0.0516}, {'neg': 0.123, 'neu': 0.702, 'pos': 0.175, 'compound': 0.128}, {'neg': 0.0, 'neu': 0.949, 'pos': 0.051, 'compound': 0.0772}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.049, 'neu': 0.592, 'pos': 0.359, 'compound': 0.836}, {'neg': 0.494, 'neu': 0.506, 'pos': 0.0, 'compound': -0.9698}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.118, 'neu': 0.747, 'pos': 0.136, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.71, 'pos': 0.29, 'compound': 0.9201}, {'neg': 0.064, 'neu': 0.718, 'pos': 0.217, 'compound': 0.6486}, {'neg': 0.127, 'neu': 0.697, 'pos': 0.176, 'compound': 0.3818}, {'neg': 0.173, 'neu': 0.716, 'pos': 0.11, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.539, 'pos': 0.461, 'compound': 0.9442}, {'neg': 0.0, 'neu': 0.902, 'pos': 0.098, 'compound': 0.3612}, {'neg': 0.164, 'neu': 0.706, 'pos': 0.13, 'compound': -0.4215}, {'neg': 0.307, 'neu': 0.693, 'pos': 0.0, 'compound': -0.9081}, {'neg': 0.0, 'neu': 0.647, 'pos': 0.353, 'compound': 0.9001}, {'neg': 0.0, 'neu': 0.875, 'pos': 0.125, 'compound': 0.7506}, {'neg': 0.0, 'neu': 0.891, 'pos': 0.109, 'compound': 0.4215}, {'neg': 0.223, 'neu': 0.777, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.262, 'neu': 0.52, 'pos': 0.218, 'compound': -0.4276}, {'neg': 0.158, 'neu': 0.842, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.166, 'neu': 0.541, 'pos': 0.293, 'compound': 0.6486}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.896, 'pos': 0.104, 'compound': 0.4404}, {'neg': 0.12, 'neu': 0.643, 'pos': 0.237, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.858, 'pos': 0.142, 'compound': 0.5106}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.159, 'neu': 0.841, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.6597}, {'neg': 0.111, 'neu': 0.787, 'pos': 0.102, 'compound': -0.3612}, {'neg': 0.113, 'neu': 0.887, 'pos': 0.0, 'compound': -0.4215}, {'neg': 0.166, 'neu': 0.67, 'pos': 0.164, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.952, 'pos': 0.048, 'compound': 0.1531}, {'neg': 0.308, 'neu': 0.575, 'pos': 0.117, 'compound': -0.8834}, {'neg': 0.109, 'neu': 0.81, 'pos': 0.081, 'compound': -0.1585}, {'neg': 0.028, 'neu': 0.685, 'pos': 0.287, 'compound': 0.9423}, {'neg': 0.151, 'neu': 0.849, 'pos': 0.0, 'compound': -0.5859}, {'neg': 0.0, 'neu': 0.848, 'pos': 0.152, 'compound': 0.6124}, {'neg': 0.227, 'neu': 0.773, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.045, 'neu': 0.737, 'pos': 0.218, 'compound': 0.8625}, {'neg': 0.054, 'neu': 0.845, 'pos': 0.101, 'compound': 0.3182}, {'neg': 0.187, 'neu': 0.73, 'pos': 0.083, 'compound': -0.5106}, {'neg': 0.19, 'neu': 0.642, 'pos': 0.168, 'compound': -0.1779}, {'neg': 0.212, 'neu': 0.696, 'pos': 0.092, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.3818}, {'neg': 0.086, 'neu': 0.693, 'pos': 0.222, 'compound': 0.5994}, {'neg': 0.188, 'neu': 0.718, 'pos': 0.094, 'compound': -0.5837}, {'neg': 0.0, 'neu': 0.731, 'pos': 0.269, 'compound': 0.7184}, {'neg': 0.37, 'neu': 0.448, 'pos': 0.182, 'compound': -0.7717}, {'neg': 0.0, 'neu': 0.5, 'pos': 0.5, 'compound': 0.9432}, {'neg': 0.181, 'neu': 0.595, 'pos': 0.224, 'compound': 0.2263}, {'neg': 0.093, 'neu': 0.776, 'pos': 0.131, 'compound': 0.2732}, {'neg': 0.069, 'neu': 0.931, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.535, 'pos': 0.465, 'compound': 0.93}, {'neg': 0.0, 'neu': 0.699, 'pos': 0.301, 'compound': 0.8225}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.125, 'neu': 0.828, 'pos': 0.047, 'compound': -0.5423}, {'neg': 0.143, 'neu': 0.695, 'pos': 0.163, 'compound': 0.2732}, {'neg': 0.107, 'neu': 0.627, 'pos': 0.266, 'compound': 0.5106}, {'neg': 0.194, 'neu': 0.708, 'pos': 0.098, 'compound': -0.4325}, {'neg': 0.124, 'neu': 0.769, 'pos': 0.107, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.5106}, {'neg': 0.193, 'neu': 0.75, 'pos': 0.057, 'compound': -0.7184}, {'neg': 0.0, 'neu': 0.856, 'pos': 0.144, 'compound': 0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.121, 'neu': 0.85, 'pos': 0.029, 'compound': -0.6249}, {'neg': 0.244, 'neu': 0.756, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.185, 'neu': 0.528, 'pos': 0.287, 'compound': 0.5423}, {'neg': 0.276, 'neu': 0.397, 'pos': 0.327, 'compound': 0.3182}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.18, 'neu': 0.644, 'pos': 0.176, 'compound': -0.0258}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.254, 'neu': 0.47, 'pos': 0.276, 'compound': -0.0}, {'neg': 0.081, 'neu': 0.808, 'pos': 0.111, 'compound': 0.0258}, {'neg': 0.077, 'neu': 0.769, 'pos': 0.154, 'compound': 0.296}, {'neg': 0.246, 'neu': 0.754, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.8934}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.103, 'neu': 0.721, 'pos': 0.176, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.535, 'pos': 0.465, 'compound': 0.9313}, {'neg': 0.09, 'neu': 0.867, 'pos': 0.043, 'compound': -0.34}, {'neg': 0.219, 'neu': 0.69, 'pos': 0.091, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.944, 'pos': 0.056, 'compound': 0.0772}, {'neg': 0.075, 'neu': 0.608, 'pos': 0.318, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.905, 'pos': 0.095, 'compound': 0.296}, {'neg': 0.202, 'neu': 0.72, 'pos': 0.078, 'compound': -0.6486}, {'neg': 0.227, 'neu': 0.64, 'pos': 0.133, 'compound': -0.5423}, {'neg': 0.122, 'neu': 0.691, 'pos': 0.188, 'compound': 0.25}, {'neg': 0.042, 'neu': 0.904, 'pos': 0.054, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.569, 'pos': 0.431, 'compound': 0.8442}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.853, 'pos': 0.147, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.696, 'pos': 0.304, 'compound': 0.8519}, {'neg': 0.069, 'neu': 0.762, 'pos': 0.169, 'compound': 0.4939}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.97, 'pos': 0.03, 'compound': 0.0258}, {'neg': 0.235, 'neu': 0.569, 'pos': 0.196, 'compound': -0.5423}, {'neg': 0.083, 'neu': 0.833, 'pos': 0.083, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.903, 'pos': 0.097, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.617, 'pos': 0.383, 'compound': 0.9468}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.3612}, {'neg': 0.073, 'neu': 0.734, 'pos': 0.192, 'compound': 0.5267}, {'neg': 0.353, 'neu': 0.647, 'pos': 0.0, 'compound': -0.936}, {'neg': 0.199, 'neu': 0.712, 'pos': 0.09, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.868, 'pos': 0.132, 'compound': 0.4939}, {'neg': 0.248, 'neu': 0.568, 'pos': 0.183, 'compound': -0.3612}, {'neg': 0.031, 'neu': 0.474, 'pos': 0.495, 'compound': 0.9559}, {'neg': 0.057, 'neu': 0.721, 'pos': 0.222, 'compound': 0.6705}, {'neg': 0.29, 'neu': 0.71, 'pos': 0.0, 'compound': -0.8625}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.081, 'neu': 0.919, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.713, 'pos': 0.287, 'compound': 0.8979}, {'neg': 0.142, 'neu': 0.735, 'pos': 0.123, 'compound': -0.2023}, {'neg': 0.168, 'neu': 0.647, 'pos': 0.185, 'compound': -0.0772}, {'neg': 0.1, 'neu': 0.646, 'pos': 0.254, 'compound': 0.6437}, {'neg': 0.0, 'neu': 0.688, 'pos': 0.312, 'compound': 0.8225}, {'neg': 0.249, 'neu': 0.468, 'pos': 0.283, 'compound': 0.2023}, {'neg': 0.056, 'neu': 0.848, 'pos': 0.096, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.808, 'pos': 0.192, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.669, 'pos': 0.331, 'compound': 0.946}, {'neg': 0.085, 'neu': 0.662, 'pos': 0.252, 'compound': 0.6486}, {'neg': 0.245, 'neu': 0.63, 'pos': 0.126, 'compound': -0.7096}, {'neg': 0.09, 'neu': 0.769, 'pos': 0.141, 'compound': 0.2023}, {'neg': 0.33, 'neu': 0.615, 'pos': 0.055, 'compound': -0.8885}, {'neg': 0.132, 'neu': 0.868, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.084, 'neu': 0.845, 'pos': 0.071, 'compound': -0.1749}, {'neg': 0.0, 'neu': 0.848, 'pos': 0.152, 'compound': 0.6369}, {'neg': 0.354, 'neu': 0.646, 'pos': 0.0, 'compound': -0.8519}, {'neg': 0.244, 'neu': 0.756, 'pos': 0.0, 'compound': -0.6705}, {'neg': 0.0, 'neu': 0.879, 'pos': 0.121, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.691, 'pos': 0.309, 'compound': 0.8834}, {'neg': 0.088, 'neu': 0.912, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.15, 'neu': 0.798, 'pos': 0.051, 'compound': -0.6533}, {'neg': 0.277, 'neu': 0.606, 'pos': 0.117, 'compound': -0.5719}, {'neg': 0.285, 'neu': 0.566, 'pos': 0.149, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.8689}, {'neg': 0.235, 'neu': 0.486, 'pos': 0.279, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.893, 'pos': 0.107, 'compound': 0.34}, {'neg': 0.334, 'neu': 0.625, 'pos': 0.041, 'compound': -0.9274}, {'neg': 0.137, 'neu': 0.814, 'pos': 0.049, 'compound': -0.5994}, {'neg': 0.28, 'neu': 0.549, 'pos': 0.171, 'compound': -0.7506}, {'neg': 0.186, 'neu': 0.814, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.247, 'neu': 0.623, 'pos': 0.13, 'compound': -0.765}, {'neg': 0.084, 'neu': 0.441, 'pos': 0.476, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.672, 'pos': 0.328, 'compound': 0.743}, {'neg': 0.097, 'neu': 0.538, 'pos': 0.364, 'compound': 0.8555}, {'neg': 0.26, 'neu': 0.74, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.184, 'neu': 0.648, 'pos': 0.167, 'compound': -0.128}, {'neg': 0.181, 'neu': 0.767, 'pos': 0.052, 'compound': -0.6908}, {'neg': 0.278, 'neu': 0.722, 'pos': 0.0, 'compound': -0.886}, {'neg': 0.085, 'neu': 0.503, 'pos': 0.412, 'compound': 0.8555}, {'neg': 0.24, 'neu': 0.56, 'pos': 0.2, 'compound': -0.25}, {'neg': 0.189, 'neu': 0.811, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.201, 'neu': 0.757, 'pos': 0.043, 'compound': -0.7003}, {'neg': 0.071, 'neu': 0.709, 'pos': 0.22, 'compound': 0.7269}, {'neg': 0.079, 'neu': 0.622, 'pos': 0.299, 'compound': 0.6486}, {'neg': 0.156, 'neu': 0.753, 'pos': 0.091, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.66, 'pos': 0.34, 'compound': 0.8689}, {'neg': 0.081, 'neu': 0.761, 'pos': 0.157, 'compound': 0.6481}, {'neg': 0.0, 'neu': 0.672, 'pos': 0.328, 'compound': 0.8316}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.239, 'neu': 0.708, 'pos': 0.053, 'compound': -0.743}, {'neg': 0.0, 'neu': 0.902, 'pos': 0.098, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.503, 'pos': 0.497, 'compound': 0.9709}, {'neg': 0.207, 'neu': 0.658, 'pos': 0.135, 'compound': -0.296}, {'neg': 0.14, 'neu': 0.484, 'pos': 0.376, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.731, 'pos': 0.269, 'compound': 0.7184}, {'neg': 0.132, 'neu': 0.868, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.113, 'neu': 0.798, 'pos': 0.088, 'compound': -0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.114, 'neu': 0.763, 'pos': 0.123, 'compound': 0.0516}, {'neg': 0.178, 'neu': 0.687, 'pos': 0.135, 'compound': -0.4019}, {'neg': 0.076, 'neu': 0.924, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.097, 'neu': 0.475, 'pos': 0.428, 'compound': 0.9313}, {'neg': 0.112, 'neu': 0.621, 'pos': 0.268, 'compound': 0.8316}, {'neg': 0.119, 'neu': 0.661, 'pos': 0.22, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.924, 'pos': 0.076, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.793, 'pos': 0.207, 'compound': 0.743}, {'neg': 0.11, 'neu': 0.816, 'pos': 0.073, 'compound': -0.2263}, {'neg': 0.099, 'neu': 0.625, 'pos': 0.276, 'compound': 0.5859}, {'neg': 0.046, 'neu': 0.609, 'pos': 0.345, 'compound': 0.8834}, {'neg': 0.0, 'neu': 0.774, 'pos': 0.226, 'compound': 0.9001}, {'neg': 0.144, 'neu': 0.676, 'pos': 0.18, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.905, 'pos': 0.095, 'compound': 0.2263}, {'neg': 0.288, 'neu': 0.712, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.0, 'neu': 0.963, 'pos': 0.037, 'compound': 0.0258}, {'neg': 0.165, 'neu': 0.575, 'pos': 0.26, 'compound': 0.6808}, {'neg': 0.385, 'neu': 0.615, 'pos': 0.0, 'compound': -0.875}, {'neg': 0.337, 'neu': 0.663, 'pos': 0.0, 'compound': -0.8807}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.851, 'pos': 0.149, 'compound': 0.6369}, {'neg': 0.06, 'neu': 0.882, 'pos': 0.058, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.552, 'pos': 0.448, 'compound': 0.9678}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.5859}, {'neg': 0.215, 'neu': 0.63, 'pos': 0.156, 'compound': -0.1531}, {'neg': 0.169, 'neu': 0.831, 'pos': 0.0, 'compound': -0.6249}, {'neg': 0.0, 'neu': 0.749, 'pos': 0.251, 'compound': 0.8271}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.6249}, {'neg': 0.132, 'neu': 0.868, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.193, 'neu': 0.594, 'pos': 0.213, 'compound': -0.1531}, {'neg': 0.168, 'neu': 0.748, 'pos': 0.084, 'compound': -0.4019}, {'neg': 0.141, 'neu': 0.859, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.617, 'pos': 0.383, 'compound': 0.9081}, {'neg': 0.124, 'neu': 0.76, 'pos': 0.116, 'compound': -0.0516}, {'neg': 0.076, 'neu': 0.724, 'pos': 0.199, 'compound': 0.5252}, {'neg': 0.103, 'neu': 0.897, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.905, 'pos': 0.095, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.607, 'pos': 0.393, 'compound': 0.9756}, {'neg': 0.099, 'neu': 0.652, 'pos': 0.249, 'compound': 0.802}, {'neg': 0.222, 'neu': 0.613, 'pos': 0.165, 'compound': -0.3612}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.099, 'neu': 0.662, 'pos': 0.239, 'compound': 0.4215}, {'neg': 0.098, 'neu': 0.691, 'pos': 0.211, 'compound': 0.4203}, {'neg': 0.176, 'neu': 0.824, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.107, 'neu': 0.794, 'pos': 0.099, 'compound': -0.0772}, {'neg': 0.152, 'neu': 0.789, 'pos': 0.059, 'compound': -0.5106}, {'neg': 0.156, 'neu': 0.699, 'pos': 0.145, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.754, 'pos': 0.246, 'compound': 0.8442}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.135, 'neu': 0.706, 'pos': 0.159, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.746, 'pos': 0.254, 'compound': 0.6249}, {'neg': 0.126, 'neu': 0.696, 'pos': 0.178, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.3818}, {'neg': 0.257, 'neu': 0.743, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.4767}, {'neg': 0.09, 'neu': 0.681, 'pos': 0.228, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.4939}, {'neg': 0.058, 'neu': 0.737, 'pos': 0.204, 'compound': 0.6931}, {'neg': 0.127, 'neu': 0.873, 'pos': 0.0, 'compound': -0.7717}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.72, 'pos': 0.28, 'compound': 0.8658}, {'neg': 0.127, 'neu': 0.873, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.068, 'neu': 0.932, 'pos': 0.0, 'compound': -0.25}, {'neg': 0.075, 'neu': 0.925, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.241, 'neu': 0.702, 'pos': 0.057, 'compound': -0.6369}, {'neg': 0.0, 'neu': 0.936, 'pos': 0.064, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.9, 'pos': 0.1, 'compound': 0.2732}, {'neg': 0.092, 'neu': 0.838, 'pos': 0.071, 'compound': -0.2023}, {'neg': 0.056, 'neu': 0.89, 'pos': 0.054, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.905, 'pos': 0.095, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.637, 'pos': 0.363, 'compound': 0.9643}, {'neg': 0.105, 'neu': 0.787, 'pos': 0.109, 'compound': 0.0258}, {'neg': 0.178, 'neu': 0.771, 'pos': 0.051, 'compound': -0.743}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.214, 'neu': 0.509, 'pos': 0.277, 'compound': 0.3612}, {'neg': 0.232, 'neu': 0.693, 'pos': 0.075, 'compound': -0.6369}, {'neg': 0.093, 'neu': 0.802, 'pos': 0.105, 'compound': 0.0772}, {'neg': 0.061, 'neu': 0.544, 'pos': 0.395, 'compound': 0.9403}, {'neg': 0.0, 'neu': 0.873, 'pos': 0.127, 'compound': 0.4939}, {'neg': 0.106, 'neu': 0.849, 'pos': 0.046, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.866, 'pos': 0.134, 'compound': 0.6249}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.066, 'neu': 0.671, 'pos': 0.264, 'compound': 0.9231}, {'neg': 0.061, 'neu': 0.709, 'pos': 0.23, 'compound': 0.8225}, {'neg': 0.051, 'neu': 0.863, 'pos': 0.086, 'compound': 0.2263}, {'neg': 0.12, 'neu': 0.776, 'pos': 0.104, 'compound': -0.1779}, {'neg': 0.023, 'neu': 0.754, 'pos': 0.223, 'compound': 0.898}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.852, 'pos': 0.148, 'compound': 0.6369}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.268, 'neu': 0.554, 'pos': 0.178, 'compound': -0.5984}, {'neg': 0.0, 'neu': 0.803, 'pos': 0.197, 'compound': 0.6597}, {'neg': 0.083, 'neu': 0.795, 'pos': 0.121, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.84, 'pos': 0.16, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.659, 'pos': 0.341, 'compound': 0.7755}, {'neg': 0.489, 'neu': 0.39, 'pos': 0.121, 'compound': -0.9584}, {'neg': 0.0, 'neu': 0.777, 'pos': 0.223, 'compound': 0.5574}, {'neg': 0.108, 'neu': 0.802, 'pos': 0.09, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.734, 'pos': 0.266, 'compound': 0.8126}, {'neg': 0.097, 'neu': 0.863, 'pos': 0.04, 'compound': -0.3818}, {'neg': 0.0, 'neu': 0.687, 'pos': 0.313, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.3612}, {'neg': 0.052, 'neu': 0.732, 'pos': 0.216, 'compound': 0.836}, {'neg': 0.109, 'neu': 0.596, 'pos': 0.294, 'compound': 0.8074}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.779, 'pos': 0.221, 'compound': 0.8442}, {'neg': 0.0, 'neu': 0.859, 'pos': 0.141, 'compound': 0.242}, {'neg': 0.095, 'neu': 0.872, 'pos': 0.033, 'compound': -0.34}, {'neg': 0.152, 'neu': 0.762, 'pos': 0.086, 'compound': -0.4588}, {'neg': 0.058, 'neu': 0.624, 'pos': 0.318, 'compound': 0.9022}, {'neg': 0.059, 'neu': 0.941, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.106, 'neu': 0.577, 'pos': 0.317, 'compound': 0.8934}, {'neg': 0.171, 'neu': 0.748, 'pos': 0.081, 'compound': -0.6369}, {'neg': 0.043, 'neu': 0.761, 'pos': 0.196, 'compound': 0.6369}, {'neg': 0.074, 'neu': 0.828, 'pos': 0.098, 'compound': 0.2023}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.039, 'neu': 0.788, 'pos': 0.173, 'compound': 0.7964}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.039, 'neu': 0.789, 'pos': 0.171, 'compound': 0.7906}, {'neg': 0.0, 'neu': 0.638, 'pos': 0.362, 'compound': 0.91}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.8074}, {'neg': 0.0, 'neu': 0.899, 'pos': 0.101, 'compound': 0.4019}, {'neg': 0.079, 'neu': 0.807, 'pos': 0.115, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.776, 'pos': 0.224, 'compound': 0.9136}, {'neg': 0.218, 'neu': 0.718, 'pos': 0.064, 'compound': -0.7193}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.175, 'neu': 0.698, 'pos': 0.127, 'compound': -0.5719}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.261, 'neu': 0.494, 'pos': 0.245, 'compound': -0.4393}, {'neg': 0.0, 'neu': 0.754, 'pos': 0.246, 'compound': 0.8934}, {'neg': 0.178, 'neu': 0.768, 'pos': 0.055, 'compound': -0.6808}, {'neg': 0.072, 'neu': 0.851, 'pos': 0.077, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.677, 'pos': 0.323, 'compound': 0.9153}, {'neg': 0.0, 'neu': 0.8, 'pos': 0.2, 'compound': 0.8402}, {'neg': 0.214, 'neu': 0.66, 'pos': 0.127, 'compound': -0.7096}, {'neg': 0.179, 'neu': 0.751, 'pos': 0.069, 'compound': -0.5859}, {'neg': 0.067, 'neu': 0.634, 'pos': 0.3, 'compound': 0.9274}, {'neg': 0.056, 'neu': 0.72, 'pos': 0.224, 'compound': 0.802}, {'neg': 0.0, 'neu': 0.839, 'pos': 0.161, 'compound': 0.5267}, {'neg': 0.157, 'neu': 0.692, 'pos': 0.151, 'compound': -0.0772}, {'neg': 0.158, 'neu': 0.725, 'pos': 0.118, 'compound': -0.4939}, {'neg': 0.068, 'neu': 0.9, 'pos': 0.033, 'compound': -0.34}, {'neg': 0.084, 'neu': 0.528, 'pos': 0.388, 'compound': 0.8689}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.035, 'neu': 0.859, 'pos': 0.106, 'compound': 0.5859}, {'neg': 0.176, 'neu': 0.461, 'pos': 0.363, 'compound': 0.7096}, {'neg': 0.295, 'neu': 0.608, 'pos': 0.097, 'compound': -0.7579}, {'neg': 0.111, 'neu': 0.627, 'pos': 0.262, 'compound': 0.7506}, {'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.622, 'pos': 0.378, 'compound': 0.8442}, {'neg': 0.182, 'neu': 0.709, 'pos': 0.108, 'compound': -0.296}, {'neg': 0.297, 'neu': 0.464, 'pos': 0.239, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.4404}, {'neg': 0.21, 'neu': 0.667, 'pos': 0.124, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.4939}, {'neg': 0.166, 'neu': 0.618, 'pos': 0.216, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.949, 'pos': 0.051, 'compound': 0.3182}, {'neg': 0.117, 'neu': 0.478, 'pos': 0.404, 'compound': 0.765}, {'neg': 0.391, 'neu': 0.51, 'pos': 0.1, 'compound': -0.9287}, {'neg': 0.07, 'neu': 0.696, 'pos': 0.235, 'compound': 0.5859}, {'neg': 0.083, 'neu': 0.825, 'pos': 0.092, 'compound': 0.1027}, {'neg': 0.183, 'neu': 0.637, 'pos': 0.18, 'compound': -0.2732}, {'neg': 0.177, 'neu': 0.525, 'pos': 0.298, 'compound': 0.1779}, {'neg': 0.198, 'neu': 0.391, 'pos': 0.411, 'compound': 0.8271}, {'neg': 0.273, 'neu': 0.596, 'pos': 0.132, 'compound': -0.5423}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.372, 'neu': 0.628, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.19, 'neu': 0.709, 'pos': 0.101, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.794, 'pos': 0.206, 'compound': 0.5267}, {'neg': 0.206, 'neu': 0.71, 'pos': 0.084, 'compound': -0.5859}, {'neg': 0.0, 'neu': 0.798, 'pos': 0.202, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.664, 'pos': 0.336, 'compound': 0.7269}, {'neg': 0.076, 'neu': 0.847, 'pos': 0.076, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.671, 'pos': 0.329, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.918, 'pos': 0.082, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.664, 'pos': 0.336, 'compound': 0.9493}, {'neg': 0.233, 'neu': 0.645, 'pos': 0.122, 'compound': -0.7717}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.5719}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.038, 'neu': 0.878, 'pos': 0.085, 'compound': 0.3612}, {'neg': 0.075, 'neu': 0.778, 'pos': 0.147, 'compound': 0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.744, 'pos': 0.256, 'compound': 0.8519}, {'neg': 0.166, 'neu': 0.56, 'pos': 0.274, 'compound': 0.7096}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.4404}, {'neg': 0.098, 'neu': 0.676, 'pos': 0.226, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.694, 'pos': 0.306, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.929, 'pos': 0.071, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.2263}, {'neg': 0.271, 'neu': 0.541, 'pos': 0.188, 'compound': -0.4404}, {'neg': 0.178, 'neu': 0.618, 'pos': 0.205, 'compound': 0.1779}, {'neg': 0.326, 'neu': 0.506, 'pos': 0.168, 'compound': -0.865}, {'neg': 0.3, 'neu': 0.614, 'pos': 0.085, 'compound': -0.743}, {'neg': 0.096, 'neu': 0.695, 'pos': 0.209, 'compound': 0.4717}, {'neg': 0.0, 'neu': 0.656, 'pos': 0.344, 'compound': 0.7506}, {'neg': 0.038, 'neu': 0.563, 'pos': 0.399, 'compound': 0.9709}, {'neg': 0.104, 'neu': 0.896, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.105, 'neu': 0.837, 'pos': 0.058, 'compound': -0.25}, {'neg': 0.198, 'neu': 0.521, 'pos': 0.281, 'compound': 0.4939}, {'neg': 0.192, 'neu': 0.712, 'pos': 0.096, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.944, 'pos': 0.056, 'compound': 0.2263}, {'neg': 0.31, 'neu': 0.498, 'pos': 0.192, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.4404}, {'neg': 0.221, 'neu': 0.63, 'pos': 0.149, 'compound': -0.4222}, {'neg': 0.132, 'neu': 0.756, 'pos': 0.112, 'compound': -0.2263}, {'neg': 0.218, 'neu': 0.677, 'pos': 0.105, 'compound': -0.4939}, {'neg': 0.269, 'neu': 0.657, 'pos': 0.075, 'compound': -0.7579}, {'neg': 0.05, 'neu': 0.773, 'pos': 0.177, 'compound': 0.7096}, {'neg': 0.122, 'neu': 0.63, 'pos': 0.248, 'compound': 0.296}, {'neg': 0.532, 'neu': 0.468, 'pos': 0.0, 'compound': -0.8885}, {'neg': 0.153, 'neu': 0.725, 'pos': 0.122, 'compound': -0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.169, 'neu': 0.728, 'pos': 0.103, 'compound': -0.4404}, {'neg': 0.185, 'neu': 0.671, 'pos': 0.144, 'compound': -0.4767}, {'neg': 0.259, 'neu': 0.654, 'pos': 0.087, 'compound': -0.743}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.081, 'neu': 0.809, 'pos': 0.11, 'compound': 0.2023}, {'neg': 0.054, 'neu': 0.78, 'pos': 0.166, 'compound': 0.6808}, {'neg': 0.173, 'neu': 0.693, 'pos': 0.134, 'compound': -0.3818}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.5859}, {'neg': 0.09, 'neu': 0.796, 'pos': 0.114, 'compound': 0.1779}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.6808}, {'neg': 0.119, 'neu': 0.712, 'pos': 0.169, 'compound': 0.128}, {'neg': 0.057, 'neu': 0.746, 'pos': 0.197, 'compound': 0.6908}, {'neg': 0.08, 'neu': 0.802, 'pos': 0.118, 'compound': 0.2023}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.4019}, {'neg': 0.105, 'neu': 0.84, 'pos': 0.055, 'compound': -0.296}, {'neg': 0.187, 'neu': 0.705, 'pos': 0.108, 'compound': -0.5574}, {'neg': 0.0, 'neu': 0.808, 'pos': 0.192, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.893, 'pos': 0.107, 'compound': 0.34}, {'neg': 0.129, 'neu': 0.682, 'pos': 0.189, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.843, 'pos': 0.157, 'compound': 0.6249}, {'neg': 0.212, 'neu': 0.745, 'pos': 0.043, 'compound': -0.6486}, {'neg': 0.247, 'neu': 0.519, 'pos': 0.234, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.61, 'pos': 0.39, 'compound': 0.7506}, {'neg': 0.179, 'neu': 0.623, 'pos': 0.198, 'compound': 0.128}, {'neg': 0.328, 'neu': 0.547, 'pos': 0.124, 'compound': -0.765}, {'neg': 0.241, 'neu': 0.598, 'pos': 0.16, 'compound': -0.4939}, {'neg': 0.203, 'neu': 0.677, 'pos': 0.12, 'compound': -0.296}, {'neg': 0.041, 'neu': 0.729, 'pos': 0.23, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'compound': 0.7717}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.368, 'neu': 0.632, 'pos': 0.0, 'compound': -0.9403}, {'neg': 0.097, 'neu': 0.736, 'pos': 0.167, 'compound': 0.2263}, {'neg': 0.077, 'neu': 0.811, 'pos': 0.112, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.632, 'pos': 0.368, 'compound': 0.7906}, {'neg': 0.0, 'neu': 0.772, 'pos': 0.228, 'compound': 0.5859}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.368, 'neu': 0.418, 'pos': 0.214, 'compound': -0.8807}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.819, 'pos': 0.181, 'compound': 0.6369}, {'neg': 0.331, 'neu': 0.644, 'pos': 0.024, 'compound': -0.9301}, {'neg': 0.0, 'neu': 0.792, 'pos': 0.208, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.5267}, {'neg': 0.125, 'neu': 0.798, 'pos': 0.077, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.888, 'pos': 0.112, 'compound': 0.34}, {'neg': 0.24, 'neu': 0.76, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.069, 'neu': 0.931, 'pos': 0.0, 'compound': -0.1779}, {'neg': 0.09, 'neu': 0.7, 'pos': 0.21, 'compound': 0.5574}, {'neg': 0.146, 'neu': 0.854, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.098, 'neu': 0.728, 'pos': 0.174, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.6597}, {'neg': 0.106, 'neu': 0.769, 'pos': 0.125, 'compound': 0.1027}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.167, 'neu': 0.833, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.0, 'neu': 0.742, 'pos': 0.258, 'compound': 0.8885}, {'neg': 0.11, 'neu': 0.617, 'pos': 0.273, 'compound': 0.4019}, {'neg': 0.066, 'neu': 0.883, 'pos': 0.051, 'compound': -0.2023}, {'neg': 0.276, 'neu': 0.332, 'pos': 0.393, 'compound': 0.5574}, {'neg': 0.241, 'neu': 0.661, 'pos': 0.097, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.2023}, {'neg': 0.042, 'neu': 0.824, 'pos': 0.134, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.4939}, {'neg': 0.123, 'neu': 0.774, 'pos': 0.103, 'compound': -0.1531}, {'neg': 0.092, 'neu': 0.599, 'pos': 0.309, 'compound': 0.6908}, {'neg': 0.111, 'neu': 0.784, 'pos': 0.105, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.7845}, {'neg': 0.131, 'neu': 0.681, 'pos': 0.188, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.734, 'pos': 0.266, 'compound': 0.8316}, {'neg': 0.06, 'neu': 0.676, 'pos': 0.263, 'compound': 0.8126}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.1, 'neu': 0.534, 'pos': 0.367, 'compound': 0.875}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.3612}, {'neg': 0.086, 'neu': 0.414, 'pos': 0.5, 'compound': 0.9325}, {'neg': 0.095, 'neu': 0.823, 'pos': 0.082, 'compound': -0.1027}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.192, 'neu': 0.629, 'pos': 0.179, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.619, 'pos': 0.381, 'compound': 0.9451}, {'neg': 0.123, 'neu': 0.686, 'pos': 0.191, 'compound': 0.4404}, {'neg': 0.139, 'neu': 0.671, 'pos': 0.189, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.92, 'pos': 0.08, 'compound': 0.2732}, {'neg': 0.067, 'neu': 0.885, 'pos': 0.048, 'compound': -0.25}, {'neg': 0.132, 'neu': 0.674, 'pos': 0.194, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.849, 'pos': 0.151, 'compound': 0.4939}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.1, 'neu': 0.9, 'pos': 0.0, 'compound': -0.2732}, {'neg': 0.113, 'neu': 0.887, 'pos': 0.0, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.918, 'pos': 0.082, 'compound': 0.4939}, {'neg': 0.173, 'neu': 0.714, 'pos': 0.113, 'compound': -0.1531}, {'neg': 0.056, 'neu': 0.912, 'pos': 0.032, 'compound': -0.2911}, {'neg': 0.064, 'neu': 0.841, 'pos': 0.095, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.709, 'pos': 0.291, 'compound': 0.8126}, {'neg': 0.118, 'neu': 0.743, 'pos': 0.139, 'compound': 0.0258}, {'neg': 0.236, 'neu': 0.661, 'pos': 0.103, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.944, 'pos': 0.056, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.84, 'pos': 0.16, 'compound': 0.2732}, {'neg': 0.104, 'neu': 0.731, 'pos': 0.165, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.779, 'pos': 0.221, 'compound': 0.8316}, {'neg': 0.0, 'neu': 0.723, 'pos': 0.277, 'compound': 0.8625}, {'neg': 0.0, 'neu': 0.891, 'pos': 0.109, 'compound': 0.4019}, {'neg': 0.259, 'neu': 0.741, 'pos': 0.0, 'compound': -0.7717}, {'neg': 0.213, 'neu': 0.736, 'pos': 0.051, 'compound': -0.7639}, {'neg': 0.0, 'neu': 0.791, 'pos': 0.209, 'compound': 0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.077, 'neu': 0.716, 'pos': 0.206, 'compound': 0.5423}, {'neg': 0.061, 'neu': 0.727, 'pos': 0.212, 'compound': 0.7184}, {'neg': 0.204, 'neu': 0.735, 'pos': 0.061, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.3612}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.714, 'pos': 0.286, 'compound': 0.8316}, {'neg': 0.241, 'neu': 0.568, 'pos': 0.19, 'compound': -0.4215}, {'neg': 0.081, 'neu': 0.779, 'pos': 0.14, 'compound': 0.3182}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.781, 'pos': 0.219, 'compound': 0.4215}, {'neg': 0.348, 'neu': 0.469, 'pos': 0.184, 'compound': -0.6369}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.3612}, {'neg': 0.146, 'neu': 0.68, 'pos': 0.175, 'compound': 0.2263}, {'neg': 0.103, 'neu': 0.57, 'pos': 0.327, 'compound': 0.7096}, {'neg': 0.131, 'neu': 0.538, 'pos': 0.331, 'compound': 0.6369}, {'neg': 0.06, 'neu': 0.819, 'pos': 0.122, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.752, 'pos': 0.248, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.634, 'pos': 0.366, 'compound': 0.8555}, {'neg': 0.106, 'neu': 0.787, 'pos': 0.106, 'compound': 0.0}, {'neg': 0.13, 'neu': 0.704, 'pos': 0.166, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.813, 'pos': 0.187, 'compound': 0.836}, {'neg': 0.105, 'neu': 0.794, 'pos': 0.101, 'compound': -0.0516}, {'neg': 0.322, 'neu': 0.678, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.131, 'neu': 0.777, 'pos': 0.092, 'compound': -0.2023}, {'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.0516}, {'neg': 0.129, 'neu': 0.811, 'pos': 0.06, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.787, 'pos': 0.213, 'compound': 0.8126}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.4215}, {'neg': 0.078, 'neu': 0.778, 'pos': 0.144, 'compound': 0.4215}, {'neg': 0.082, 'neu': 0.762, 'pos': 0.155, 'compound': 0.1027}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.209, 'neu': 0.674, 'pos': 0.117, 'compound': -0.3818}, {'neg': 0.336, 'neu': 0.553, 'pos': 0.111, 'compound': -0.6486}, {'neg': 0.155, 'neu': 0.728, 'pos': 0.116, 'compound': -0.3903}, {'neg': 0.112, 'neu': 0.888, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.116, 'neu': 0.794, 'pos': 0.09, 'compound': -0.1779}, {'neg': 0.063, 'neu': 0.755, 'pos': 0.182, 'compound': 0.7096}, {'neg': 0.0, 'neu': 0.633, 'pos': 0.367, 'compound': 0.93}, {'neg': 0.084, 'neu': 0.625, 'pos': 0.291, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.751, 'pos': 0.249, 'compound': 0.6486}, {'neg': 0.218, 'neu': 0.669, 'pos': 0.113, 'compound': -0.4588}, {'neg': 0.089, 'neu': 0.461, 'pos': 0.45, 'compound': 0.8885}, {'neg': 0.125, 'neu': 0.693, 'pos': 0.182, 'compound': 0.25}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.163, 'neu': 0.73, 'pos': 0.107, 'compound': -0.0772}, {'neg': 0.256, 'neu': 0.617, 'pos': 0.127, 'compound': -0.6369}, {'neg': 0.252, 'neu': 0.748, 'pos': 0.0, 'compound': -0.91}, {'neg': 0.093, 'neu': 0.688, 'pos': 0.219, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.778, 'pos': 0.222, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.905, 'pos': 0.095, 'compound': 0.2263}, {'neg': 0.073, 'neu': 0.678, 'pos': 0.249, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.5859}, {'neg': 0.187, 'neu': 0.671, 'pos': 0.142, 'compound': -0.296}, {'neg': 0.089, 'neu': 0.805, 'pos': 0.106, 'compound': 0.1002}, {'neg': 0.0, 'neu': 0.943, 'pos': 0.057, 'compound': 0.3612}, {'neg': 0.066, 'neu': 0.832, 'pos': 0.102, 'compound': 0.1779}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.4, 'neu': 0.488, 'pos': 0.112, 'compound': -0.9153}, {'neg': 0.0, 'neu': 0.755, 'pos': 0.245, 'compound': 0.7783}, {'neg': 0.271, 'neu': 0.655, 'pos': 0.074, 'compound': -0.7845}, {'neg': 0.037, 'neu': 0.747, 'pos': 0.216, 'compound': 0.6908}, {'neg': 0.123, 'neu': 0.625, 'pos': 0.252, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.806, 'pos': 0.194, 'compound': 0.6249}, {'neg': 0.224, 'neu': 0.776, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.05, 'neu': 0.706, 'pos': 0.244, 'compound': 0.8225}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.4019}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.895, 'pos': 0.105, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.873, 'pos': 0.127, 'compound': 0.6908}, {'neg': 0.235, 'neu': 0.652, 'pos': 0.113, 'compound': -0.4215}, {'neg': 0.149, 'neu': 0.766, 'pos': 0.085, 'compound': -0.296}, {'neg': 0.223, 'neu': 0.709, 'pos': 0.068, 'compound': -0.7845}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.182, 'neu': 0.655, 'pos': 0.162, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.7003}, {'neg': 0.141, 'neu': 0.746, 'pos': 0.113, 'compound': -0.2406}, {'neg': 0.036, 'neu': 0.696, 'pos': 0.268, 'compound': 0.9287}, {'neg': 0.242, 'neu': 0.758, 'pos': 0.0, 'compound': -0.4257}, {'neg': 0.097, 'neu': 0.853, 'pos': 0.05, 'compound': -0.296}, {'neg': 0.115, 'neu': 0.809, 'pos': 0.077, 'compound': -0.2263}, {'neg': 0.218, 'neu': 0.67, 'pos': 0.112, 'compound': -0.7096}, {'neg': 0.211, 'neu': 0.732, 'pos': 0.058, 'compound': -0.7845}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.238, 'neu': 0.762, 'pos': 0.0, 'compound': -0.6124}, {'neg': 0.279, 'neu': 0.612, 'pos': 0.109, 'compound': -0.6124}, {'neg': 0.136, 'neu': 0.864, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.104, 'neu': 0.779, 'pos': 0.117, 'compound': 0.1531}, {'neg': 0.196, 'neu': 0.583, 'pos': 0.221, 'compound': -0.1027}, {'neg': 0.096, 'neu': 0.78, 'pos': 0.124, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.744, 'pos': 0.256, 'compound': 0.6705}, {'neg': 0.187, 'neu': 0.58, 'pos': 0.232, 'compound': 0.1779}, {'neg': 0.043, 'neu': 0.813, 'pos': 0.144, 'compound': 0.6111}, {'neg': 0.26, 'neu': 0.74, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.143, 'neu': 0.857, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.159, 'neu': 0.767, 'pos': 0.074, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.888, 'pos': 0.112, 'compound': 0.4404}, {'neg': 0.074, 'neu': 0.802, 'pos': 0.124, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.6249}, {'neg': 0.051, 'neu': 0.894, 'pos': 0.055, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.699, 'pos': 0.301, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.607, 'pos': 0.393, 'compound': 0.8271}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.135, 'neu': 0.723, 'pos': 0.142, 'compound': 0.0352}, {'neg': 0.098, 'neu': 0.797, 'pos': 0.106, 'compound': 0.1027}, {'neg': 0.167, 'neu': 0.833, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.4588}, {'neg': 0.181, 'neu': 0.819, 'pos': 0.0, 'compound': -0.6249}, {'neg': 0.121, 'neu': 0.559, 'pos': 0.32, 'compound': 0.8519}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.179, 'neu': 0.821, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.247, 'neu': 0.753, 'pos': 0.0, 'compound': -0.7096}, {'neg': 0.231, 'neu': 0.717, 'pos': 0.052, 'compound': -0.6705}, {'neg': 0.0, 'neu': 0.897, 'pos': 0.103, 'compound': 0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.099, 'neu': 0.735, 'pos': 0.165, 'compound': 0.2023}, {'neg': 0.109, 'neu': 0.752, 'pos': 0.139, 'compound': 0.2023}, {'neg': 0.162, 'neu': 0.67, 'pos': 0.168, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.496, 'pos': 0.504, 'compound': 0.9217}, {'neg': 0.132, 'neu': 0.606, 'pos': 0.262, 'compound': 0.6908}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.139, 'neu': 0.721, 'pos': 0.139, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.8126}, {'neg': 0.058, 'neu': 0.819, 'pos': 0.123, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.635, 'pos': 0.365, 'compound': 0.9628}, {'neg': 0.0, 'neu': 0.901, 'pos': 0.099, 'compound': 0.296}, {'neg': 0.137, 'neu': 0.545, 'pos': 0.318, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.59, 'pos': 0.41, 'compound': 0.9738}, {'neg': 0.0, 'neu': 0.515, 'pos': 0.485, 'compound': 0.9062}, {'neg': 0.239, 'neu': 0.659, 'pos': 0.102, 'compound': -0.6124}, {'neg': 0.192, 'neu': 0.808, 'pos': 0.0, 'compound': -0.5859}, {'neg': 0.028, 'neu': 0.848, 'pos': 0.123, 'compound': 0.6908}, {'neg': 0.078, 'neu': 0.778, 'pos': 0.144, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.936, 'pos': 0.064, 'compound': 0.128}, {'neg': 0.158, 'neu': 0.567, 'pos': 0.275, 'compound': 0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.8779}, {'neg': 0.058, 'neu': 0.827, 'pos': 0.115, 'compound': 0.3818}, {'neg': 0.177, 'neu': 0.623, 'pos': 0.2, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.1695}, {'neg': 0.214, 'neu': 0.786, 'pos': 0.0, 'compound': -0.8689}, {'neg': 0.102, 'neu': 0.789, 'pos': 0.109, 'compound': 0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.138, 'neu': 0.653, 'pos': 0.21, 'compound': 0.4767}, {'neg': 0.044, 'neu': 0.514, 'pos': 0.442, 'compound': 0.9578}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.07, 'neu': 0.93, 'pos': 0.0, 'compound': -0.128}, {'neg': 0.0, 'neu': 0.856, 'pos': 0.144, 'compound': 0.4019}, {'neg': 0.098, 'neu': 0.574, 'pos': 0.328, 'compound': 0.6808}, {'neg': 0.17, 'neu': 0.631, 'pos': 0.199, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.733, 'pos': 0.267, 'compound': 0.7964}, {'neg': 0.126, 'neu': 0.698, 'pos': 0.177, 'compound': 0.0258}, {'neg': 0.412, 'neu': 0.485, 'pos': 0.103, 'compound': -0.9682}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.4019}, {'neg': 0.328, 'neu': 0.541, 'pos': 0.132, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.654, 'pos': 0.346, 'compound': 0.8402}, {'neg': 0.314, 'neu': 0.686, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.146, 'neu': 0.751, 'pos': 0.103, 'compound': -0.2263}, {'neg': 0.232, 'neu': 0.567, 'pos': 0.201, 'compound': 0.1027}, {'neg': 0.067, 'neu': 0.865, 'pos': 0.067, 'compound': 0.0}, {'neg': 0.057, 'neu': 0.503, 'pos': 0.44, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.897, 'pos': 0.103, 'compound': 0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.292, 'neu': 0.584, 'pos': 0.125, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.89, 'pos': 0.11, 'compound': 0.1531}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.091, 'neu': 0.811, 'pos': 0.098, 'compound': 0.0516}, {'neg': 0.076, 'neu': 0.737, 'pos': 0.187, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.913, 'pos': 0.087, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.672, 'pos': 0.328, 'compound': 0.8074}, {'neg': 0.362, 'neu': 0.552, 'pos': 0.086, 'compound': -0.8402}, {'neg': 0.0, 'neu': 0.569, 'pos': 0.431, 'compound': 0.9468}, {'neg': 0.161, 'neu': 0.751, 'pos': 0.088, 'compound': -0.4588}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.259, 'neu': 0.531, 'pos': 0.209, 'compound': -0.3818}, {'neg': 0.049, 'neu': 0.848, 'pos': 0.103, 'compound': -0.0772}, {'neg': 0.126, 'neu': 0.673, 'pos': 0.202, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.79, 'pos': 0.21, 'compound': 0.7096}, {'neg': 0.061, 'neu': 0.807, 'pos': 0.132, 'compound': 0.4404}, {'neg': 0.046, 'neu': 0.76, 'pos': 0.194, 'compound': 0.8691}, {'neg': 0.0, 'neu': 0.912, 'pos': 0.088, 'compound': 0.4019}, {'neg': 0.107, 'neu': 0.534, 'pos': 0.359, 'compound': 0.6369}, {'neg': 0.131, 'neu': 0.766, 'pos': 0.104, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.929, 'pos': 0.071, 'compound': 0.0772}, {'neg': 0.233, 'neu': 0.614, 'pos': 0.153, 'compound': -0.6428}, {'neg': 0.096, 'neu': 0.904, 'pos': 0.0, 'compound': -0.4168}, {'neg': 0.326, 'neu': 0.506, 'pos': 0.169, 'compound': -0.6808}, {'neg': 0.093, 'neu': 0.722, 'pos': 0.186, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.752, 'pos': 0.248, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.593, 'pos': 0.407, 'compound': 0.8519}, {'neg': 0.128, 'neu': 0.872, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.184, 'neu': 0.701, 'pos': 0.115, 'compound': -0.6486}, {'neg': 0.139, 'neu': 0.687, 'pos': 0.174, 'compound': 0.4215}, {'neg': 0.083, 'neu': 0.789, 'pos': 0.128, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.6249}, {'neg': 0.052, 'neu': 0.869, 'pos': 0.079, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.83, 'pos': 0.17, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.745, 'pos': 0.255, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.804, 'pos': 0.196, 'compound': 0.6808}, {'neg': 0.281, 'neu': 0.719, 'pos': 0.0, 'compound': -0.7789}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.213, 'neu': 0.61, 'pos': 0.177, 'compound': -0.296}, {'neg': 0.083, 'neu': 0.675, 'pos': 0.242, 'compound': 0.6369}, {'neg': 0.056, 'neu': 0.599, 'pos': 0.345, 'compound': 0.802}, {'neg': 0.17, 'neu': 0.759, 'pos': 0.071, 'compound': -0.5267}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.111, 'neu': 0.75, 'pos': 0.139, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.696, 'pos': 0.304, 'compound': 0.5859}, {'neg': 0.087, 'neu': 0.833, 'pos': 0.08, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.594, 'pos': 0.406, 'compound': 0.9062}, {'neg': 0.0, 'neu': 0.737, 'pos': 0.263, 'compound': 0.9325}, {'neg': 0.2, 'neu': 0.8, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.11, 'neu': 0.89, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.888, 'pos': 0.112, 'compound': 0.4404}, {'neg': 0.176, 'neu': 0.763, 'pos': 0.061, 'compound': -0.7184}, {'neg': 0.243, 'neu': 0.638, 'pos': 0.119, 'compound': -0.5106}, {'neg': 0.153, 'neu': 0.765, 'pos': 0.082, 'compound': -0.2023}, {'neg': 0.038, 'neu': 0.824, 'pos': 0.137, 'compound': 0.5574}, {'neg': 0.123, 'neu': 0.564, 'pos': 0.313, 'compound': 0.5709}, {'neg': 0.048, 'neu': 0.838, 'pos': 0.114, 'compound': 0.296}, {'neg': 0.169, 'neu': 0.764, 'pos': 0.067, 'compound': -0.4939}, {'neg': 0.145, 'neu': 0.855, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.04, 'neu': 0.703, 'pos': 0.257, 'compound': 0.9118}, {'neg': 0.235, 'neu': 0.65, 'pos': 0.115, 'compound': -0.34}, {'neg': 0.288, 'neu': 0.712, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.6808}, {'neg': 0.273, 'neu': 0.649, 'pos': 0.078, 'compound': -0.802}, {'neg': 0.0, 'neu': 0.531, 'pos': 0.469, 'compound': 0.8625}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.059, 'neu': 0.714, 'pos': 0.227, 'compound': 0.6124}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.4215}, {'neg': 0.121, 'neu': 0.657, 'pos': 0.221, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.826, 'pos': 0.174, 'compound': 0.4588}, {'neg': 0.073, 'neu': 0.836, 'pos': 0.091, 'compound': 0.128}, {'neg': 0.0, 'neu': 0.768, 'pos': 0.232, 'compound': 0.8807}, {'neg': 0.2, 'neu': 0.697, 'pos': 0.103, 'compound': -0.6688}, {'neg': 0.059, 'neu': 0.941, 'pos': 0.0, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.861, 'pos': 0.139, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.517, 'pos': 0.483, 'compound': 0.9796}, {'neg': 0.125, 'neu': 0.747, 'pos': 0.128, 'compound': 0.0258}, {'neg': 0.143, 'neu': 0.741, 'pos': 0.116, 'compound': -0.128}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.121, 'neu': 0.554, 'pos': 0.325, 'compound': 0.8271}, {'neg': 0.0, 'neu': 0.534, 'pos': 0.466, 'compound': 0.9022}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.217, 'neu': 0.707, 'pos': 0.076, 'compound': -0.7783}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.5106}, {'neg': 0.189, 'neu': 0.811, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.143, 'neu': 0.803, 'pos': 0.054, 'compound': -0.6249}, {'neg': 0.0, 'neu': 0.7, 'pos': 0.3, 'compound': 0.8402}, {'neg': 0.155, 'neu': 0.69, 'pos': 0.155, 'compound': 0.0}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.205, 'neu': 0.622, 'pos': 0.173, 'compound': -0.5267}, {'neg': 0.062, 'neu': 0.724, 'pos': 0.214, 'compound': 0.765}, {'neg': 0.33, 'neu': 0.67, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.8885}, {'neg': 0.073, 'neu': 0.647, 'pos': 0.28, 'compound': 0.5859}, {'neg': 0.09, 'neu': 0.702, 'pos': 0.207, 'compound': 0.6119}, {'neg': 0.0, 'neu': 0.725, 'pos': 0.275, 'compound': 0.8625}, {'neg': 0.072, 'neu': 0.871, 'pos': 0.057, 'compound': -0.128}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.142, 'neu': 0.734, 'pos': 0.124, 'compound': -0.1027}, {'neg': 0.048, 'neu': 0.781, 'pos': 0.171, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.7906}, {'neg': 0.132, 'neu': 0.746, 'pos': 0.122, 'compound': -0.128}, {'neg': 0.076, 'neu': 0.598, 'pos': 0.326, 'compound': 0.8481}, {'neg': 0.088, 'neu': 0.782, 'pos': 0.13, 'compound': 0.2023}, {'neg': 0.191, 'neu': 0.679, 'pos': 0.13, 'compound': -0.25}, {'neg': 0.0, 'neu': 0.744, 'pos': 0.256, 'compound': 0.8225}, {'neg': 0.336, 'neu': 0.48, 'pos': 0.183, 'compound': -0.3612}, {'neg': 0.118, 'neu': 0.836, 'pos': 0.045, 'compound': -0.4767}, {'neg': 0.135, 'neu': 0.675, 'pos': 0.19, 'compound': 0.1531}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.125, 'neu': 0.716, 'pos': 0.159, 'compound': -0.2648}, {'neg': 0.044, 'neu': 0.689, 'pos': 0.267, 'compound': 0.891}, {'neg': 0.238, 'neu': 0.722, 'pos': 0.04, 'compound': -0.7579}, {'neg': 0.291, 'neu': 0.417, 'pos': 0.292, 'compound': 0.2528}, {'neg': 0.06, 'neu': 0.69, 'pos': 0.25, 'compound': 0.6597}, {'neg': 0.304, 'neu': 0.441, 'pos': 0.255, 'compound': -0.25}, {'neg': 0.219, 'neu': 0.503, 'pos': 0.279, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.754, 'pos': 0.246, 'compound': 0.8555}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.902, 'pos': 0.098, 'compound': 0.34}, {'neg': 0.156, 'neu': 0.844, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.098, 'neu': 0.637, 'pos': 0.265, 'compound': 0.5267}, {'neg': 0.062, 'neu': 0.656, 'pos': 0.282, 'compound': 0.7717}, {'neg': 0.05, 'neu': 0.853, 'pos': 0.097, 'compound': 0.296}, {'neg': 0.143, 'neu': 0.741, 'pos': 0.116, 'compound': -0.128}, {'neg': 0.167, 'neu': 0.584, 'pos': 0.249, 'compound': 0.4781}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.182, 'neu': 0.687, 'pos': 0.131, 'compound': -0.5267}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.421, 'neu': 0.579, 'pos': 0.0, 'compound': -0.9531}, {'neg': 0.103, 'neu': 0.59, 'pos': 0.307, 'compound': 0.7096}, {'neg': 0.312, 'neu': 0.608, 'pos': 0.079, 'compound': -0.8316}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.6808}, {'neg': 0.162, 'neu': 0.781, 'pos': 0.056, 'compound': -0.5267}, {'neg': 0.095, 'neu': 0.633, 'pos': 0.271, 'compound': 0.5994}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.174, 'neu': 0.696, 'pos': 0.13, 'compound': 0.1531}, {'neg': 0.032, 'neu': 0.767, 'pos': 0.201, 'compound': 0.7506}, {'neg': 0.128, 'neu': 0.749, 'pos': 0.123, 'compound': -0.0258}, {'neg': 0.076, 'neu': 0.825, 'pos': 0.1, 'compound': 0.1779}, {'neg': 0.142, 'neu': 0.787, 'pos': 0.071, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.778, 'pos': 0.222, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.785, 'pos': 0.215, 'compound': 0.802}, {'neg': 0.215, 'neu': 0.527, 'pos': 0.258, 'compound': 0.5856}, {'neg': 0.148, 'neu': 0.852, 'pos': 0.0, 'compound': -0.5106}, {'neg': 0.101, 'neu': 0.562, 'pos': 0.337, 'compound': 0.743}, {'neg': 0.199, 'neu': 0.801, 'pos': 0.0, 'compound': -0.8807}, {'neg': 0.0, 'neu': 0.749, 'pos': 0.251, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.7506}, {'neg': 0.171, 'neu': 0.721, 'pos': 0.108, 'compound': -0.5859}, {'neg': 0.08, 'neu': 0.562, 'pos': 0.357, 'compound': 0.7845}, {'neg': 0.167, 'neu': 0.701, 'pos': 0.131, 'compound': -0.4588}, {'neg': 0.19, 'neu': 0.684, 'pos': 0.127, 'compound': -0.3612}, {'neg': 0.112, 'neu': 0.785, 'pos': 0.103, 'compound': -0.1027}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.191, 'neu': 0.661, 'pos': 0.149, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.939, 'pos': 0.061, 'compound': 0.4588}, {'neg': 0.216, 'neu': 0.746, 'pos': 0.038, 'compound': -0.8316}, {'neg': 0.195, 'neu': 0.614, 'pos': 0.191, 'compound': 0.2023}, {'neg': 0.129, 'neu': 0.572, 'pos': 0.299, 'compound': 0.7783}, {'neg': 0.163, 'neu': 0.565, 'pos': 0.272, 'compound': 0.4767}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.273, 'neu': 0.727, 'pos': 0.0, 'compound': -0.9246}, {'neg': 0.161, 'neu': 0.737, 'pos': 0.101, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.85, 'pos': 0.15, 'compound': 0.4588}, {'neg': 0.096, 'neu': 0.819, 'pos': 0.085, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.798, 'pos': 0.202, 'compound': 0.5106}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.142, 'neu': 0.789, 'pos': 0.068, 'compound': -0.34}, {'neg': 0.146, 'neu': 0.707, 'pos': 0.146, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.804, 'pos': 0.196, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.736, 'pos': 0.264, 'compound': 0.8885}, {'neg': 0.0, 'neu': 0.717, 'pos': 0.283, 'compound': 0.7579}, {'neg': 0.149, 'neu': 0.552, 'pos': 0.298, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.548, 'pos': 0.452, 'compound': 0.9217}, {'neg': 0.061, 'neu': 0.777, 'pos': 0.162, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.5423}, {'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'compound': -0.765}, {'neg': 0.0, 'neu': 0.899, 'pos': 0.101, 'compound': 0.3612}, {'neg': 0.092, 'neu': 0.717, 'pos': 0.191, 'compound': 0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.882, 'pos': 0.118, 'compound': 0.34}, {'neg': 0.361, 'neu': 0.639, 'pos': 0.0, 'compound': -0.8834}, {'neg': 0.18, 'neu': 0.534, 'pos': 0.287, 'compound': 0.5859}, {'neg': 0.136, 'neu': 0.657, 'pos': 0.207, 'compound': 0.34}, {'neg': 0.111, 'neu': 0.831, 'pos': 0.058, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.824, 'pos': 0.176, 'compound': 0.4939}, {'neg': 0.115, 'neu': 0.723, 'pos': 0.162, 'compound': 0.0258}, {'neg': 0.272, 'neu': 0.635, 'pos': 0.093, 'compound': -0.8085}, {'neg': 0.085, 'neu': 0.775, 'pos': 0.14, 'compound': 0.3182}, {'neg': 0.182, 'neu': 0.548, 'pos': 0.271, 'compound': 0.3818}, {'neg': 0.058, 'neu': 0.857, 'pos': 0.086, 'compound': 0.0772}, {'neg': 0.133, 'neu': 0.867, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.14, 'neu': 0.773, 'pos': 0.087, 'compound': -0.4804}, {'neg': 0.293, 'neu': 0.633, 'pos': 0.074, 'compound': -0.8442}, {'neg': 0.044, 'neu': 0.762, 'pos': 0.194, 'compound': 0.6908}, {'neg': 0.224, 'neu': 0.6, 'pos': 0.176, 'compound': -0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.118, 'neu': 0.732, 'pos': 0.15, 'compound': -0.0516}, {'neg': 0.202, 'neu': 0.511, 'pos': 0.287, 'compound': 0.3927}, {'neg': 0.09, 'neu': 0.7, 'pos': 0.21, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.72, 'pos': 0.28, 'compound': 0.9442}, {'neg': 0.208, 'neu': 0.754, 'pos': 0.039, 'compound': -0.8779}, {'neg': 0.0, 'neu': 0.532, 'pos': 0.468, 'compound': 0.9403}, {'neg': 0.0, 'neu': 0.766, 'pos': 0.234, 'compound': 0.5859}, {'neg': 0.463, 'neu': 0.452, 'pos': 0.085, 'compound': -0.9246}, {'neg': 0.181, 'neu': 0.648, 'pos': 0.17, 'compound': 0.1027}, {'neg': 0.074, 'neu': 0.744, 'pos': 0.182, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.755, 'pos': 0.245, 'compound': 0.6369}, {'neg': 0.189, 'neu': 0.629, 'pos': 0.182, 'compound': -0.0258}, {'neg': 0.147, 'neu': 0.633, 'pos': 0.22, 'compound': 0.4939}, {'neg': 0.116, 'neu': 0.478, 'pos': 0.406, 'compound': 0.743}, {'neg': 0.252, 'neu': 0.748, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.207, 'neu': 0.602, 'pos': 0.192, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.86, 'pos': 0.14, 'compound': 0.3818}, {'neg': 0.099, 'neu': 0.663, 'pos': 0.238, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.1531}, {'neg': 0.268, 'neu': 0.631, 'pos': 0.101, 'compound': -0.743}, {'neg': 0.0, 'neu': 0.805, 'pos': 0.195, 'compound': 0.4404}, {'neg': 0.216, 'neu': 0.674, 'pos': 0.11, 'compound': -0.6705}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.162, 'neu': 0.614, 'pos': 0.225, 'compound': 0.0516}, {'neg': 0.197, 'neu': 0.803, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.3818}, {'neg': 0.144, 'neu': 0.744, 'pos': 0.112, 'compound': -0.1635}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.938, 'pos': 0.062, 'compound': 0.2023}, {'neg': 0.247, 'neu': 0.532, 'pos': 0.221, 'compound': -0.1779}, {'neg': 0.108, 'neu': 0.804, 'pos': 0.087, 'compound': -0.1531}, {'neg': 0.164, 'neu': 0.765, 'pos': 0.071, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.817, 'pos': 0.183, 'compound': 0.8519}, {'neg': 0.0, 'neu': 0.934, 'pos': 0.066, 'compound': 0.0516}, {'neg': 0.236, 'neu': 0.574, 'pos': 0.189, 'compound': -0.34}, {'neg': 0.041, 'neu': 0.743, 'pos': 0.216, 'compound': 0.8164}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.836}, {'neg': 0.259, 'neu': 0.484, 'pos': 0.257, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.7906}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.3008}, {'neg': 0.146, 'neu': 0.854, 'pos': 0.0, 'compound': -0.34}, {'neg': 0.0, 'neu': 0.553, 'pos': 0.447, 'compound': 0.9501}, {'neg': 0.334, 'neu': 0.55, 'pos': 0.116, 'compound': -0.7724}, {'neg': 0.0, 'neu': 0.711, 'pos': 0.289, 'compound': 0.8316}, {'neg': 0.106, 'neu': 0.766, 'pos': 0.128, 'compound': 0.128}, {'neg': 0.0, 'neu': 0.882, 'pos': 0.118, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.746, 'pos': 0.254, 'compound': 0.8481}, {'neg': 0.104, 'neu': 0.896, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.213, 'neu': 0.71, 'pos': 0.077, 'compound': -0.5327}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.223, 'neu': 0.777, 'pos': 0.0, 'compound': -0.5574}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.7906}, {'neg': 0.08, 'neu': 0.92, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.826, 'pos': 0.174, 'compound': 0.4215}, {'neg': 0.182, 'neu': 0.647, 'pos': 0.171, 'compound': -0.1027}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.07, 'neu': 0.444, 'pos': 0.486, 'compound': 0.9022}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.058, 'neu': 0.774, 'pos': 0.168, 'compound': 0.4767}, {'neg': 0.159, 'neu': 0.53, 'pos': 0.312, 'compound': 0.7096}, {'neg': 0.116, 'neu': 0.558, 'pos': 0.326, 'compound': 0.5994}, {'neg': 0.124, 'neu': 0.876, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.7096}, {'neg': 0.107, 'neu': 0.893, 'pos': 0.0, 'compound': -0.6705}, {'neg': 0.0, 'neu': 0.727, 'pos': 0.273, 'compound': 0.9246}, {'neg': 0.339, 'neu': 0.529, 'pos': 0.132, 'compound': -0.5994}, {'neg': 0.158, 'neu': 0.748, 'pos': 0.094, 'compound': -0.5106}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.11, 'neu': 0.702, 'pos': 0.187, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.918, 'pos': 0.082, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.853, 'pos': 0.147, 'compound': 0.8074}, {'neg': 0.199, 'neu': 0.621, 'pos': 0.18, 'compound': -0.2263}, {'neg': 0.127, 'neu': 0.873, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.254, 'neu': 0.557, 'pos': 0.189, 'compound': -0.4767}, {'neg': 0.145, 'neu': 0.699, 'pos': 0.156, 'compound': 0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.065, 'neu': 0.779, 'pos': 0.156, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.809, 'pos': 0.191, 'compound': 0.5106}, {'neg': 0.329, 'neu': 0.671, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.112, 'neu': 0.785, 'pos': 0.103, 'compound': -0.0516}, {'neg': 0.155, 'neu': 0.473, 'pos': 0.372, 'compound': 0.7506}, {'neg': 0.128, 'neu': 0.872, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.138, 'neu': 0.563, 'pos': 0.299, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.824, 'pos': 0.176, 'compound': 0.4939}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.758, 'pos': 0.242, 'compound': 0.7906}, {'neg': 0.119, 'neu': 0.616, 'pos': 0.264, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.646, 'pos': 0.354, 'compound': 0.8934}, {'neg': 0.135, 'neu': 0.865, 'pos': 0.0, 'compound': -0.3612}, {'neg': 0.0, 'neu': 0.812, 'pos': 0.188, 'compound': 0.5267}, {'neg': 0.236, 'neu': 0.613, 'pos': 0.151, 'compound': -0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.186, 'neu': 0.6, 'pos': 0.214, 'compound': 0.0}, {'neg': 0.146, 'neu': 0.539, 'pos': 0.315, 'compound': 0.7579}, {'neg': 0.143, 'neu': 0.802, 'pos': 0.055, 'compound': -0.4767}, {'neg': 0.14, 'neu': 0.86, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.623, 'pos': 0.377, 'compound': 0.8519}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.627, 'pos': 0.373, 'compound': 0.91}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.269, 'neu': 0.577, 'pos': 0.154, 'compound': -0.5859}, {'neg': 0.267, 'neu': 0.733, 'pos': 0.0, 'compound': -0.6249}, {'neg': 0.0, 'neu': 0.954, 'pos': 0.046, 'compound': 0.0772}, {'neg': 0.197, 'neu': 0.539, 'pos': 0.264, 'compound': 0.2263}, {'neg': 0.107, 'neu': 0.655, 'pos': 0.238, 'compound': 0.4215}, {'neg': 0.161, 'neu': 0.691, 'pos': 0.147, 'compound': -0.0772}, {'neg': 0.099, 'neu': 0.366, 'pos': 0.535, 'compound': 0.91}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.274, 'neu': 0.726, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.0, 'neu': 0.41, 'pos': 0.59, 'compound': 0.9493}, {'neg': 0.0, 'neu': 0.505, 'pos': 0.495, 'compound': 0.9136}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.34}, {'neg': 0.087, 'neu': 0.714, 'pos': 0.198, 'compound': 0.4215}, {'neg': 0.098, 'neu': 0.846, 'pos': 0.056, 'compound': -0.2263}, {'neg': 0.101, 'neu': 0.899, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.336, 'neu': 0.565, 'pos': 0.099, 'compound': -0.886}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.13, 'neu': 0.87, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.26, 'neu': 0.74, 'pos': 0.0, 'compound': -0.8834}, {'neg': 0.252, 'neu': 0.748, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.817, 'pos': 0.183, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.591, 'pos': 0.409, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.336, 'pos': 0.664, 'compound': 0.9856}, {'neg': 0.079, 'neu': 0.706, 'pos': 0.215, 'compound': 0.7003}, {'neg': 0.083, 'neu': 0.764, 'pos': 0.154, 'compound': 0.304}, {'neg': 0.0, 'neu': 0.732, 'pos': 0.268, 'compound': 0.7717}, {'neg': 0.225, 'neu': 0.599, 'pos': 0.176, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.755, 'pos': 0.245, 'compound': 0.4939}, {'neg': 0.106, 'neu': 0.672, 'pos': 0.223, 'compound': 0.3197}, {'neg': 0.115, 'neu': 0.548, 'pos': 0.337, 'compound': 0.8176}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.498, 'pos': 0.502, 'compound': 0.9022}, {'neg': 0.0, 'neu': 0.854, 'pos': 0.146, 'compound': 0.4404}, {'neg': 0.158, 'neu': 0.71, 'pos': 0.131, 'compound': -0.128}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.31, 'neu': 0.69, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.185, 'neu': 0.784, 'pos': 0.031, 'compound': -0.7579}, {'neg': 0.091, 'neu': 0.803, 'pos': 0.106, 'compound': 0.1027}, {'neg': 0.0, 'neu': 0.921, 'pos': 0.079, 'compound': 0.2263}, {'neg': 0.174, 'neu': 0.548, 'pos': 0.277, 'compound': 0.4939}, {'neg': 0.049, 'neu': 0.764, 'pos': 0.187, 'compound': 0.765}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.158, 'neu': 0.707, 'pos': 0.136, 'compound': -0.1027}, {'neg': 0.0, 'neu': 0.72, 'pos': 0.28, 'compound': 0.8442}, {'neg': 0.198, 'neu': 0.707, 'pos': 0.095, 'compound': -0.4404}, {'neg': 0.13, 'neu': 0.628, 'pos': 0.242, 'compound': 0.3182}, {'neg': 0.082, 'neu': 0.519, 'pos': 0.398, 'compound': 0.8074}, {'neg': 0.156, 'neu': 0.707, 'pos': 0.136, 'compound': -0.4173}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.4019}, {'neg': 0.112, 'neu': 0.661, 'pos': 0.227, 'compound': 0.4215}, {'neg': 0.207, 'neu': 0.645, 'pos': 0.147, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.127, 'neu': 0.873, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.195, 'neu': 0.758, 'pos': 0.047, 'compound': -0.6249}, {'neg': 0.033, 'neu': 0.849, 'pos': 0.118, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.933, 'pos': 0.067, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.765, 'pos': 0.235, 'compound': 0.5574}, {'neg': 0.253, 'neu': 0.747, 'pos': 0.0, 'compound': -0.5267}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.243, 'neu': 0.641, 'pos': 0.117, 'compound': -0.7579}, {'neg': 0.0, 'neu': 0.697, 'pos': 0.303, 'compound': 0.8126}, {'neg': 0.055, 'neu': 0.625, 'pos': 0.32, 'compound': 0.8225}, {'neg': 0.205, 'neu': 0.795, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.048, 'neu': 0.806, 'pos': 0.146, 'compound': 0.4404}, {'neg': 0.283, 'neu': 0.637, 'pos': 0.08, 'compound': -0.9136}, {'neg': 0.241, 'neu': 0.603, 'pos': 0.156, 'compound': -0.4019}, {'neg': 0.171, 'neu': 0.734, 'pos': 0.094, 'compound': -0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.082, 'neu': 0.636, 'pos': 0.282, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.603, 'pos': 0.397, 'compound': 0.91}, {'neg': 0.0, 'neu': 0.709, 'pos': 0.291, 'compound': 0.9325}, {'neg': 0.163, 'neu': 0.837, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.099, 'neu': 0.728, 'pos': 0.173, 'compound': 0.5647}, {'neg': 0.199, 'neu': 0.627, 'pos': 0.174, 'compound': 0.0772}, {'neg': 0.191, 'neu': 0.503, 'pos': 0.307, 'compound': 0.3182}, {'neg': 0.0, 'neu': 0.809, 'pos': 0.191, 'compound': 0.6369}, {'neg': 0.087, 'neu': 0.666, 'pos': 0.247, 'compound': 0.8779}, {'neg': 0.082, 'neu': 0.69, 'pos': 0.228, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.658, 'pos': 0.342, 'compound': 0.8979}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.947, 'pos': 0.053, 'compound': 0.0772}, {'neg': 0.282, 'neu': 0.552, 'pos': 0.166, 'compound': -0.5574}, {'neg': 0.169, 'neu': 0.599, 'pos': 0.232, 'compound': 0.3182}, {'neg': 0.323, 'neu': 0.677, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.0, 'neu': 0.817, 'pos': 0.183, 'compound': 0.6808}, {'neg': 0.184, 'neu': 0.816, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.229, 'neu': 0.771, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.188, 'neu': 0.694, 'pos': 0.118, 'compound': -0.1779}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.854, 'pos': 0.146, 'compound': 0.4404}, {'neg': 0.089, 'neu': 0.911, 'pos': 0.0, 'compound': -0.5267}, {'neg': 0.235, 'neu': 0.64, 'pos': 0.125, 'compound': -0.6249}, {'neg': 0.208, 'neu': 0.745, 'pos': 0.047, 'compound': -0.8519}, {'neg': 0.134, 'neu': 0.743, 'pos': 0.124, 'compound': -0.0516}, {'neg': 0.135, 'neu': 0.74, 'pos': 0.125, 'compound': -0.1027}, {'neg': 0.055, 'neu': 0.867, 'pos': 0.077, 'compound': 0.2263}, {'neg': 0.182, 'neu': 0.684, 'pos': 0.134, 'compound': -0.3612}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.724, 'pos': 0.276, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.675, 'pos': 0.325, 'compound': 0.7717}, {'neg': 0.0, 'neu': 0.767, 'pos': 0.233, 'compound': 0.8316}, {'neg': 0.057, 'neu': 0.646, 'pos': 0.297, 'compound': 0.9062}, {'neg': 0.197, 'neu': 0.61, 'pos': 0.192, 'compound': 0.2263}, {'neg': 0.186, 'neu': 0.667, 'pos': 0.147, 'compound': -0.34}, {'neg': 0.068, 'neu': 0.707, 'pos': 0.225, 'compound': 0.7351}, {'neg': 0.129, 'neu': 0.792, 'pos': 0.079, 'compound': -0.1779}, {'neg': 0.133, 'neu': 0.745, 'pos': 0.122, 'compound': 0.1027}, {'neg': 0.105, 'neu': 0.63, 'pos': 0.265, 'compound': 0.4215}, {'neg': 0.176, 'neu': 0.586, 'pos': 0.238, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.6369}, {'neg': 0.223, 'neu': 0.777, 'pos': 0.0, 'compound': -0.8807}, {'neg': 0.149, 'neu': 0.615, 'pos': 0.236, 'compound': 0.1803}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.296}, {'neg': 0.066, 'neu': 0.706, 'pos': 0.229, 'compound': 0.6908}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.3818}, {'neg': 0.108, 'neu': 0.677, 'pos': 0.215, 'compound': 0.4019}, {'neg': 0.113, 'neu': 0.377, 'pos': 0.51, 'compound': 0.8591}, {'neg': 0.227, 'neu': 0.724, 'pos': 0.049, 'compound': -0.8442}, {'neg': 0.368, 'neu': 0.632, 'pos': 0.0, 'compound': -0.8591}, {'neg': 0.178, 'neu': 0.744, 'pos': 0.077, 'compound': -0.659}, {'neg': 0.178, 'neu': 0.719, 'pos': 0.103, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.754, 'pos': 0.246, 'compound': 0.8555}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.794, 'pos': 0.206, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.6597}, {'neg': 0.147, 'neu': 0.707, 'pos': 0.147, 'compound': 0.0}, {'neg': 0.215, 'neu': 0.739, 'pos': 0.046, 'compound': -0.5859}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.103, 'neu': 0.802, 'pos': 0.095, 'compound': -0.1043}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.071, 'neu': 0.929, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.184, 'neu': 0.671, 'pos': 0.145, 'compound': -0.0258}, {'neg': 0.216, 'neu': 0.616, 'pos': 0.168, 'compound': -0.3182}, {'neg': 0.091, 'neu': 0.64, 'pos': 0.269, 'compound': 0.6486}, {'neg': 0.264, 'neu': 0.638, 'pos': 0.098, 'compound': -0.5994}, {'neg': 0.065, 'neu': 0.772, 'pos': 0.163, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.4939}, {'neg': 0.112, 'neu': 0.636, 'pos': 0.253, 'compound': 0.8481}, {'neg': 0.073, 'neu': 0.756, 'pos': 0.171, 'compound': 0.5423}, {'neg': 0.156, 'neu': 0.78, 'pos': 0.065, 'compound': -0.5267}, {'neg': 0.057, 'neu': 0.905, 'pos': 0.038, 'compound': -0.2263}, {'neg': 0.413, 'neu': 0.479, 'pos': 0.107, 'compound': -0.9246}, {'neg': 0.056, 'neu': 0.761, 'pos': 0.183, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.367, 'neu': 0.524, 'pos': 0.109, 'compound': -0.9062}, {'neg': 0.0, 'neu': 0.868, 'pos': 0.132, 'compound': 0.4404}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.167, 'neu': 0.81, 'pos': 0.022, 'compound': -0.8126}, {'neg': 0.0, 'neu': 0.925, 'pos': 0.075, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.62, 'pos': 0.38, 'compound': 0.9287}, {'neg': 0.043, 'neu': 0.823, 'pos': 0.134, 'compound': 0.4588}, {'neg': 0.147, 'neu': 0.737, 'pos': 0.116, 'compound': -0.0258}, {'neg': 0.0, 'neu': 0.943, 'pos': 0.057, 'compound': 0.2023}, {'neg': 0.22, 'neu': 0.694, 'pos': 0.086, 'compound': -0.5106}, {'neg': 0.323, 'neu': 0.456, 'pos': 0.221, 'compound': -0.4019}, {'neg': 0.106, 'neu': 0.81, 'pos': 0.084, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.7, 'pos': 0.3, 'compound': 0.9325}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.3818}, {'neg': 0.099, 'neu': 0.566, 'pos': 0.335, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.522, 'pos': 0.478, 'compound': 0.986}, {'neg': 0.274, 'neu': 0.726, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.123, 'neu': 0.877, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.069, 'neu': 0.837, 'pos': 0.094, 'compound': 0.0516}, {'neg': 0.11, 'neu': 0.784, 'pos': 0.106, 'compound': -0.0571}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.695, 'pos': 0.305, 'compound': 0.9517}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.098, 'neu': 0.691, 'pos': 0.211, 'compound': 0.4767}, {'neg': 0.223, 'neu': 0.738, 'pos': 0.039, 'compound': -0.8591}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.218, 'neu': 0.597, 'pos': 0.185, 'compound': -0.2732}, {'neg': 0.0, 'neu': 0.638, 'pos': 0.362, 'compound': 0.8807}, {'neg': 0.174, 'neu': 0.714, 'pos': 0.112, 'compound': -0.34}, {'neg': 0.194, 'neu': 0.782, 'pos': 0.024, 'compound': -0.8442}, {'neg': 0.061, 'neu': 0.816, 'pos': 0.122, 'compound': 0.4019}, {'neg': 0.122, 'neu': 0.45, 'pos': 0.428, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.34}, {'neg': 0.228, 'neu': 0.501, 'pos': 0.271, 'compound': 0.0772}, {'neg': 0.187, 'neu': 0.813, 'pos': 0.0, 'compound': -0.6712}, {'neg': 0.0, 'neu': 0.753, 'pos': 0.247, 'compound': 0.8885}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.3612}, {'neg': 0.137, 'neu': 0.819, 'pos': 0.044, 'compound': -0.4039}, {'neg': 0.133, 'neu': 0.798, 'pos': 0.069, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.938, 'pos': 0.062, 'compound': 0.3612}, {'neg': 0.16, 'neu': 0.84, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.895, 'pos': 0.105, 'compound': 0.4019}, {'neg': 0.254, 'neu': 0.652, 'pos': 0.094, 'compound': -0.7964}, {'neg': 0.0, 'neu': 0.613, 'pos': 0.387, 'compound': 0.8779}, {'neg': 0.0, 'neu': 0.753, 'pos': 0.247, 'compound': 0.5574}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.127, 'neu': 0.702, 'pos': 0.171, 'compound': 0.25}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.4404}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.223, 'neu': 0.613, 'pos': 0.164, 'compound': -0.5688}, {'neg': 0.124, 'neu': 0.769, 'pos': 0.107, 'compound': -0.1027}, {'neg': 0.359, 'neu': 0.641, 'pos': 0.0, 'compound': -0.8126}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.168, 'neu': 0.654, 'pos': 0.178, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.361, 'pos': 0.639, 'compound': 0.9081}, {'neg': 0.146, 'neu': 0.802, 'pos': 0.052, 'compound': -0.4588}, {'neg': 0.0, 'neu': 0.814, 'pos': 0.186, 'compound': 0.6249}, {'neg': 0.183, 'neu': 0.745, 'pos': 0.072, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.7964}, {'neg': 0.0, 'neu': 0.811, 'pos': 0.189, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.469, 'pos': 0.531, 'compound': 0.9136}, {'neg': 0.159, 'neu': 0.767, 'pos': 0.074, 'compound': -0.4404}, {'neg': 0.043, 'neu': 0.729, 'pos': 0.227, 'compound': 0.8625}, {'neg': 0.0, 'neu': 0.817, 'pos': 0.183, 'compound': 0.6908}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.101, 'neu': 0.487, 'pos': 0.412, 'compound': 0.8074}, {'neg': 0.088, 'neu': 0.672, 'pos': 0.239, 'compound': 0.5574}, {'neg': 0.111, 'neu': 0.805, 'pos': 0.084, 'compound': -0.1779}, {'neg': 0.135, 'neu': 0.689, 'pos': 0.177, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.795, 'pos': 0.205, 'compound': 0.7579}, {'neg': 0.124, 'neu': 0.55, 'pos': 0.326, 'compound': 0.5267}, {'neg': 0.062, 'neu': 0.845, 'pos': 0.093, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.925, 'pos': 0.075, 'compound': 0.2732}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.887, 'pos': 0.113, 'compound': 0.6369}, {'neg': 0.151, 'neu': 0.582, 'pos': 0.267, 'compound': 0.5267}, {'neg': 0.083, 'neu': 0.741, 'pos': 0.176, 'compound': 0.4588}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.13, 'neu': 0.673, 'pos': 0.197, 'compound': 0.4215}, {'neg': 0.064, 'neu': 0.76, 'pos': 0.176, 'compound': 0.5719}, {'neg': 0.067, 'neu': 0.868, 'pos': 0.065, 'compound': -0.2732}, {'neg': 0.059, 'neu': 0.544, 'pos': 0.397, 'compound': 0.9349}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.84, 'pos': 0.16, 'compound': 0.4588}, {'neg': 0.188, 'neu': 0.625, 'pos': 0.188, 'compound': -0.0}, {'neg': 0.058, 'neu': 0.741, 'pos': 0.2, 'compound': 0.7269}, {'neg': 0.1, 'neu': 0.757, 'pos': 0.143, 'compound': 0.296}, {'neg': 0.103, 'neu': 0.728, 'pos': 0.169, 'compound': 0.1779}, {'neg': 0.256, 'neu': 0.744, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.877, 'pos': 0.123, 'compound': 0.4939}, {'neg': 0.081, 'neu': 0.693, 'pos': 0.226, 'compound': 0.5859}, {'neg': 0.14, 'neu': 0.678, 'pos': 0.182, 'compound': 0.1779}, {'neg': 0.248, 'neu': 0.647, 'pos': 0.104, 'compound': -0.4588}, {'neg': 0.148, 'neu': 0.655, 'pos': 0.197, 'compound': 0.4019}, {'neg': 0.042, 'neu': 0.52, 'pos': 0.438, 'compound': 0.9641}, {'neg': 0.316, 'neu': 0.684, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.064, 'neu': 0.762, 'pos': 0.174, 'compound': 0.5574}, {'neg': 0.231, 'neu': 0.654, 'pos': 0.115, 'compound': -0.6124}, {'neg': 0.195, 'neu': 0.667, 'pos': 0.139, 'compound': -0.4767}, {'neg': 0.097, 'neu': 0.903, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.089, 'neu': 0.615, 'pos': 0.295, 'compound': 0.7717}, {'neg': 0.144, 'neu': 0.792, 'pos': 0.064, 'compound': -0.3818}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.3612}, {'neg': 0.107, 'neu': 0.807, 'pos': 0.086, 'compound': -0.1779}, {'neg': 0.106, 'neu': 0.894, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.581, 'pos': 0.419, 'compound': 0.9612}, {'neg': 0.102, 'neu': 0.725, 'pos': 0.172, 'compound': 0.505}, {'neg': 0.101, 'neu': 0.596, 'pos': 0.303, 'compound': 0.6597}, {'neg': 0.133, 'neu': 0.554, 'pos': 0.313, 'compound': 0.7579}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.094, 'neu': 0.583, 'pos': 0.323, 'compound': 0.6249}, {'neg': 0.199, 'neu': 0.651, 'pos': 0.151, 'compound': -0.4215}, {'neg': 0.0, 'neu': 0.741, 'pos': 0.259, 'compound': 0.891}, {'neg': 0.097, 'neu': 0.738, 'pos': 0.165, 'compound': 0.3586}, {'neg': 0.096, 'neu': 0.775, 'pos': 0.129, 'compound': 0.0772}, {'neg': 0.293, 'neu': 0.707, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.693, 'pos': 0.307, 'compound': 0.9493}, {'neg': 0.071, 'neu': 0.929, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.199, 'neu': 0.718, 'pos': 0.083, 'compound': -0.4939}, {'neg': 0.152, 'neu': 0.759, 'pos': 0.09, 'compound': -0.2263}, {'neg': 0.266, 'neu': 0.647, 'pos': 0.086, 'compound': -0.6124}, {'neg': 0.225, 'neu': 0.775, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.089, 'neu': 0.669, 'pos': 0.242, 'compound': 0.4767}, {'neg': 0.048, 'neu': 0.866, 'pos': 0.086, 'compound': 0.1984}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.664, 'pos': 0.336, 'compound': 0.8225}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.026, 'neu': 0.626, 'pos': 0.348, 'compound': 0.9477}, {'neg': 0.068, 'neu': 0.725, 'pos': 0.208, 'compound': 0.6808}, {'neg': 0.099, 'neu': 0.901, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.772, 'pos': 0.228, 'compound': 0.8689}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.264, 'neu': 0.566, 'pos': 0.17, 'compound': -0.513}, {'neg': 0.137, 'neu': 0.74, 'pos': 0.124, 'compound': -0.5859}, {'neg': 0.135, 'neu': 0.707, 'pos': 0.158, 'compound': 0.1779}, {'neg': 0.258, 'neu': 0.742, 'pos': 0.0, 'compound': -0.765}, {'neg': 0.144, 'neu': 0.746, 'pos': 0.109, 'compound': -0.1779}, {'neg': 0.088, 'neu': 0.79, 'pos': 0.122, 'compound': 0.0258}, {'neg': 0.127, 'neu': 0.646, 'pos': 0.227, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.95, 'pos': 0.05, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.699, 'pos': 0.301, 'compound': 0.8481}, {'neg': 0.224, 'neu': 0.525, 'pos': 0.251, 'compound': 0.2263}, {'neg': 0.0, 'neu': 0.788, 'pos': 0.212, 'compound': 0.8481}, {'neg': 0.129, 'neu': 0.758, 'pos': 0.112, 'compound': -0.1531}, {'neg': 0.128, 'neu': 0.727, 'pos': 0.145, 'compound': 0.1531}, {'neg': 0.186, 'neu': 0.814, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.723, 'pos': 0.277, 'compound': 0.8225}, {'neg': 0.033, 'neu': 0.525, 'pos': 0.443, 'compound': 0.9468}, {'neg': 0.117, 'neu': 0.714, 'pos': 0.168, 'compound': -0.0}, {'neg': 0.244, 'neu': 0.633, 'pos': 0.122, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.765}, {'neg': 0.096, 'neu': 0.643, 'pos': 0.261, 'compound': 0.5574}, {'neg': 0.238, 'neu': 0.695, 'pos': 0.067, 'compound': -0.7506}, {'neg': 0.154, 'neu': 0.647, 'pos': 0.199, 'compound': 0.2023}, {'neg': 0.147, 'neu': 0.795, 'pos': 0.058, 'compound': -0.5423}, {'neg': 0.114, 'neu': 0.576, 'pos': 0.31, 'compound': 0.8335}, {'neg': 0.116, 'neu': 0.621, 'pos': 0.263, 'compound': 0.7845}, {'neg': 0.104, 'neu': 0.829, 'pos': 0.067, 'compound': -0.1779}, {'neg': 0.067, 'neu': 0.72, 'pos': 0.213, 'compound': 0.5994}, {'neg': 0.186, 'neu': 0.814, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.222, 'neu': 0.675, 'pos': 0.102, 'compound': -0.8519}, {'neg': 0.0, 'neu': 0.89, 'pos': 0.11, 'compound': 0.2732}, {'neg': 0.178, 'neu': 0.744, 'pos': 0.077, 'compound': -0.659}, {'neg': 0.0, 'neu': 0.796, 'pos': 0.204, 'compound': 0.875}, {'neg': 0.144, 'neu': 0.83, 'pos': 0.026, 'compound': -0.7184}, {'neg': 0.025, 'neu': 0.849, 'pos': 0.126, 'compound': 0.7096}, {'neg': 0.096, 'neu': 0.571, 'pos': 0.332, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.682, 'pos': 0.318, 'compound': 0.7181}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.4019}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.075, 'neu': 0.621, 'pos': 0.304, 'compound': 0.8779}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.76, 'pos': 0.24, 'compound': 0.7845}, {'neg': 0.092, 'neu': 0.658, 'pos': 0.25, 'compound': 0.6124}, {'neg': 0.156, 'neu': 0.844, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.624, 'pos': 0.376, 'compound': 0.9442}, {'neg': 0.241, 'neu': 0.759, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.694, 'pos': 0.306, 'compound': 0.6486}, {'neg': 0.184, 'neu': 0.816, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.902, 'pos': 0.098, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.826, 'pos': 0.174, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.877, 'pos': 0.123, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.904, 'pos': 0.096, 'compound': 0.6369}, {'neg': 0.244, 'neu': 0.756, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.171, 'neu': 0.569, 'pos': 0.261, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.843, 'pos': 0.157, 'compound': 0.3818}, {'neg': 0.025, 'neu': 0.579, 'pos': 0.396, 'compound': 0.9552}, {'neg': 0.114, 'neu': 0.718, 'pos': 0.168, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.875, 'pos': 0.125, 'compound': 0.4325}, {'neg': 0.138, 'neu': 0.599, 'pos': 0.263, 'compound': 0.2732}, {'neg': 0.175, 'neu': 0.744, 'pos': 0.081, 'compound': -0.4404}, {'neg': 0.05, 'neu': 0.82, 'pos': 0.13, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.783, 'pos': 0.217, 'compound': 0.7269}, {'neg': 0.055, 'neu': 0.796, 'pos': 0.149, 'compound': 0.5574}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.3182}, {'neg': 0.336, 'neu': 0.52, 'pos': 0.144, 'compound': -0.743}, {'neg': 0.237, 'neu': 0.676, 'pos': 0.087, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.622, 'pos': 0.378, 'compound': 0.7845}, {'neg': 0.078, 'neu': 0.665, 'pos': 0.257, 'compound': 0.7351}, {'neg': 0.267, 'neu': 0.596, 'pos': 0.137, 'compound': -0.785}, {'neg': 0.197, 'neu': 0.435, 'pos': 0.368, 'compound': 0.5994}, {'neg': 0.0, 'neu': 0.63, 'pos': 0.37, 'compound': 0.8402}, {'neg': 0.187, 'neu': 0.739, 'pos': 0.074, 'compound': -0.6124}, {'neg': 0.113, 'neu': 0.817, 'pos': 0.07, 'compound': -0.4939}, {'neg': 0.179, 'neu': 0.679, 'pos': 0.143, 'compound': -0.25}, {'neg': 0.198, 'neu': 0.802, 'pos': 0.0, 'compound': -0.6369}, {'neg': 0.214, 'neu': 0.472, 'pos': 0.314, 'compound': 0.296}, {'neg': 0.134, 'neu': 0.602, 'pos': 0.264, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.644, 'pos': 0.356, 'compound': 0.7351}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.6705}, {'neg': 0.428, 'neu': 0.572, 'pos': 0.0, 'compound': -0.9648}, {'neg': 0.328, 'neu': 0.579, 'pos': 0.093, 'compound': -0.7269}, {'neg': 0.084, 'neu': 0.467, 'pos': 0.449, 'compound': 0.8934}, {'neg': 0.0, 'neu': 0.636, 'pos': 0.364, 'compound': 0.765}, {'neg': 0.113, 'neu': 0.627, 'pos': 0.26, 'compound': 0.6249}, {'neg': 0.184, 'neu': 0.684, 'pos': 0.132, 'compound': -0.25}, {'neg': 0.066, 'neu': 0.73, 'pos': 0.204, 'compound': 0.6675}, {'neg': 0.068, 'neu': 0.495, 'pos': 0.436, 'compound': 0.9393}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.4939}, {'neg': 0.054, 'neu': 0.92, 'pos': 0.026, 'compound': -0.34}, {'neg': 0.138, 'neu': 0.791, 'pos': 0.071, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.798, 'pos': 0.202, 'compound': 0.5106}, {'neg': 0.088, 'neu': 0.326, 'pos': 0.586, 'compound': 0.8658}, {'neg': 0.324, 'neu': 0.676, 'pos': 0.0, 'compound': -0.5859}, {'neg': 0.323, 'neu': 0.478, 'pos': 0.199, 'compound': -0.6249}, {'neg': 0.0, 'neu': 0.49, 'pos': 0.51, 'compound': 0.9274}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.34, 'neu': 0.66, 'pos': 0.0, 'compound': -0.802}, {'neg': 0.0, 'neu': 0.818, 'pos': 0.182, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.722, 'pos': 0.278, 'compound': 0.8074}, {'neg': 0.086, 'neu': 0.557, 'pos': 0.357, 'compound': 0.9432}, {'neg': 0.105, 'neu': 0.542, 'pos': 0.354, 'compound': 0.7845}, {'neg': 0.302, 'neu': 0.647, 'pos': 0.05, 'compound': -0.8885}, {'neg': 0.265, 'neu': 0.735, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.088, 'neu': 0.912, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.184, 'neu': 0.816, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.045, 'neu': 0.793, 'pos': 0.163, 'compound': 0.7003}, {'neg': 0.115, 'neu': 0.885, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.661, 'pos': 0.339, 'compound': 0.9612}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.7717}, {'neg': 0.103, 'neu': 0.739, 'pos': 0.158, 'compound': 0.2732}, {'neg': 0.156, 'neu': 0.844, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.0, 'neu': 0.764, 'pos': 0.236, 'compound': 0.5719}, {'neg': 0.063, 'neu': 0.808, 'pos': 0.129, 'compound': 0.3818}, {'neg': 0.056, 'neu': 0.833, 'pos': 0.111, 'compound': 0.3818}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.122, 'neu': 0.709, 'pos': 0.169, 'compound': 0.0516}, {'neg': 0.336, 'neu': 0.623, 'pos': 0.04, 'compound': -0.8591}, {'neg': 0.269, 'neu': 0.605, 'pos': 0.126, 'compound': -0.4716}, {'neg': 0.051, 'neu': 0.791, 'pos': 0.158, 'compound': 0.3773}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.951, 'pos': 0.049, 'compound': 0.3182}, {'neg': 0.051, 'neu': 0.707, 'pos': 0.242, 'compound': 0.8316}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.048, 'neu': 0.617, 'pos': 0.335, 'compound': 0.9349}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.8465}, {'neg': 0.0, 'neu': 0.875, 'pos': 0.125, 'compound': 0.6124}, {'neg': 0.122, 'neu': 0.667, 'pos': 0.211, 'compound': 0.34}, {'neg': 0.124, 'neu': 0.588, 'pos': 0.288, 'compound': 0.9042}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.717, 'pos': 0.283, 'compound': 0.743}, {'neg': 0.185, 'neu': 0.645, 'pos': 0.169, 'compound': -0.1531}, {'neg': 0.171, 'neu': 0.781, 'pos': 0.048, 'compound': -0.7508}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.333, 'neu': 0.667, 'pos': 0.0, 'compound': -0.7579}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.24, 'neu': 0.601, 'pos': 0.159, 'compound': -0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.584, 'pos': 0.416, 'compound': 0.8658}, {'neg': 0.199, 'neu': 0.653, 'pos': 0.148, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.904, 'pos': 0.096, 'compound': 0.2023}, {'neg': 0.126, 'neu': 0.561, 'pos': 0.313, 'compound': 0.6124}, {'neg': 0.139, 'neu': 0.804, 'pos': 0.056, 'compound': -0.4767}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.4019}, {'neg': 0.197, 'neu': 0.749, 'pos': 0.054, 'compound': -0.765}, {'neg': 0.0, 'neu': 0.885, 'pos': 0.115, 'compound': 0.296}, {'neg': 0.179, 'neu': 0.494, 'pos': 0.327, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.837, 'pos': 0.163, 'compound': 0.6249}, {'neg': 0.138, 'neu': 0.663, 'pos': 0.199, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.351, 'pos': 0.649, 'compound': 0.969}, {'neg': 0.0, 'neu': 0.668, 'pos': 0.332, 'compound': 0.9545}, {'neg': 0.041, 'neu': 0.87, 'pos': 0.089, 'compound': 0.4939}, {'neg': 0.076, 'neu': 0.924, 'pos': 0.0, 'compound': -0.1027}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.232, 'neu': 0.579, 'pos': 0.19, 'compound': -0.2732}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.099, 'neu': 0.794, 'pos': 0.107, 'compound': 0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.803, 'pos': 0.197, 'compound': 0.6597}, {'neg': 0.133, 'neu': 0.798, 'pos': 0.069, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.554, 'pos': 0.446, 'compound': 0.9744}, {'neg': 0.262, 'neu': 0.738, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.203, 'neu': 0.622, 'pos': 0.174, 'compound': 0.0772}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.925, 'pos': 0.075, 'compound': 0.0772}, {'neg': 0.113, 'neu': 0.784, 'pos': 0.103, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.864, 'pos': 0.136, 'compound': 0.296}, {'neg': 0.165, 'neu': 0.774, 'pos': 0.061, 'compound': -0.4767}, {'neg': 0.213, 'neu': 0.716, 'pos': 0.072, 'compound': -0.8176}, {'neg': 0.125, 'neu': 0.741, 'pos': 0.134, 'compound': 0.0516}, {'neg': 0.22, 'neu': 0.78, 'pos': 0.0, 'compound': -0.5859}, {'neg': 0.179, 'neu': 0.538, 'pos': 0.282, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.927, 'pos': 0.073, 'compound': 0.1531}, {'neg': 0.142, 'neu': 0.664, 'pos': 0.194, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.824, 'pos': 0.176, 'compound': 0.25}, {'neg': 0.176, 'neu': 0.824, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.258, 'neu': 0.742, 'pos': 0.0, 'compound': -0.8689}, {'neg': 0.163, 'neu': 0.591, 'pos': 0.246, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.453, 'pos': 0.547, 'compound': 0.9876}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.105, 'neu': 0.744, 'pos': 0.151, 'compound': 0.34}, {'neg': 0.041, 'neu': 0.593, 'pos': 0.367, 'compound': 0.9393}, {'neg': 0.073, 'neu': 0.87, 'pos': 0.057, 'compound': -0.2023}, {'neg': 0.086, 'neu': 0.75, 'pos': 0.164, 'compound': 0.2023}, {'neg': 0.071, 'neu': 0.713, 'pos': 0.216, 'compound': 0.743}, {'neg': 0.121, 'neu': 0.879, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.051, 'neu': 0.791, 'pos': 0.158, 'compound': 0.4767}, {'neg': 0.026, 'neu': 0.732, 'pos': 0.241, 'compound': 0.9153}, {'neg': 0.046, 'neu': 0.905, 'pos': 0.048, 'compound': 0.0258}, {'neg': 0.362, 'neu': 0.638, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.066, 'neu': 0.835, 'pos': 0.098, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.581, 'pos': 0.419, 'compound': 0.9371}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.095, 'neu': 0.503, 'pos': 0.402, 'compound': 0.9477}, {'neg': 0.0, 'neu': 0.641, 'pos': 0.359, 'compound': 0.6808}, {'neg': 0.254, 'neu': 0.635, 'pos': 0.111, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.839, 'pos': 0.161, 'compound': 0.5859}, {'neg': 0.178, 'neu': 0.672, 'pos': 0.15, 'compound': -0.0258}, {'neg': 0.076, 'neu': 0.755, 'pos': 0.169, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.867, 'pos': 0.133, 'compound': 0.5106}, {'neg': 0.059, 'neu': 0.941, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.5423}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.123, 'neu': 0.766, 'pos': 0.111, 'compound': -0.0772}, {'neg': 0.114, 'neu': 0.816, 'pos': 0.069, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.973, 'pos': 0.027, 'compound': 0.0772}, {'neg': 0.118, 'neu': 0.725, 'pos': 0.156, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.487, 'pos': 0.513, 'compound': 0.9578}, {'neg': 0.082, 'neu': 0.624, 'pos': 0.294, 'compound': 0.9231}, {'neg': 0.064, 'neu': 0.859, 'pos': 0.076, 'compound': 0.128}, {'neg': 0.369, 'neu': 0.6, 'pos': 0.031, 'compound': -0.9337}, {'neg': 0.086, 'neu': 0.768, 'pos': 0.146, 'compound': 0.4767}, {'neg': 0.188, 'neu': 0.616, 'pos': 0.196, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.661, 'pos': 0.339, 'compound': 0.8072}, {'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.742, 'pos': 0.258, 'compound': 0.6808}, {'neg': 0.093, 'neu': 0.7, 'pos': 0.207, 'compound': 0.5994}, {'neg': 0.078, 'neu': 0.696, 'pos': 0.226, 'compound': 0.6249}, {'neg': 0.163, 'neu': 0.837, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.12, 'neu': 0.641, 'pos': 0.239, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.842, 'pos': 0.158, 'compound': 0.743}, {'neg': 0.134, 'neu': 0.649, 'pos': 0.216, 'compound': 0.2263}, {'neg': 0.11, 'neu': 0.554, 'pos': 0.336, 'compound': 0.7865}, {'neg': 0.075, 'neu': 0.755, 'pos': 0.17, 'compound': 0.4588}, {'neg': 0.168, 'neu': 0.696, 'pos': 0.136, 'compound': -0.2732}, {'neg': 0.161, 'neu': 0.724, 'pos': 0.115, 'compound': -0.4588}, {'neg': 0.0, 'neu': 0.659, 'pos': 0.341, 'compound': 0.7351}, {'neg': 0.226, 'neu': 0.774, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.362, 'neu': 0.557, 'pos': 0.08, 'compound': -0.7964}, {'neg': 0.0, 'neu': 0.724, 'pos': 0.276, 'compound': 0.8357}, {'neg': 0.144, 'neu': 0.668, 'pos': 0.188, 'compound': 0.2023}, {'neg': 0.078, 'neu': 0.718, 'pos': 0.204, 'compound': 0.5267}, {'neg': 0.257, 'neu': 0.743, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.171, 'neu': 0.829, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.214, 'neu': 0.55, 'pos': 0.236, 'compound': -0.0772}, {'neg': 0.06, 'neu': 0.815, 'pos': 0.124, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.3612}, {'neg': 0.067, 'neu': 0.67, 'pos': 0.263, 'compound': 0.4767}, {'neg': 0.118, 'neu': 0.702, 'pos': 0.18, 'compound': 0.1027}, {'neg': 0.202, 'neu': 0.798, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.0, 'neu': 0.738, 'pos': 0.262, 'compound': 0.7783}, {'neg': 0.076, 'neu': 0.64, 'pos': 0.284, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.658, 'pos': 0.342, 'compound': 0.8074}, {'neg': 0.071, 'neu': 0.929, 'pos': 0.0, 'compound': -0.3182}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.7845}, {'neg': 0.0, 'neu': 0.642, 'pos': 0.358, 'compound': 0.7717}, {'neg': 0.374, 'neu': 0.493, 'pos': 0.133, 'compound': -0.5994}, {'neg': 0.079, 'neu': 0.694, 'pos': 0.227, 'compound': 0.5719}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.339, 'neu': 0.661, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.944, 'pos': 0.056, 'compound': 0.0772}, {'neg': 0.088, 'neu': 0.912, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.526, 'pos': 0.474, 'compound': 0.9246}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.149, 'neu': 0.851, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.08, 'neu': 0.833, 'pos': 0.087, 'compound': 0.0516}, {'neg': 0.195, 'neu': 0.546, 'pos': 0.258, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.784, 'pos': 0.216, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.8934}, {'neg': 0.169, 'neu': 0.75, 'pos': 0.081, 'compound': -0.4215}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.842, 'pos': 0.158, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.507, 'pos': 0.493, 'compound': 0.8934}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.3818}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.686, 'pos': 0.314, 'compound': 0.8271}, {'neg': 0.203, 'neu': 0.687, 'pos': 0.11, 'compound': -0.4019}, {'neg': 0.161, 'neu': 0.674, 'pos': 0.166, 'compound': 0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.781, 'pos': 0.219, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.842, 'pos': 0.158, 'compound': 0.4588}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.06, 'neu': 0.795, 'pos': 0.145, 'compound': 0.5267}, {'neg': 0.148, 'neu': 0.793, 'pos': 0.059, 'compound': -0.5267}, {'neg': 0.0, 'neu': 0.783, 'pos': 0.217, 'compound': 0.6124}, {'neg': 0.267, 'neu': 0.711, 'pos': 0.022, 'compound': -0.9081}, {'neg': 0.0, 'neu': 0.888, 'pos': 0.112, 'compound': 0.2263}, {'neg': 0.248, 'neu': 0.752, 'pos': 0.0, 'compound': -0.836}, {'neg': 0.0, 'neu': 0.793, 'pos': 0.207, 'compound': 0.4019}, {'neg': 0.13, 'neu': 0.769, 'pos': 0.101, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.791, 'pos': 0.209, 'compound': 0.6486}, {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.6705}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.094, 'neu': 0.728, 'pos': 0.178, 'compound': 0.4767}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.121, 'neu': 0.879, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.144, 'neu': 0.393, 'pos': 0.463, 'compound': 0.9633}, {'neg': 0.221, 'neu': 0.779, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.29, 'neu': 0.71, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.194, 'neu': 0.439, 'pos': 0.367, 'compound': 0.6705}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.1, 'neu': 0.761, 'pos': 0.139, 'compound': 0.0516}, {'neg': 0.089, 'neu': 0.662, 'pos': 0.248, 'compound': 0.5859}, {'neg': 0.124, 'neu': 0.691, 'pos': 0.184, 'compound': 0.0772}, {'neg': 0.099, 'neu': 0.787, 'pos': 0.114, 'compound': 0.101}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.3612}, {'neg': 0.024, 'neu': 0.55, 'pos': 0.426, 'compound': 0.9766}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.179, 'neu': 0.727, 'pos': 0.094, 'compound': -0.3716}, {'neg': 0.124, 'neu': 0.596, 'pos': 0.28, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.812, 'pos': 0.188, 'compound': 0.1779}, {'neg': 0.126, 'neu': 0.682, 'pos': 0.192, 'compound': 0.3818}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.168, 'neu': 0.78, 'pos': 0.052, 'compound': -0.7783}, {'neg': 0.0, 'neu': 0.696, 'pos': 0.304, 'compound': 0.9246}, {'neg': 0.184, 'neu': 0.654, 'pos': 0.162, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.719, 'pos': 0.281, 'compound': 0.8885}, {'neg': 0.0, 'neu': 0.625, 'pos': 0.375, 'compound': 0.8625}, {'neg': 0.071, 'neu': 0.81, 'pos': 0.119, 'compound': 0.34}, {'neg': 0.252, 'neu': 0.748, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.113, 'neu': 0.806, 'pos': 0.081, 'compound': -0.25}, {'neg': 0.157, 'neu': 0.677, 'pos': 0.166, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.707, 'pos': 0.293, 'compound': 0.6597}, {'neg': 0.085, 'neu': 0.823, 'pos': 0.092, 'compound': 0.0516}, {'neg': 0.093, 'neu': 0.761, 'pos': 0.145, 'compound': 0.3612}, {'neg': 0.035, 'neu': 0.508, 'pos': 0.457, 'compound': 0.9779}, {'neg': 0.0, 'neu': 0.681, 'pos': 0.319, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.3612}, {'neg': 0.26, 'neu': 0.657, 'pos': 0.083, 'compound': -0.7906}, {'neg': 0.0, 'neu': 0.67, 'pos': 0.33, 'compound': 0.9595}, {'neg': 0.239, 'neu': 0.532, 'pos': 0.228, 'compound': 0.128}, {'neg': 0.046, 'neu': 0.705, 'pos': 0.25, 'compound': 0.8658}, {'neg': 0.065, 'neu': 0.426, 'pos': 0.509, 'compound': 0.9403}, {'neg': 0.08, 'neu': 0.657, 'pos': 0.263, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.507, 'pos': 0.493, 'compound': 0.8658}, {'neg': 0.054, 'neu': 0.706, 'pos': 0.24, 'compound': 0.765}, {'neg': 0.107, 'neu': 0.775, 'pos': 0.118, 'compound': 0.0772}, {'neg': 0.058, 'neu': 0.796, 'pos': 0.146, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.0772}, {'neg': 0.144, 'neu': 0.697, 'pos': 0.159, 'compound': 0.0772}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.956, 'pos': 0.044, 'compound': 0.0772}, {'neg': 0.203, 'neu': 0.61, 'pos': 0.187, 'compound': -0.1048}, {'neg': 0.293, 'neu': 0.707, 'pos': 0.0, 'compound': -0.8074}, {'neg': 0.0, 'neu': 0.927, 'pos': 0.073, 'compound': 0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.142, 'neu': 0.769, 'pos': 0.089, 'compound': -0.3182}, {'neg': 0.061, 'neu': 0.691, 'pos': 0.249, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.881, 'pos': 0.119, 'compound': 0.3182}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.108, 'neu': 0.8, 'pos': 0.092, 'compound': -0.1027}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.702, 'pos': 0.298, 'compound': 0.6249}, {'neg': 0.084, 'neu': 0.787, 'pos': 0.129, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.4939}, {'neg': 0.092, 'neu': 0.844, 'pos': 0.063, 'compound': -0.4767}, {'neg': 0.24, 'neu': 0.76, 'pos': 0.0, 'compound': -0.7845}, {'neg': 0.092, 'neu': 0.854, 'pos': 0.054, 'compound': -0.2023}, {'neg': 0.325, 'neu': 0.607, 'pos': 0.068, 'compound': -0.9371}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.692, 'pos': 0.308, 'compound': 0.9337}, {'neg': 0.066, 'neu': 0.783, 'pos': 0.151, 'compound': 0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.116, 'neu': 0.82, 'pos': 0.064, 'compound': -0.3182}, {'neg': 0.0, 'neu': 0.757, 'pos': 0.243, 'compound': 0.6249}, {'neg': 0.085, 'neu': 0.702, 'pos': 0.213, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.675, 'pos': 0.325, 'compound': 0.9423}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.821, 'pos': 0.179, 'compound': 0.6124}, {'neg': 0.0, 'neu': 0.694, 'pos': 0.306, 'compound': 0.7783}, {'neg': 0.109, 'neu': 0.697, 'pos': 0.194, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.422, 'pos': 0.578, 'compound': 0.9595}, {'neg': 0.0, 'neu': 0.722, 'pos': 0.278, 'compound': 0.7717}, {'neg': 0.139, 'neu': 0.722, 'pos': 0.139, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.906, 'pos': 0.094, 'compound': 0.4019}, {'neg': 0.051, 'neu': 0.902, 'pos': 0.047, 'compound': -0.0516}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.4939}, {'neg': 0.143, 'neu': 0.688, 'pos': 0.169, 'compound': 0.128}, {'neg': 0.031, 'neu': 0.814, 'pos': 0.156, 'compound': 0.7845}, {'neg': 0.145, 'neu': 0.725, 'pos': 0.13, 'compound': -0.0754}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.0772}, {'neg': 0.302, 'neu': 0.698, 'pos': 0.0, 'compound': -0.8689}, {'neg': 0.0, 'neu': 0.954, 'pos': 0.046, 'compound': 0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.182, 'neu': 0.606, 'pos': 0.212, 'compound': 0.2023}, {'neg': 0.144, 'neu': 0.731, 'pos': 0.125, 'compound': -0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.148, 'neu': 0.816, 'pos': 0.036, 'compound': -0.7506}, {'neg': 0.0, 'neu': 0.577, 'pos': 0.423, 'compound': 0.9217}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.8519}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.308, 'neu': 0.692, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.108, 'neu': 0.769, 'pos': 0.123, 'compound': -0.0516}, {'neg': 0.103, 'neu': 0.897, 'pos': 0.0, 'compound': -0.1531}, {'neg': 0.0, 'neu': 0.777, 'pos': 0.223, 'compound': 0.6319}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.893, 'pos': 0.107, 'compound': 0.34}, {'neg': 0.158, 'neu': 0.756, 'pos': 0.086, 'compound': -0.4939}, {'neg': 0.155, 'neu': 0.845, 'pos': 0.0, 'compound': -0.5267}, {'neg': 0.034, 'neu': 0.789, 'pos': 0.178, 'compound': 0.8225}, {'neg': 0.052, 'neu': 0.948, 'pos': 0.0, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.837, 'pos': 0.163, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.7579}, {'neg': 0.262, 'neu': 0.603, 'pos': 0.135, 'compound': -0.875}, {'neg': 0.0, 'neu': 0.827, 'pos': 0.173, 'compound': 0.5859}, {'neg': 0.323, 'neu': 0.677, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.0, 'neu': 0.797, 'pos': 0.203, 'compound': 0.8658}, {'neg': 0.367, 'neu': 0.633, 'pos': 0.0, 'compound': -0.9349}, {'neg': 0.143, 'neu': 0.742, 'pos': 0.115, 'compound': -0.2598}, {'neg': 0.0, 'neu': 0.75, 'pos': 0.25, 'compound': 0.7906}, {'neg': 0.156, 'neu': 0.844, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.246, 'neu': 0.754, 'pos': 0.0, 'compound': -0.8176}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.904, 'pos': 0.096, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.3089}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.4019}, {'neg': 0.175, 'neu': 0.698, 'pos': 0.127, 'compound': -0.5719}, {'neg': 0.053, 'neu': 0.682, 'pos': 0.265, 'compound': 0.872}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.748, 'pos': 0.252, 'compound': 0.7506}, {'neg': 0.118, 'neu': 0.616, 'pos': 0.265, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.571, 'pos': 0.429, 'compound': 0.926}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.66, 'pos': 0.34, 'compound': 0.959}, {'neg': 0.123, 'neu': 0.682, 'pos': 0.195, 'compound': 0.1531}, {'neg': 0.0, 'neu': 0.571, 'pos': 0.429, 'compound': 0.8591}, {'neg': 0.175, 'neu': 0.571, 'pos': 0.254, 'compound': 0.296}, {'neg': 0.129, 'neu': 0.59, 'pos': 0.281, 'compound': 0.7506}, {'neg': 0.121, 'neu': 0.628, 'pos': 0.251, 'compound': 0.4404}, {'neg': 0.081, 'neu': 0.876, 'pos': 0.044, 'compound': -0.3818}, {'neg': 0.0, 'neu': 0.526, 'pos': 0.474, 'compound': 0.91}, {'neg': 0.126, 'neu': 0.843, 'pos': 0.03, 'compound': -0.6249}, {'neg': 0.192, 'neu': 0.687, 'pos': 0.121, 'compound': -0.6908}, {'neg': 0.223, 'neu': 0.777, 'pos': 0.0, 'compound': -0.6808}, {'neg': 0.085, 'neu': 0.915, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.103, 'neu': 0.897, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.092, 'neu': 0.628, 'pos': 0.28, 'compound': 0.5423}, {'neg': 0.175, 'neu': 0.708, 'pos': 0.118, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.733, 'pos': 0.267, 'compound': 0.9217}, {'neg': 0.0, 'neu': 0.773, 'pos': 0.227, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.681, 'pos': 0.319, 'compound': 0.8834}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.345, 'neu': 0.655, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.802, 'pos': 0.198, 'compound': 0.8625}, {'neg': 0.0, 'neu': 0.712, 'pos': 0.288, 'compound': 0.8519}, {'neg': 0.059, 'neu': 0.807, 'pos': 0.134, 'compound': 0.5423}, {'neg': 0.171, 'neu': 0.658, 'pos': 0.171, 'compound': 0.0}, {'neg': 0.319, 'neu': 0.504, 'pos': 0.176, 'compound': -0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.409, 'neu': 0.591, 'pos': 0.0, 'compound': -0.765}, {'neg': 0.0, 'neu': 0.753, 'pos': 0.247, 'compound': 0.9022}, {'neg': 0.053, 'neu': 0.65, 'pos': 0.297, 'compound': 0.7783}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.215, 'neu': 0.598, 'pos': 0.187, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.629, 'pos': 0.371, 'compound': 0.8481}, {'neg': 0.035, 'neu': 0.844, 'pos': 0.121, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.745, 'pos': 0.255, 'compound': 0.8625}, {'neg': 0.0, 'neu': 0.708, 'pos': 0.292, 'compound': 0.765}, {'neg': 0.135, 'neu': 0.675, 'pos': 0.191, 'compound': 0.5106}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.946, 'pos': 0.054, 'compound': 0.0516}, {'neg': 0.11, 'neu': 0.686, 'pos': 0.204, 'compound': 0.5994}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.11, 'neu': 0.776, 'pos': 0.114, 'compound': 0.0258}, {'neg': 0.09, 'neu': 0.838, 'pos': 0.072, 'compound': -0.1531}, {'neg': 0.455, 'neu': 0.545, 'pos': 0.0, 'compound': -0.8402}, {'neg': 0.08, 'neu': 0.803, 'pos': 0.117, 'compound': 0.25}, {'neg': 0.1, 'neu': 0.573, 'pos': 0.326, 'compound': 0.743}, {'neg': 0.0, 'neu': 0.652, 'pos': 0.348, 'compound': 0.7506}, {'neg': 0.228, 'neu': 0.617, 'pos': 0.155, 'compound': -0.5719}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.218, 'neu': 0.782, 'pos': 0.0, 'compound': -0.7783}, {'neg': 0.384, 'neu': 0.616, 'pos': 0.0, 'compound': -0.8625}, {'neg': 0.191, 'neu': 0.574, 'pos': 0.236, 'compound': 0.296}, {'neg': 0.193, 'neu': 0.807, 'pos': 0.0, 'compound': -0.797}, {'neg': 0.0, 'neu': 0.673, 'pos': 0.327, 'compound': 0.8074}, {'neg': 0.0, 'neu': 0.751, 'pos': 0.249, 'compound': 0.8625}, {'neg': 0.0, 'neu': 0.806, 'pos': 0.194, 'compound': 0.34}, {'neg': 0.277, 'neu': 0.723, 'pos': 0.0, 'compound': -0.5574}, {'neg': 0.152, 'neu': 0.738, 'pos': 0.111, 'compound': -0.25}, {'neg': 0.407, 'neu': 0.593, 'pos': 0.0, 'compound': -0.9136}, {'neg': 0.0, 'neu': 0.69, 'pos': 0.31, 'compound': 0.8402}, {'neg': 0.094, 'neu': 0.815, 'pos': 0.09, 'compound': -0.0258}, {'neg': 0.154, 'neu': 0.638, 'pos': 0.207, 'compound': 0.25}, {'neg': 0.145, 'neu': 0.645, 'pos': 0.21, 'compound': 0.296}, {'neg': 0.109, 'neu': 0.486, 'pos': 0.405, 'compound': 0.743}, {'neg': 0.174, 'neu': 0.764, 'pos': 0.062, 'compound': -0.4939}, {'neg': 0.182, 'neu': 0.571, 'pos': 0.246, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.844, 'pos': 0.156, 'compound': 0.5719}, {'neg': 0.123, 'neu': 0.711, 'pos': 0.166, 'compound': 0.2732}, {'neg': 0.148, 'neu': 0.492, 'pos': 0.361, 'compound': 0.5994}, {'neg': 0.0, 'neu': 0.443, 'pos': 0.557, 'compound': 0.8834}, {'neg': 0.156, 'neu': 0.699, 'pos': 0.145, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.8, 'pos': 0.2, 'compound': 0.3612}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.701, 'pos': 0.299, 'compound': 0.7506}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.162, 'neu': 0.598, 'pos': 0.239, 'compound': 0.2023}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.791, 'pos': 0.209, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.82, 'pos': 0.18, 'compound': 0.5719}, {'neg': 0.321, 'neu': 0.679, 'pos': 0.0, 'compound': -0.6369}, {'neg': 0.08, 'neu': 0.826, 'pos': 0.094, 'compound': 0.128}, {'neg': 0.145, 'neu': 0.81, 'pos': 0.045, 'compound': -0.6369}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.7003}, {'neg': 0.238, 'neu': 0.762, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.093, 'neu': 0.739, 'pos': 0.167, 'compound': 0.2263}, {'neg': 0.274, 'neu': 0.671, 'pos': 0.055, 'compound': -0.802}, {'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'compound': 0.7717}, {'neg': 0.163, 'neu': 0.674, 'pos': 0.163, 'compound': 0.0}, {'neg': 0.066, 'neu': 0.885, 'pos': 0.049, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.73, 'pos': 0.27, 'compound': 0.5859}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.217, 'neu': 0.503, 'pos': 0.28, 'compound': 0.5267}, {'neg': 0.15, 'neu': 0.531, 'pos': 0.319, 'compound': 0.6908}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.161, 'neu': 0.714, 'pos': 0.125, 'compound': -0.1531}, {'neg': 0.09, 'neu': 0.735, 'pos': 0.176, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.804, 'pos': 0.196, 'compound': 0.5267}, {'neg': 0.151, 'neu': 0.63, 'pos': 0.219, 'compound': 0.5574}, {'neg': 0.108, 'neu': 0.723, 'pos': 0.169, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.81, 'pos': 0.19, 'compound': 0.5719}, {'neg': 0.075, 'neu': 0.775, 'pos': 0.15, 'compound': -0.0258}, {'neg': 0.091, 'neu': 0.574, 'pos': 0.334, 'compound': 0.802}, {'neg': 0.198, 'neu': 0.473, 'pos': 0.328, 'compound': 0.5267}, {'neg': 0.225, 'neu': 0.775, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.368, 'neu': 0.632, 'pos': 0.0, 'compound': -0.7506}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.115, 'neu': 0.769, 'pos': 0.115, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.223, 'neu': 0.777, 'pos': 0.0, 'compound': -0.5574}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.075, 'neu': 0.796, 'pos': 0.128, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.709, 'pos': 0.291, 'compound': 0.6249}, {'neg': 0.0, 'neu': 0.649, 'pos': 0.351, 'compound': 0.6597}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.683, 'pos': 0.317, 'compound': 0.6249}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.085, 'neu': 0.57, 'pos': 0.345, 'compound': 0.802}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.34}, {'neg': 0.257, 'neu': 0.619, 'pos': 0.124, 'compound': -0.4215}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.325, 'neu': 0.675, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.161, 'neu': 0.759, 'pos': 0.079, 'compound': -0.3818}, {'neg': 0.28, 'neu': 0.72, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.263, 'neu': 0.737, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.169, 'neu': 0.706, 'pos': 0.125, 'compound': -0.2732}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.123, 'neu': 0.548, 'pos': 0.329, 'compound': 0.5423}, {'neg': 0.094, 'neu': 0.842, 'pos': 0.064, 'compound': -0.1531}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.166, 'neu': 0.613, 'pos': 0.221, 'compound': -0.0258}, {'neg': 0.396, 'neu': 0.604, 'pos': 0.0, 'compound': -0.7096}, {'neg': 0.265, 'neu': 0.616, 'pos': 0.118, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.562, 'pos': 0.438, 'compound': 0.9393}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.321, 'neu': 0.579, 'pos': 0.101, 'compound': -0.7133}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.873, 'pos': 0.127, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.459, 'pos': 0.541, 'compound': 0.8957}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.156, 'neu': 0.446, 'pos': 0.398, 'compound': 0.8176}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.35, 'neu': 0.65, 'pos': 0.0, 'compound': -0.7906}, {'neg': 0.326, 'neu': 0.674, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.098, 'neu': 0.902, 'pos': 0.0, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.4588}, {'neg': 0.159, 'neu': 0.767, 'pos': 0.074, 'compound': -0.4767}, {'neg': 0.368, 'neu': 0.378, 'pos': 0.254, 'compound': -0.2732}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.63, 'pos': 0.37, 'compound': 0.5719}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.808, 'pos': 0.192, 'compound': 0.4215}, {'neg': 0.163, 'neu': 0.714, 'pos': 0.122, 'compound': -0.1027}, {'neg': 0.16, 'neu': 0.84, 'pos': 0.0, 'compound': -0.8126}, {'neg': 0.065, 'neu': 0.751, 'pos': 0.185, 'compound': 0.4728}, {'neg': 0.252, 'neu': 0.748, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.261, 'neu': 0.739, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.068, 'neu': 0.585, 'pos': 0.348, 'compound': 0.7964}, {'neg': 0.0, 'neu': 0.706, 'pos': 0.294, 'compound': 0.3612}, {'neg': 0.209, 'neu': 0.654, 'pos': 0.137, 'compound': -0.3182}, {'neg': 0.197, 'neu': 0.803, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.642, 'pos': 0.358, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.576, 'pos': 0.424, 'compound': 0.7096}, {'neg': 0.29, 'neu': 0.71, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.839, 'pos': 0.161, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.818, 'pos': 0.182, 'compound': 0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.216, 'neu': 0.784, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.4019}, {'neg': 0.094, 'neu': 0.383, 'pos': 0.523, 'compound': 0.9062}, {'neg': 0.0, 'neu': 0.835, 'pos': 0.165, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.769, 'pos': 0.231, 'compound': 0.34}, {'neg': 0.225, 'neu': 0.775, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.719, 'pos': 0.281, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.704, 'pos': 0.296, 'compound': 0.7096}, {'neg': 0.329, 'neu': 0.671, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.586, 'pos': 0.414, 'compound': 0.802}, {'neg': 0.017, 'neu': 0.405, 'pos': 0.579, 'compound': 0.9924}, {'neg': 0.109, 'neu': 0.437, 'pos': 0.454, 'compound': 0.743}, {'neg': 0.123, 'neu': 0.617, 'pos': 0.26, 'compound': 0.6369}, {'neg': 0.155, 'neu': 0.588, 'pos': 0.257, 'compound': 0.2263}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.7579}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.104, 'neu': 0.896, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.929, 'pos': 0.071, 'compound': 0.3818}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.184, 'neu': 0.816, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.898, 'pos': 0.102, 'compound': 0.3818}, {'neg': 0.05, 'neu': 0.532, 'pos': 0.418, 'compound': 0.886}, {'neg': 0.0, 'neu': 0.904, 'pos': 0.096, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.813, 'pos': 0.187, 'compound': 0.6486}, {'neg': 0.236, 'neu': 0.676, 'pos': 0.088, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.811, 'pos': 0.189, 'compound': 0.4215}, {'neg': 0.0, 'neu': 0.699, 'pos': 0.301, 'compound': 0.8957}, {'neg': 0.0, 'neu': 0.724, 'pos': 0.276, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.4019}, {'neg': 0.287, 'neu': 0.455, 'pos': 0.258, 'compound': -0.296}, {'neg': 0.468, 'neu': 0.441, 'pos': 0.092, 'compound': -0.8779}, {'neg': 0.239, 'neu': 0.704, 'pos': 0.057, 'compound': -0.8625}, {'neg': 0.0, 'neu': 0.386, 'pos': 0.614, 'compound': 0.9764}, {'neg': 0.0, 'neu': 0.345, 'pos': 0.655, 'compound': 0.9349}, {'neg': 0.147, 'neu': 0.609, 'pos': 0.244, 'compound': 0.2263}, {'neg': 0.177, 'neu': 0.823, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.833, 'pos': 0.167, 'compound': 0.4215}, {'neg': 0.304, 'neu': 0.471, 'pos': 0.226, 'compound': -0.5106}, {'neg': 0.153, 'neu': 0.682, 'pos': 0.165, 'compound': 0.0516}, {'neg': 0.087, 'neu': 0.532, 'pos': 0.381, 'compound': 0.8885}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.177, 'neu': 0.661, 'pos': 0.162, 'compound': -0.128}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.766, 'pos': 0.234, 'compound': 0.7506}, {'neg': 0.074, 'neu': 0.546, 'pos': 0.38, 'compound': 0.9274}, {'neg': 0.0, 'neu': 0.86, 'pos': 0.14, 'compound': 0.1531}, {'neg': 0.432, 'neu': 0.447, 'pos': 0.121, 'compound': -0.8669}, {'neg': 0.113, 'neu': 0.631, 'pos': 0.257, 'compound': 0.4939}, {'neg': 0.269, 'neu': 0.465, 'pos': 0.266, 'compound': -0.0258}, {'neg': 0.04, 'neu': 0.87, 'pos': 0.09, 'compound': 0.3612}, {'neg': 0.142, 'neu': 0.685, 'pos': 0.173, 'compound': 0.2263}, {'neg': 0.059, 'neu': 0.901, 'pos': 0.04, 'compound': -0.1531}, {'neg': 0.164, 'neu': 0.727, 'pos': 0.109, 'compound': -0.4588}, {'neg': 0.134, 'neu': 0.866, 'pos': 0.0, 'compound': -0.1779}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.054, 'neu': 0.569, 'pos': 0.378, 'compound': 0.8658}, {'neg': 0.122, 'neu': 0.827, 'pos': 0.051, 'compound': -0.4215}, {'neg': 0.094, 'neu': 0.793, 'pos': 0.113, 'compound': 0.1134}, {'neg': 0.0, 'neu': 0.873, 'pos': 0.127, 'compound': 0.4939}, {'neg': 0.068, 'neu': 0.885, 'pos': 0.047, 'compound': -0.2732}, {'neg': 0.2, 'neu': 0.699, 'pos': 0.101, 'compound': -0.552}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.1, 'neu': 0.682, 'pos': 0.217, 'compound': 0.5423}, {'neg': 0.335, 'neu': 0.558, 'pos': 0.107, 'compound': -0.891}, {'neg': 0.105, 'neu': 0.727, 'pos': 0.167, 'compound': 0.1779}, {'neg': 0.115, 'neu': 0.769, 'pos': 0.115, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.749, 'pos': 0.251, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.71, 'pos': 0.29, 'compound': 0.5423}, {'neg': 0.153, 'neu': 0.682, 'pos': 0.165, 'compound': 0.0516}, {'neg': 0.367, 'neu': 0.633, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.0, 'neu': 0.714, 'pos': 0.286, 'compound': 0.8689}, {'neg': 0.078, 'neu': 0.628, 'pos': 0.294, 'compound': 0.7906}, {'neg': 0.131, 'neu': 0.534, 'pos': 0.335, 'compound': 0.6369}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.882, 'pos': 0.118, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.3612}, {'neg': 0.086, 'neu': 0.59, 'pos': 0.324, 'compound': 0.7964}, {'neg': 0.0, 'neu': 0.806, 'pos': 0.194, 'compound': 0.34}, {'neg': 0.109, 'neu': 0.891, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.887, 'pos': 0.113, 'compound': 0.3182}, {'neg': 0.104, 'neu': 0.566, 'pos': 0.33, 'compound': 0.875}, {'neg': 0.277, 'neu': 0.563, 'pos': 0.16, 'compound': -0.5719}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.6369}, {'neg': 0.137, 'neu': 0.521, 'pos': 0.341, 'compound': 0.6486}, {'neg': 0.235, 'neu': 0.561, 'pos': 0.204, 'compound': -0.296}, {'neg': 0.0, 'neu': 0.864, 'pos': 0.136, 'compound': 0.6369}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.143, 'neu': 0.794, 'pos': 0.063, 'compound': -0.3612}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.309, 'neu': 0.691, 'pos': 0.0, 'compound': -0.9595}, {'neg': 0.121, 'neu': 0.638, 'pos': 0.241, 'compound': 0.34}, {'neg': 0.163, 'neu': 0.663, 'pos': 0.175, 'compound': 0.0516}, {'neg': 0.178, 'neu': 0.736, 'pos': 0.085, 'compound': -0.5267}, {'neg': 0.26, 'neu': 0.705, 'pos': 0.035, 'compound': -0.8519}, {'neg': 0.0, 'neu': 0.644, 'pos': 0.356, 'compound': 0.8176}, {'neg': 0.163, 'neu': 0.663, 'pos': 0.175, 'compound': 0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.338, 'neu': 0.542, 'pos': 0.121, 'compound': -0.6369}, {'neg': 0.076, 'neu': 0.824, 'pos': 0.1, 'compound': 0.1838}, {'neg': 0.269, 'neu': 0.665, 'pos': 0.066, 'compound': -0.765}, {'neg': 0.069, 'neu': 0.672, 'pos': 0.259, 'compound': 0.8225}, {'neg': 0.169, 'neu': 0.5, 'pos': 0.331, 'compound': 0.3818}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.104, 'neu': 0.777, 'pos': 0.119, 'compound': 0.0772}, {'neg': 0.171, 'neu': 0.531, 'pos': 0.298, 'compound': 0.6249}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.05, 'neu': 0.612, 'pos': 0.338, 'compound': 0.8402}, {'neg': 0.0, 'neu': 0.851, 'pos': 0.149, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.599, 'pos': 0.401, 'compound': 0.7717}, {'neg': 0.0, 'neu': 0.894, 'pos': 0.106, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.917, 'pos': 0.083, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.856, 'pos': 0.144, 'compound': 0.4939}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.225, 'neu': 0.586, 'pos': 0.189, 'compound': 0.0516}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.085, 'neu': 0.788, 'pos': 0.127, 'compound': 0.1779}, {'neg': 0.0, 'neu': 0.541, 'pos': 0.459, 'compound': 0.9337}, {'neg': 0.293, 'neu': 0.707, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.857, 'pos': 0.143, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.776, 'pos': 0.224, 'compound': 0.6705}, {'neg': 0.145, 'neu': 0.855, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.147, 'neu': 0.853, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.112, 'neu': 0.582, 'pos': 0.306, 'compound': 0.8519}, {'neg': 0.152, 'neu': 0.824, 'pos': 0.024, 'compound': -0.7783}, {'neg': 0.241, 'neu': 0.759, 'pos': 0.0, 'compound': -0.743}, {'neg': 0.396, 'neu': 0.408, 'pos': 0.196, 'compound': -0.7096}, {'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 0.691, 'pos': 0.309, 'compound': 0.765}, {'neg': 0.0, 'neu': 0.936, 'pos': 0.064, 'compound': 0.0772}, {'neg': 0.367, 'neu': 0.633, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.7003}, {'neg': 0.144, 'neu': 0.697, 'pos': 0.159, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.87, 'pos': 0.13, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.717, 'pos': 0.283, 'compound': 0.7269}, {'neg': 0.309, 'neu': 0.691, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.144, 'neu': 0.856, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.077, 'neu': 0.664, 'pos': 0.259, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.4019}, {'neg': 0.319, 'neu': 0.565, 'pos': 0.117, 'compound': -0.6124}, {'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.0, 'neu': 0.701, 'pos': 0.299, 'compound': 0.7964}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.092, 'neu': 0.526, 'pos': 0.382, 'compound': 0.8316}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.5859}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.844, 'pos': 0.156, 'compound': 0.1521}, {'neg': 0.134, 'neu': 0.866, 'pos': 0.0, 'compound': -0.5719}, {'neg': 0.149, 'neu': 0.497, 'pos': 0.354, 'compound': 0.5719}, {'neg': 0.138, 'neu': 0.663, 'pos': 0.199, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.49, 'pos': 0.51, 'compound': 0.9118}, {'neg': 0.0, 'neu': 0.599, 'pos': 0.401, 'compound': 0.8555}, {'neg': 0.173, 'neu': 0.505, 'pos': 0.322, 'compound': 0.6369}, {'neg': 0.214, 'neu': 0.786, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.13, 'neu': 0.87, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.549, 'pos': 0.451, 'compound': 0.8481}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.047, 'neu': 0.827, 'pos': 0.126, 'compound': 0.4588}, {'neg': 0.2, 'neu': 0.682, 'pos': 0.118, 'compound': -0.4215}, {'neg': 0.195, 'neu': 0.712, 'pos': 0.094, 'compound': -0.4019}, {'neg': 0.209, 'neu': 0.596, 'pos': 0.196, 'compound': -0.0772}, {'neg': 0.109, 'neu': 0.506, 'pos': 0.385, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.462, 'pos': 0.538, 'compound': 0.8591}, {'neg': 0.098, 'neu': 0.608, 'pos': 0.294, 'compound': 0.7003}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.205, 'neu': 0.541, 'pos': 0.255, 'compound': 0.3182}, {'neg': 0.155, 'neu': 0.845, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.113, 'neu': 0.546, 'pos': 0.34, 'compound': 0.7506}, {'neg': 0.0, 'neu': 0.743, 'pos': 0.257, 'compound': 0.4215}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.135, 'neu': 0.8, 'pos': 0.065, 'compound': -0.34}, {'neg': 0.138, 'neu': 0.714, 'pos': 0.148, 'compound': 0.0516}, {'neg': 0.114, 'neu': 0.886, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.67, 'pos': 0.33, 'compound': 0.7506}, {'neg': 0.241, 'neu': 0.759, 'pos': 0.0, 'compound': -0.6908}, {'neg': 0.0, 'neu': 0.864, 'pos': 0.136, 'compound': 0.5859}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.257, 'neu': 0.622, 'pos': 0.12, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.8, 'pos': 0.2, 'compound': 0.7579}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.336, 'neu': 0.664, 'pos': 0.0, 'compound': -0.7964}, {'neg': 0.0, 'neu': 0.838, 'pos': 0.162, 'compound': 0.4404}, {'neg': 0.0, 'neu': 0.686, 'pos': 0.314, 'compound': 0.4939}, {'neg': 0.111, 'neu': 0.779, 'pos': 0.111, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.803, 'pos': 0.197, 'compound': 0.6597}, {'neg': 0.0, 'neu': 0.764, 'pos': 0.236, 'compound': 0.3384}, {'neg': 0.173, 'neu': 0.783, 'pos': 0.044, 'compound': -0.7506}, {'neg': 0.197, 'neu': 0.803, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.146, 'neu': 0.854, 'pos': 0.0, 'compound': -0.3818}, {'neg': 0.148, 'neu': 0.794, 'pos': 0.058, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.728, 'pos': 0.272, 'compound': 0.7269}, {'neg': 0.155, 'neu': 0.536, 'pos': 0.309, 'compound': 0.666}, {'neg': 0.0, 'neu': 0.939, 'pos': 0.061, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.887, 'pos': 0.113, 'compound': 0.4939}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.206, 'neu': 0.643, 'pos': 0.15, 'compound': -0.4767}, {'neg': 0.039, 'neu': 0.882, 'pos': 0.079, 'compound': 0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.199, 'neu': 0.753, 'pos': 0.048, 'compound': -0.765}, {'neg': 0.241, 'neu': 0.523, 'pos': 0.236, 'compound': -0.0356}, {'neg': 0.138, 'neu': 0.623, 'pos': 0.239, 'compound': 0.4404}, {'neg': 0.163, 'neu': 0.837, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.779, 'pos': 0.221, 'compound': 0.5267}, {'neg': 0.0, 'neu': 0.836, 'pos': 0.164, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.476, 'pos': 0.524, 'compound': 0.9371}, {'neg': 0.395, 'neu': 0.605, 'pos': 0.0, 'compound': -0.9081}, {'neg': 0.07, 'neu': 0.857, 'pos': 0.073, 'compound': 0.0258}, {'neg': 0.0, 'neu': 0.747, 'pos': 0.253, 'compound': 0.7269}, {'neg': 0.0, 'neu': 0.828, 'pos': 0.172, 'compound': 0.5859}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.113, 'neu': 0.669, 'pos': 0.218, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.962, 'pos': 0.038, 'compound': 0.0258}, {'neg': 0.146, 'neu': 0.649, 'pos': 0.205, 'compound': 0.0258}, {'neg': 0.108, 'neu': 0.573, 'pos': 0.319, 'compound': 0.802}, {'neg': 0.0, 'neu': 0.826, 'pos': 0.174, 'compound': 0.4588}, {'neg': 0.189, 'neu': 0.811, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.719, 'pos': 0.281, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.818, 'pos': 0.182, 'compound': 0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.809, 'pos': 0.191, 'compound': 0.3612}, {'neg': 0.281, 'neu': 0.719, 'pos': 0.0, 'compound': -0.7783}, {'neg': 0.109, 'neu': 0.604, 'pos': 0.287, 'compound': 0.5719}, {'neg': 0.0, 'neu': 0.953, 'pos': 0.047, 'compound': 0.34}, {'neg': 0.0, 'neu': 0.727, 'pos': 0.273, 'compound': 0.7579}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.876, 'pos': 0.124, 'compound': 0.4019}, {'neg': 0.322, 'neu': 0.63, 'pos': 0.048, 'compound': -0.8126}, {'neg': 0.128, 'neu': 0.616, 'pos': 0.256, 'compound': 0.4019}, {'neg': 0.17, 'neu': 0.752, 'pos': 0.077, 'compound': -0.7717}, {'neg': 0.059, 'neu': 0.868, 'pos': 0.073, 'compound': -0.0772}, {'neg': 0.111, 'neu': 0.889, 'pos': 0.0, 'compound': -0.25}, {'neg': 0.0, 'neu': 0.557, 'pos': 0.443, 'compound': 0.979}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.166, 'neu': 0.489, 'pos': 0.345, 'compound': 0.7579}, {'neg': 0.0, 'neu': 0.705, 'pos': 0.295, 'compound': 0.5574}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.244, 'neu': 0.704, 'pos': 0.053, 'compound': -0.8225}, {'neg': 0.072, 'neu': 0.695, 'pos': 0.233, 'compound': 0.7184}, {'neg': 0.228, 'neu': 0.691, 'pos': 0.081, 'compound': -0.5994}, {'neg': 0.054, 'neu': 0.896, 'pos': 0.05, 'compound': -0.0516}, {'neg': 0.12, 'neu': 0.697, 'pos': 0.182, 'compound': 0.5132}, {'neg': 0.151, 'neu': 0.427, 'pos': 0.422, 'compound': 0.7579}, {'neg': 0.259, 'neu': 0.741, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.189, 'neu': 0.734, 'pos': 0.076, 'compound': -0.6124}, {'neg': 0.137, 'neu': 0.863, 'pos': 0.0, 'compound': -0.2263}, {'neg': 0.0, 'neu': 0.738, 'pos': 0.262, 'compound': 0.5994}, {'neg': 0.226, 'neu': 0.545, 'pos': 0.23, 'compound': 0.0258}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.701, 'pos': 0.299, 'compound': 0.7506}, {'neg': 0.172, 'neu': 0.828, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.365, 'neu': 0.598, 'pos': 0.037, 'compound': -0.9101}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.874, 'pos': 0.126, 'compound': 0.3182}, {'neg': 0.378, 'neu': 0.524, 'pos': 0.098, 'compound': -0.8795}, {'neg': 0.08, 'neu': 0.564, 'pos': 0.356, 'compound': 0.8519}, {'neg': 0.189, 'neu': 0.811, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.884, 'pos': 0.116, 'compound': 0.6369}, {'neg': 0.0, 'neu': 0.818, 'pos': 0.182, 'compound': 0.5859}, {'neg': 0.127, 'neu': 0.702, 'pos': 0.171, 'compound': 0.0}, {'neg': 0.31, 'neu': 0.597, 'pos': 0.094, 'compound': -0.765}, {'neg': 0.201, 'neu': 0.799, 'pos': 0.0, 'compound': -0.8519}, {'neg': 0.146, 'neu': 0.694, 'pos': 0.16, 'compound': 0.0516}, {'neg': 0.091, 'neu': 0.844, 'pos': 0.066, 'compound': -0.2023}, {'neg': 0.065, 'neu': 0.737, 'pos': 0.198, 'compound': 0.6486}, {'neg': 0.164, 'neu': 0.563, 'pos': 0.272, 'compound': 0.3182}, {'neg': 0.105, 'neu': 0.699, 'pos': 0.197, 'compound': 0.2732}, {'neg': 0.0, 'neu': 0.845, 'pos': 0.155, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.915, 'pos': 0.085, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.707, 'pos': 0.293, 'compound': 0.6597}, {'neg': 0.17, 'neu': 0.568, 'pos': 0.262, 'compound': 0.2732}, {'neg': 0.13, 'neu': 0.627, 'pos': 0.243, 'compound': 0.5719}, {'neg': 0.133, 'neu': 0.734, 'pos': 0.133, 'compound': 0.0}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.265, 'neu': 0.735, 'pos': 0.0, 'compound': -0.6597}, {'neg': 0.091, 'neu': 0.909, 'pos': 0.0, 'compound': -0.0772}, {'neg': 0.0, 'neu': 0.765, 'pos': 0.235, 'compound': 0.7717}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.108, 'neu': 0.64, 'pos': 0.252, 'compound': 0.5574}, {'neg': 0.181, 'neu': 0.736, 'pos': 0.083, 'compound': -0.7096}, {'neg': 0.175, 'neu': 0.702, 'pos': 0.123, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.73, 'pos': 0.27, 'compound': 0.5859}, {'neg': 0.164, 'neu': 0.836, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.889, 'pos': 0.111, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.816, 'pos': 0.184, 'compound': 0.7964}, {'neg': 0.195, 'neu': 0.755, 'pos': 0.05, 'compound': -0.8074}, {'neg': 0.19, 'neu': 0.698, 'pos': 0.112, 'compound': -0.25}, {'neg': 0.3, 'neu': 0.7, 'pos': 0.0, 'compound': -0.7184}, {'neg': 0.104, 'neu': 0.734, 'pos': 0.162, 'compound': 0.128}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.0, 'neu': 0.928, 'pos': 0.072, 'compound': 0.3612}, {'neg': 0.135, 'neu': 0.45, 'pos': 0.415, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.847, 'pos': 0.153, 'compound': 0.4404}, {'neg': 0.124, 'neu': 0.769, 'pos': 0.107, 'compound': -0.1027}, {'neg': 0.301, 'neu': 0.639, 'pos': 0.059, 'compound': -0.743}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.139, 'neu': 0.574, 'pos': 0.287, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.841, 'pos': 0.159, 'compound': 0.6486}, {'neg': 0.051, 'neu': 0.764, 'pos': 0.185, 'compound': 0.6369}, {'neg': 0.122, 'neu': 0.766, 'pos': 0.113, 'compound': -0.0516}, {'neg': 0.0, 'neu': 0.587, 'pos': 0.413, 'compound': 0.93}, {'neg': 0.096, 'neu': 0.712, 'pos': 0.192, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.775, 'pos': 0.225, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.878, 'pos': 0.122, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.862, 'pos': 0.138, 'compound': 0.34}, {'neg': 0.083, 'neu': 0.767, 'pos': 0.15, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.812, 'pos': 0.188, 'compound': 0.7717}, {'neg': 0.065, 'neu': 0.754, 'pos': 0.181, 'compound': 0.5574}, {'neg': 0.349, 'neu': 0.651, 'pos': 0.0, 'compound': -0.5994}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.583, 'pos': 0.417, 'compound': 0.9325}, {'neg': 0.08, 'neu': 0.73, 'pos': 0.19, 'compound': 0.4588}, {'neg': 0.175, 'neu': 0.78, 'pos': 0.045, 'compound': -0.743}, {'neg': 0.213, 'neu': 0.787, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.055, 'neu': 0.83, 'pos': 0.115, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.721, 'pos': 0.279, 'compound': 0.886}, {'neg': 0.329, 'neu': 0.671, 'pos': 0.0, 'compound': -0.8316}, {'neg': 0.0, 'neu': 0.756, 'pos': 0.244, 'compound': 0.5423}, {'neg': 0.0, 'neu': 0.97, 'pos': 0.03, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.753, 'pos': 0.247, 'compound': 0.9246}, {'neg': 0.347, 'neu': 0.563, 'pos': 0.089, 'compound': -0.9186}, {'neg': 0.074, 'neu': 0.741, 'pos': 0.185, 'compound': 0.5267}, {'neg': 0.104, 'neu': 0.772, 'pos': 0.124, 'compound': 0.128}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.039, 'neu': 0.793, 'pos': 0.168, 'compound': 0.7906}, {'neg': 0.0, 'neu': 0.811, 'pos': 0.189, 'compound': 0.4215}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.7003}, {'neg': 0.0, 'neu': 0.47, 'pos': 0.53, 'compound': 0.93}, {'neg': 0.116, 'neu': 0.704, 'pos': 0.18, 'compound': 0.2732}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.124, 'neu': 0.687, 'pos': 0.189, 'compound': 0.128}, {'neg': 0.0, 'neu': 0.656, 'pos': 0.344, 'compound': 0.9001}, {'neg': 0.114, 'neu': 0.629, 'pos': 0.257, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.782, 'pos': 0.218, 'compound': 0.5106}, {'neg': 0.0, 'neu': 0.639, 'pos': 0.361, 'compound': 0.9001}, {'neg': 0.0, 'neu': 0.635, 'pos': 0.365, 'compound': 0.7549}, {'neg': 0.0, 'neu': 0.781, 'pos': 0.219, 'compound': 0.8807}, {'neg': 0.0, 'neu': 0.696, 'pos': 0.304, 'compound': 0.5859}, {'neg': 0.0, 'neu': 0.585, 'pos': 0.415, 'compound': 0.7783}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.648, 'pos': 0.352, 'compound': 0.8271}, {'neg': 0.091, 'neu': 0.853, 'pos': 0.056, 'compound': -0.296}, {'neg': 0.304, 'neu': 0.696, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.0, 'neu': 0.823, 'pos': 0.177, 'compound': 0.8126}, {'neg': 0.07, 'neu': 0.767, 'pos': 0.164, 'compound': 0.4019}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.175, 'neu': 0.649, 'pos': 0.175, 'compound': 0.0}, {'neg': 0.05, 'neu': 0.904, 'pos': 0.046, 'compound': -0.0464}, {'neg': 0.197, 'neu': 0.657, 'pos': 0.146, 'compound': -0.4019}, {'neg': 0.184, 'neu': 0.816, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.339, 'neu': 0.661, 'pos': 0.0, 'compound': -0.8271}, {'neg': 0.167, 'neu': 0.833, 'pos': 0.0, 'compound': -0.3818}, {'neg': 0.187, 'neu': 0.623, 'pos': 0.191, 'compound': -0.2023}, {'neg': 0.129, 'neu': 0.67, 'pos': 0.201, 'compound': 0.1531}, {'neg': 0.063, 'neu': 0.937, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.891, 'pos': 0.109, 'compound': 0.4019}, {'neg': 0.063, 'neu': 0.632, 'pos': 0.305, 'compound': 0.9081}, {'neg': 0.0, 'neu': 0.788, 'pos': 0.212, 'compound': 0.5106}, {'neg': 0.093, 'neu': 0.809, 'pos': 0.098, 'compound': 0.0772}, {'neg': 0.19, 'neu': 0.673, 'pos': 0.138, 'compound': -0.4019}, {'neg': 0.0, 'neu': 0.722, 'pos': 0.278, 'compound': 0.9022}, {'neg': 0.13, 'neu': 0.533, 'pos': 0.337, 'compound': 0.5423}, {'neg': 0.183, 'neu': 0.817, 'pos': 0.0, 'compound': -0.794}, {'neg': 0.134, 'neu': 0.866, 'pos': 0.0, 'compound': -0.7351}, {'neg': 0.0, 'neu': 0.714, 'pos': 0.286, 'compound': 0.765}, {'neg': 0.136, 'neu': 0.704, 'pos': 0.161, 'compound': 0.128}, {'neg': 0.194, 'neu': 0.717, 'pos': 0.09, 'compound': -0.4404}, {'neg': 0.05, 'neu': 0.86, 'pos': 0.09, 'compound': 0.2732}, {'neg': 0.346, 'neu': 0.474, 'pos': 0.18, 'compound': -0.9042}, {'neg': 0.0, 'neu': 0.845, 'pos': 0.155, 'compound': 0.6908}, {'neg': 0.378, 'neu': 0.622, 'pos': 0.0, 'compound': -0.7243}, {'neg': 0.114, 'neu': 0.814, 'pos': 0.072, 'compound': -0.5106}, {'neg': 0.0, 'neu': 0.618, 'pos': 0.382, 'compound': 0.9337}, {'neg': 0.066, 'neu': 0.807, 'pos': 0.127, 'compound': 0.3612}, {'neg': 0.14, 'neu': 0.807, 'pos': 0.053, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.855, 'pos': 0.145, 'compound': 0.296}, {'neg': 0.0, 'neu': 0.829, 'pos': 0.171, 'compound': 0.5106}, {'neg': 0.217, 'neu': 0.683, 'pos': 0.1, 'compound': -0.4404}, {'neg': 0.116, 'neu': 0.797, 'pos': 0.088, 'compound': -0.34}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.355, 'neu': 0.546, 'pos': 0.098, 'compound': -0.5719}, {'neg': 0.06, 'neu': 0.549, 'pos': 0.391, 'compound': 0.959}, {'neg': 0.077, 'neu': 0.7, 'pos': 0.222, 'compound': 0.7003}, {'neg': 0.0, 'neu': 0.654, 'pos': 0.346, 'compound': 0.8779}, {'neg': 0.053, 'neu': 0.81, 'pos': 0.137, 'compound': 0.4588}, {'neg': 0.47, 'neu': 0.53, 'pos': 0.0, 'compound': -0.7269}, {'neg': 0.0, 'neu': 0.886, 'pos': 0.114, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.854, 'pos': 0.146, 'compound': 0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.402, 'neu': 0.598, 'pos': 0.0, 'compound': -0.8555}, {'neg': 0.113, 'neu': 0.711, 'pos': 0.176, 'compound': 0.3612}, {'neg': 0.135, 'neu': 0.674, 'pos': 0.191, 'compound': 0.25}, {'neg': 0.0, 'neu': 0.682, 'pos': 0.318, 'compound': 0.8658}, {'neg': 0.145, 'neu': 0.699, 'pos': 0.156, 'compound': 0.0516}, {'neg': 0.169, 'neu': 0.664, 'pos': 0.167, 'compound': 0.2263}, {'neg': 0.119, 'neu': 0.705, 'pos': 0.176, 'compound': 0.0772}, {'neg': 0.0, 'neu': 0.811, 'pos': 0.189, 'compound': 0.6369}, {'neg': 0.164, 'neu': 0.687, 'pos': 0.149, 'compound': -0.1779}, {'neg': 0.0, 'neu': 0.959, 'pos': 0.041, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.662, 'pos': 0.338, 'compound': 0.8271}, {'neg': 0.066, 'neu': 0.765, 'pos': 0.169, 'compound': 0.5994}, {'neg': 0.0, 'neu': 0.737, 'pos': 0.263, 'compound': 0.6908}, {'neg': 0.0, 'neu': 0.78, 'pos': 0.22, 'compound': 0.7351}, {'neg': 0.183, 'neu': 0.792, 'pos': 0.025, 'compound': -0.802}, {'neg': 0.0, 'neu': 0.841, 'pos': 0.159, 'compound': 0.6249}, {'neg': 0.134, 'neu': 0.597, 'pos': 0.269, 'compound': 0.4019}, {'neg': 0.0, 'neu': 0.701, 'pos': 0.299, 'compound': 0.9393}, {'neg': 0.21, 'neu': 0.708, 'pos': 0.082, 'compound': -0.7845}, {'neg': 0.0, 'neu': 0.585, 'pos': 0.415, 'compound': 0.9517}, {'neg': 0.0, 'neu': 0.723, 'pos': 0.277, 'compound': 0.6705}, {'neg': 0.0, 'neu': 0.787, 'pos': 0.213, 'compound': 0.4215}, {'neg': 0.12, 'neu': 0.703, 'pos': 0.177, 'compound': 0.3626}, {'neg': 0.146, 'neu': 0.854, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.062, 'neu': 0.814, 'pos': 0.124, 'compound': 0.3818}, {'neg': 0.203, 'neu': 0.584, 'pos': 0.213, 'compound': -0.34}, {'neg': 0.119, 'neu': 0.881, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.277, 'neu': 0.658, 'pos': 0.066, 'compound': -0.8519}, {'neg': 0.067, 'neu': 0.794, 'pos': 0.139, 'compound': 0.4404}, {'neg': 0.094, 'neu': 0.906, 'pos': 0.0, 'compound': -0.4019}, {'neg': 0.159, 'neu': 0.525, 'pos': 0.315, 'compound': 0.836}, {'neg': 0.0, 'neu': 0.842, 'pos': 0.158, 'compound': 0.4939}, {'neg': 0.0, 'neu': 0.727, 'pos': 0.273, 'compound': 0.4588}, {'neg': 0.0, 'neu': 0.523, 'pos': 0.477, 'compound': 0.9738}, {'neg': 0.108, 'neu': 0.892, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.189, 'neu': 0.811, 'pos': 0.0, 'compound': -0.5423}, {'neg': 0.116, 'neu': 0.832, 'pos': 0.052, 'compound': -0.4767}, {'neg': 0.0, 'neu': 0.509, 'pos': 0.491, 'compound': 0.8625}, {'neg': 0.066, 'neu': 0.874, 'pos': 0.061, 'compound': -0.0516}, {'neg': 0.121, 'neu': 0.879, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.156, 'neu': 0.577, 'pos': 0.267, 'compound': 0.7351}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.064, 'neu': 0.73, 'pos': 0.206, 'compound': 0.6808}, {'neg': 0.211, 'neu': 0.696, 'pos': 0.093, 'compound': -0.6808}, {'neg': 0.0, 'neu': 0.883, 'pos': 0.117, 'compound': 0.2755}, {'neg': 0.099, 'neu': 0.733, 'pos': 0.168, 'compound': 0.3182}, {'neg': 0.072, 'neu': 0.817, 'pos': 0.111, 'compound': 0.0516}, {'neg': 0.162, 'neu': 0.838, 'pos': 0.0, 'compound': -0.4404}, {'neg': 0.193, 'neu': 0.711, 'pos': 0.096, 'compound': -0.4404}, {'neg': 0.136, 'neu': 0.603, 'pos': 0.261, 'compound': 0.3612}, {'neg': 0.192, 'neu': 0.659, 'pos': 0.148, 'compound': -0.2023}, {'neg': 0.119, 'neu': 0.706, 'pos': 0.174, 'compound': 0.3612}, {'neg': 0.0, 'neu': 0.909, 'pos': 0.091, 'compound': 0.0516}, {'neg': 0.247, 'neu': 0.646, 'pos': 0.107, 'compound': -0.7184}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.118, 'neu': 0.742, 'pos': 0.14, 'compound': 0.3309}, {'neg': 0.0, 'neu': 0.36, 'pos': 0.64, 'compound': 0.9217}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.139, 'neu': 0.861, 'pos': 0.0, 'compound': -0.2732}, {'neg': 0.104, 'neu': 0.717, 'pos': 0.179, 'compound': 0.2732}, {'neg': 0.209, 'neu': 0.791, 'pos': 0.0, 'compound': -0.6486}, {'neg': 0.163, 'neu': 0.788, 'pos': 0.048, 'compound': -0.7184}, {'neg': 0.0, 'neu': 0.602, 'pos': 0.398, 'compound': 0.9313}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.154, 'neu': 0.714, 'pos': 0.132, 'compound': -0.1027}, {'neg': 0.187, 'neu': 0.727, 'pos': 0.087, 'compound': -0.4404}, {'neg': 0.036, 'neu': 0.651, 'pos': 0.314, 'compound': 0.9443}, {'neg': 0.158, 'neu': 0.8, 'pos': 0.042, 'compound': -0.7269}, {'neg': 0.344, 'neu': 0.656, 'pos': 0.0, 'compound': -0.8885}, {'neg': 0.0, 'neu': 0.945, 'pos': 0.055, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.846, 'pos': 0.154, 'compound': 0.4939}, {'neg': 0.109, 'neu': 0.544, 'pos': 0.347, 'compound': 0.643}, {'neg': 0.135, 'neu': 0.769, 'pos': 0.096, 'compound': -0.25}, {'neg': 0.0, 'neu': 0.869, 'pos': 0.131, 'compound': 0.2411}, {'neg': 0.0, 'neu': 0.733, 'pos': 0.267, 'compound': 0.4588}, {'neg': 0.139, 'neu': 0.623, 'pos': 0.238, 'compound': 0.6808}, {'neg': 0.0, 'neu': 0.927, 'pos': 0.073, 'compound': 0.2023}, {'neg': 0.0, 'neu': 0.789, 'pos': 0.211, 'compound': 0.4939}, {'neg': 0.114, 'neu': 0.763, 'pos': 0.123, 'compound': 0.0516}, {'neg': 0.0, 'neu': 0.512, 'pos': 0.488, 'compound': 0.9766}, {'neg': 0.145, 'neu': 0.855, 'pos': 0.0, 'compound': -0.296}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.099, 'neu': 0.802, 'pos': 0.099, 'compound': -0.4588}, {'neg': 0.297, 'neu': 0.703, 'pos': 0.0, 'compound': -0.8658}, {'neg': 0.0, 'neu': 0.61, 'pos': 0.39, 'compound': 0.8225}, {'neg': 0.086, 'neu': 0.584, 'pos': 0.331, 'compound': 0.743}, {'neg': 0.142, 'neu': 0.858, 'pos': 0.0, 'compound': -0.8442}, {'neg': 0.051, 'neu': 0.846, 'pos': 0.102, 'compound': 0.3818}, {'neg': 0.0, 'neu': 0.924, 'pos': 0.076, 'compound': 0.3182}, {'neg': 0.223, 'neu': 0.592, 'pos': 0.185, 'compound': -0.4939}, {'neg': 0.0, 'neu': 0.75, 'pos': 0.25, 'compound': 0.7184}, {'neg': 0.115, 'neu': 0.847, 'pos': 0.037, 'compound': -0.5106}, {'neg': 0.091, 'neu': 0.842, 'pos': 0.067, 'compound': -0.1779}, {'neg': 0.171, 'neu': 0.829, 'pos': 0.0, 'compound': -0.4767}, {'neg': 0.183, 'neu': 0.738, 'pos': 0.079, 'compound': -0.5267}, {'neg': 0.225, 'neu': 0.641, 'pos': 0.133, 'compound': -0.743}, {'neg': 0.261, 'neu': 0.588, 'pos': 0.151, 'compound': -0.25}, {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}, {'neg': 0.102, 'neu': 0.852, 'pos': 0.046, 'compound': -0.4019}, {'neg': 0.087, 'neu': 0.727, 'pos': 0.187, 'compound': 0.4404}, {'neg': 0.183, 'neu': 0.419, 'pos': 0.398, 'compound': 0.4767}, {'neg': 0.0, 'neu': 0.575, 'pos': 0.425, 'compound': 0.8625}, {'neg': 0.173, 'neu': 0.641, 'pos': 0.186, 'compound': 0.0516}]\n"]}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UZO74L6JJ_XV","executionInfo":{"status":"ok","timestamp":1734340977981,"user_tz":-420,"elapsed":340,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"b8cb23e6-1b27-4588-bbaf-45d8d89a16d7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score                                         data_fixed  Compound_score\n","0      3  usual love app experienc mani bug recent big b...         -0.0772\n","1      1  mani ad can even see friend profil sinc get cl...         -0.4404\n","2      2  start go hill whenev want upload post show pic...          0.8225\n","3      3  love app honestli might good connect friend co...          0.8750\n","4      3  i'v reduc usag app especi busi constantli enco...         -0.8860"],"text/html":["\n","  <div id=\"df-bbd89afa-a700-4083-86d0-d46a42d6f5d1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>data_fixed</th>\n","      <th>Compound_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>usual love app experienc mani bug recent big b...</td>\n","      <td>-0.0772</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>mani ad can even see friend profil sinc get cl...</td>\n","      <td>-0.4404</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>start go hill whenev want upload post show pic...</td>\n","      <td>0.8225</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>love app honestli might good connect friend co...</td>\n","      <td>0.8750</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>i'v reduc usag app especi busi constantli enco...</td>\n","      <td>-0.8860</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbd89afa-a700-4083-86d0-d46a42d6f5d1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bbd89afa-a700-4083-86d0-d46a42d6f5d1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bbd89afa-a700-4083-86d0-d46a42d6f5d1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1eb0ea13-c635-45a6-9c1b-d88a355197f2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1eb0ea13-c635-45a6-9c1b-d88a355197f2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1eb0ea13-c635-45a6-9c1b-d88a355197f2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"data_fixed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"video even play stick frozen black screen also bring back paus need mute tri hold paus sometim work\",\n          \"tri log goe blank even know I hack bad i'v tri commun support avail frustrat annoy moment\",\n          \"ig realli respect android user account consist exclud new featur glitch often current can much stori without get error never abl use mini add featur peopl rare use squar one can add photo still upset ig stop allow carousel util portrait landscap post engag way lot\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Compound_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5533672248036214,\n        \"min\": -0.9698,\n        \"max\": 0.9924,\n        \"num_unique_values\": 566,\n        \"samples\": [\n          -0.797,\n          0.8465,\n          0.3239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["data.loc[data['Compound_score'] > 0.05, 'Sentiment'] = 'Positive'\n","data.loc[data['Compound_score'] < -0.05, 'Sentiment'] = 'Negative'\n","data.loc[(data['Compound_score'] >= -0.05) & (data['Compound_score'] <= 0.05), 'Sentiment'] = 'Neutral'\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zBllYX8PKEO_","executionInfo":{"status":"ok","timestamp":1734340982678,"user_tz":-420,"elapsed":321,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"091c3763-6511-4b5a-e257-57d8958c64e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score                                         data_fixed  Compound_score  \\\n","0      3  usual love app experienc mani bug recent big b...         -0.0772   \n","1      1  mani ad can even see friend profil sinc get cl...         -0.4404   \n","2      2  start go hill whenev want upload post show pic...          0.8225   \n","3      3  love app honestli might good connect friend co...          0.8750   \n","4      3  i'v reduc usag app especi busi constantli enco...         -0.8860   \n","\n","  Sentiment  \n","0  Negative  \n","1  Negative  \n","2  Positive  \n","3  Positive  \n","4  Negative  "],"text/html":["\n","  <div id=\"df-117c209f-10dd-42e6-9ffe-2ca22760ac79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>data_fixed</th>\n","      <th>Compound_score</th>\n","      <th>Sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>usual love app experienc mani bug recent big b...</td>\n","      <td>-0.0772</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>mani ad can even see friend profil sinc get cl...</td>\n","      <td>-0.4404</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>start go hill whenev want upload post show pic...</td>\n","      <td>0.8225</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>love app honestli might good connect friend co...</td>\n","      <td>0.8750</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>i'v reduc usag app especi busi constantli enco...</td>\n","      <td>-0.8860</td>\n","      <td>Negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-117c209f-10dd-42e6-9ffe-2ca22760ac79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-117c209f-10dd-42e6-9ffe-2ca22760ac79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-117c209f-10dd-42e6-9ffe-2ca22760ac79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8d1d14f2-dda0-4f47-9002-9672767bb622\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d1d14f2-dda0-4f47-9002-9672767bb622')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8d1d14f2-dda0-4f47-9002-9672767bb622 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"data_fixed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4985,\n        \"samples\": [\n          \"video even play stick frozen black screen also bring back paus need mute tri hold paus sometim work\",\n          \"tri log goe blank even know I hack bad i'v tri commun support avail frustrat annoy moment\",\n          \"ig realli respect android user account consist exclud new featur glitch often current can much stori without get error never abl use mini add featur peopl rare use squar one can add photo still upset ig stop allow carousel util portrait landscap post engag way lot\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Compound_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5533672248036214,\n        \"min\": -0.9698,\n        \"max\": 0.9924,\n        \"num_unique_values\": 566,\n        \"samples\": [\n          -0.797,\n          0.8465,\n          0.3239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sentiment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Negative\",\n          \"Positive\",\n          \"Neutral\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data.to_csv('SentimentLabeledInstagram1.csv', index = False)"],"metadata":{"id":"_iue5kTyKHrf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#4. Visualisasi sebaran data"],"metadata":{"id":"Oetj9moOKJvK"}},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","# Muat data yang sudah dilabeli\n","file_path = '/content/SentimentLabeledInstagram1.csv'\n","data = pd.read_csv(file_path)\n","# Mengatur gaya untuk visualisasi\n","sns.set(style=\"whitegrid\")\n","# 2. Bar Plot untuk Distribusi Label Sentimen\n","plt.figure(figsize=(8, 6))\n","sns.countplot(x='Sentiment', data=data, palette='Set2')\n","plt.title('Distribusi Label Sentimen', fontsize=16)\n","plt.xlabel('Sentimen', fontsize=12)\n","plt.ylabel('Jumlah', fontsize=12)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":662},"id":"4RR3eNXPKOHq","executionInfo":{"status":"ok","timestamp":1734341000430,"user_tz":-420,"elapsed":6315,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"59f5eeb9-5d64-4b28-c388-abf7a46c8a83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-144bfd21ec70>:11: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.countplot(x='Sentiment', data=data, palette='Set2')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Menghapus data netral untuk kebutuhan klasifikasi\n","# Load dataset\n","file_path = '/content/SentimentLabeledInstagram1.csv'\n","data = pd.read_csv(file_path)\n","\n","# Hapus kelas netral\n","data = data[data['Sentiment'] != 'Neutral']  # Filter data untuk menghapus\n","\n","data.to_csv('SentimentLabeledInstagram2.csv', index = False)\n"],"metadata":{"id":"Xe0TFhqEKXbt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","# Muat data yang sudah dilabeli\n","file_path = '/content/SentimentLabeledInstagram2.csv'\n","data = pd.read_csv(file_path)\n","# Mengatur gaya untuk visualisasi\n","sns.set(style=\"whitegrid\")\n","# 1. Bar Plot untuk Distribusi Label Sentimen\n","plt.figure(figsize=(8, 6))\n","sns.countplot(x='Sentiment', data=data, palette='Set2')\n","plt.title('Distribusi Label Sentimen', fontsize=16)\n","plt.xlabel('Sentimen', fontsize=12)\n","plt.ylabel('Jumlah', fontsize=12)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":662},"id":"gxZWmnQuKcHG","executionInfo":{"status":"ok","timestamp":1734341019434,"user_tz":-420,"elapsed":1318,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"e8030822-9c7c-4f0e-ffc4-b518603294dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-c4c9e52c2a41>:11: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.countplot(x='Sentiment', data=data, palette='Set2')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Distribusi skor compound"],"metadata":{"id":"jdH8paksizxF"}},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Muat data yang sudah dilabeli\n","file_path = '/content/SentimentLabeledInstagram2.csv'\n","data = pd.read_csv(file_path)\n","\n","# Mengatur gaya untuk visualisasi\n","sns.set(style=\"whitegrid\")\n","\n","# 2. Histogram untuk distribusi Skor Compound\n","plt.figure(figsize=(10, 6))\n","sns.histplot(data['Compound_score'], bins=30, kde=True, color='blue')\n","plt.title('Distribusi Skor Compound', fontsize=16)\n","plt.xlabel('Skor Compound', fontsize=12)\n","plt.ylabel('Frekuensi', fontsize=12)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":575},"id":"2EiXRhOBPhv1","executionInfo":{"status":"ok","timestamp":1734341026678,"user_tz":-420,"elapsed":632,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"91a3f3d8-cd00-4840-a6ca-e32cdfc6617f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Visualisasi kata terbanyak"],"metadata":{"id":"uA5LY5Eei3jt"}},{"cell_type":"code","source":["#Frekuensi Kata Terbanyak\n","from collections import Counter\n","\n","# Gabungkan semua teks dari kolom 'data_fixed'\n","all_text = ' '.join(data['data_fixed'].astype(str)) # Menggabungkan semua teks dari kolom 'data_fixed'\n","\n","# Tokenisasi kata\n","words = all_text.split()\n","\n","# Hitung frekuensi kata\n","word_counts = Counter(words)\n","\n","# Ambil 10 kata paling sering muncul\n","most_common_words = word_counts.most_common(10)\n","common_words, counts = zip(*most_common_words)\n","\n","# Visualisasi grafik frekuensi kata terbanyak\n","sns.barplot(x=list(counts), y=list(common_words), palette='coolwarm')\n","plt.title('Frekuensi Kata Terbanyak')\n","plt.xlabel('Jumlah')\n","plt.ylabel('Kata')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":567},"id":"96pEphLvW9Ai","executionInfo":{"status":"ok","timestamp":1734341034612,"user_tz":-420,"elapsed":644,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"6288655d-5f74-49be-8bf5-e2ffaa234825"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-10c36e4972c7>:18: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x=list(counts), y=list(common_words), palette='coolwarm')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Visualisasi Wordcloud"],"metadata":{"id":"aDU_bRkZPZf2"}},{"cell_type":"code","source":["#Wordcloud\n","from wordcloud import WordCloud\n","import matplotlib.pyplot as plt\n","\n","# Menggabungkan semua teks untuk visualisasi\n","all_text = ' '.join(data['data_fixed'])\n","\n","# Membuat WordCloud\n","wordcloud = WordCloud(width=800, height=400, background_color='white').generate(all_text)\n","\n","# Menampilkan WordCloud\n","plt.figure(figsize=(10, 5))\n","plt.imshow(wordcloud, interpolation='bilinear')\n","plt.axis('off')  # Menyembunyikan sumbu\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":422},"id":"iQybKlLBPzMy","executionInfo":{"status":"ok","timestamp":1734341071423,"user_tz":-420,"elapsed":3315,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"6840bc88-ea1e-4f90-cfb3-9c989a39b2b4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#5. Pembobotan dan Modelling"],"metadata":{"id":"VaJlEbKiKm_b"}},{"cell_type":"markdown","source":["Percobaan menggunakan SVM (Kernel Linier)"],"metadata":{"id":"iY6FmvhjKtGt"}},{"cell_type":"markdown","source":["Menggunakan TF-IDF dan SVM"],"metadata":{"id":"Ok0MOKQZL5EK"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.svm import SVC\n","from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from imblearn.over_sampling import SMOTE\n","import matplotlib.pyplot as plt\n","\n","# Muat data yang sudah dilabeli\n","file_path = '/content/SentimentLabeledInstagram2.csv'\n","data = pd.read_csv(file_path)\n","\n","# Definisikan fitur dan label\n","X = data['data_fixed']\n","y = data['Sentiment']\n","\n","# Konversi teks menjadi representasi numerik menggunakan TF-IDF\n","vectorizer = TfidfVectorizer()\n","X_vectorized = vectorizer.fit_transform(X)\n","\n","# Pisahkan data menjadi set pelatihan dan pengujian\n","X_train, X_test, y_train, y_test = train_test_split(X_vectorized, y, test_size=0.2, random_state=42)\n","\n","# SMOTE untuk oversampling\n","smote = SMOTE(random_state=42)\n","X_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)\n","\n","# Tuning Parameter\n","param_grid = {\n","    'C': [0.01, 0.1, 1, 10, 100],\n","    'kernel': ['linear', 'rbf', 'poly'],\n","    'gamma': ['scale', 'auto'],  # Hanya relevan untuk 'rbf' dan 'poly'\n","    'class_weight': [None, 'balanced']\n","}\n","\n","# Grid Search\n","grid_search = GridSearchCV(SVC(), param_grid, cv=5, scoring='accuracy', n_jobs=-1)\n","grid_search.fit(X_train_resampled, y_train_resampled)\n","\n","# Model terbaik\n","best_model = grid_search.best_estimator_\n","print(f\"Best Parameters: {grid_search.best_params_}\")\n","\n","# Prediksi dengan model terbaik\n","y_pred_best = best_model.predict(X_test)\n","\n","# Evaluasi\n","cm = confusion_matrix(y_test, y_pred_best)\n","ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=best_model.classes_).plot(cmap=plt.cm.Blues)\n","plt.title(\"Confusion Matrix - Best SVM\")\n","plt.show()\n","\n","print(\"Classification report dengan parameter terbaik:\")\n","print(classification_report(y_test, y_pred_best))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":671},"id":"kU4nsV6Dw8Dz","executionInfo":{"status":"ok","timestamp":1734344807736,"user_tz":-420,"elapsed":1161315,"user":{"displayName":"Annisa Nur Pratiwi","userId":"02916830468904566649"}},"outputId":"127f7b1c-f332-4d3a-b5e2-9d0e82d89954"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Parameters: {'C': 10, 'class_weight': None, 'gamma': 'scale', 'kernel': 'linear'}\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Classification report dengan parameter terbaik:\n","              precision    recall  f1-score   support\n","\n","    Negative       0.84      0.84      0.84       342\n","    Positive       0.90      0.90      0.90       566\n","\n","    accuracy                           0.88       908\n","   macro avg       0.87      0.87      0.87       908\n","weighted avg       0.88      0.88      0.88       908\n","\n"]}]}]}